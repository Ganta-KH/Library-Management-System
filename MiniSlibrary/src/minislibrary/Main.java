package minislibrary;

import java.awt.Color;
import java.awt.Toolkit;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import static java.lang.Thread.sleep;
import java.net.Socket;
import java.util.Date;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class Main extends javax.swing.JFrame {

    Thread t;
    String id_exmp;
    Login l = new Login();
    int[] nbR;
    String[] Sread;
    ControlUI CUI = new ControlUI();   
    
    static Socket monClient ; 
    static ObjectOutputStream Obout;
    static ObjectInputStream Obin;
    
    public boolean shutDown = true;
    //--------------------------------------------------------------------------------------------------------------------//
    
    public void serverDown()
     {
         if(shutDown)
         {
            Login l = new Login();
            this.setVisible(false);
            l.setVisible(true);
            JOptionPane.showMessageDialog(null, "There was a problem in the server!"); 
            shutDown = false;
         }
     }
    
    private void icon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("LMS.png")));
    }
    
    //--------------------------------------------------------------------------------------------------------------------//
    
    public Main() {
        icon();
        initComponents();
        
        parentMain.removeAll();
        parentMain.add(home);
        parentMain.repaint();
        parentMain.revalidate();
        
        userName.setText(l.name);
        System.out.println(l.id_adminDatabase);
        
        try {
            monClient = new Socket(l.ipAdres,5000);
            Obout= new ObjectOutputStream(monClient.getOutputStream());
            Obin= new ObjectInputStream(monClient.getInputStream());    
            shutDown = true;
        } catch (IOException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        t = new Thread() {
            public void run() {
                try {
                    while (true) {
                        laDate.setText(new SimpleDateFormat("EEEEE dd MMMMM yyyy   HH:mm:ss").format(new Date()));
                        sleep(1000);
                    }                   
                } catch (Exception e) {
                    laDate.setText("Error");
                }
            }
        };
        t.start();
        
        try {
            Obout.writeObject("main home");
            String[] ReplyMS;
            ReplyMS = ((String)Obin.readObject()).split(" ");

            numberOfBooks.setText(ReplyMS[0]);
            numberOfDocuments.setText(ReplyMS[1]);
            numberOfUsers.setText(ReplyMS[2]);
            numberOfAdmins.setText(ReplyMS[3]);
            numberOfLoanedBooks.setText(ReplyMS[4]);
            numberOfLoanedDocuments.setText(ReplyMS[5]);
            numberOfAdminsOnline.setText(ReplyMS[6]);

            Obout.writeObject("main setLateBook");
            Obout.writeObject("main setLateDoc");
            Obout.writeObject("main endBan");

            Obout.writeObject("main activeUser");

            int nbrActiveUser = (int)Obin.readObject();

            numberOfUsersActive.setText(nbrActiveUser+"");

            Obout.writeObject("main nbrLateUser");
            int nbrLateUserNotPunished = (int)Obin.readObject();
            if (nbrLateUserNotPunished == 1) {
                notificationAlert.setText("There is one user late to return book or document.");
                goPu.setText("Please go to Punishment to take action");
            } else if (nbrLateUserNotPunished > 1) {
                notificationAlert.setText("There is "+nbrLateUserNotPunished+" users late to return book or document.");
                goPu.setText("Please go to Punishment to take action");
            } else {
               notificationAlert.setText("");
               goPu.setText("");
            }
        } catch (Exception e) {
            serverDown();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        panelHome = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        selectHome = new javax.swing.JPanel();
        panelCatalogue = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        selectCatalogue = new javax.swing.JPanel();
        panelLoan = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        selectLoan = new javax.swing.JPanel();
        panelUsers = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        selectUsers = new javax.swing.JPanel();
        panelPunishment = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        selectPunishment = new javax.swing.JPanel();
        panelReturn = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        selectReturn = new javax.swing.JPanel();
        panelAdmins = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        selectAdmins = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        laDate = new javax.swing.JLabel();
        userName = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        closePanel = new javax.swing.JPanel();
        closeIcon = new javax.swing.JLabel();
        maxPanel = new javax.swing.JPanel();
        jLabel133 = new javax.swing.JLabel();
        minPanel = new javax.swing.JPanel();
        jLabel134 = new javax.swing.JLabel();
        parentMain = new javax.swing.JPanel();
        home = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel4 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        numberOfBooks = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        numberOfDocuments = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        numberOfUsers = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        numberOfAdmins = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        numberOfLoanedBooks = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        numberOfLoanedDocuments = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        numberOfUsersActive = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        numberOfAdminsOnline = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        notificationAlert = new javax.swing.JLabel();
        goPu = new javax.swing.JLabel();
        reloadPanel = new javax.swing.JPanel();
        jLabel131 = new javax.swing.JLabel();
        catalogue = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        book = new javax.swing.JPanel();
        jLabel38 = new javax.swing.JLabel();
        searchBarBook = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        bookSearchType = new javax.swing.JComboBox<>();
        jLabel61 = new javax.swing.JLabel();
        bookSearchStatusType = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        BookjTable = new javax.swing.JTable();
        addBook = new javax.swing.JLabel();
        editBook = new javax.swing.JLabel();
        deleteBook = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jPanel16 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        bookTitle = new javax.swing.JTextField();
        jSeparator20 = new javax.swing.JSeparator();
        bookAutor = new javax.swing.JTextField();
        jSeparator24 = new javax.swing.JSeparator();
        jPanel18 = new javax.swing.JPanel();
        nbrBookCopy = new javax.swing.JSpinner();
        idbookCatalogue = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();
        bookCat = new javax.swing.JComboBox<>();
        bookCategory = new javax.swing.JTextField();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel40 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jPanel19 = new javax.swing.JPanel();
        bookStatus = new javax.swing.JComboBox<>();
        bookState = new javax.swing.JComboBox<>();
        bookPurchase = new com.toedter.calendar.JDateChooser();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jPanel20 = new javax.swing.JPanel();
        bookISBN = new javax.swing.JTextField();
        jSeparator12 = new javax.swing.JSeparator();
        bookOrderNumber = new javax.swing.JTextField();
        jSeparator6 = new javax.swing.JSeparator();
        bookValue = new javax.swing.JTextField();
        jSeparator28 = new javax.swing.JSeparator();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabel128 = new javax.swing.JLabel();
        document = new javax.swing.JPanel();
        jLabel51 = new javax.swing.JLabel();
        searchBarDocument = new javax.swing.JTextField();
        jLabel52 = new javax.swing.JLabel();
        documentSearchType = new javax.swing.JComboBox<>();
        jLabel62 = new javax.swing.JLabel();
        documentSearchStatusType = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        documentjTable = new javax.swing.JTable();
        addDocument = new javax.swing.JLabel();
        editDocument = new javax.swing.JLabel();
        deleteDocument = new javax.swing.JLabel();
        cancelDocument = new javax.swing.JLabel();
        jPanel21 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        jLabel54 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        documentEditor = new javax.swing.JTextField();
        documentTitle = new javax.swing.JTextField();
        jSeparator7 = new javax.swing.JSeparator();
        jSeparator8 = new javax.swing.JSeparator();
        jLabel66 = new javax.swing.JLabel();
        idDocumentCatalogue = new javax.swing.JTextField();
        jSeparator14 = new javax.swing.JSeparator();
        jPanel23 = new javax.swing.JPanel();
        nbrDocCopy = new javax.swing.JSpinner();
        documentID = new javax.swing.JTextField();
        jSeparator9 = new javax.swing.JSeparator();
        documentCat = new javax.swing.JComboBox<>();
        documentCategory = new javax.swing.JTextField();
        jSeparator10 = new javax.swing.JSeparator();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        jPanel24 = new javax.swing.JPanel();
        documentStatus = new javax.swing.JComboBox<>();
        documentState = new javax.swing.JComboBox<>();
        documentPublicationDate = new com.toedter.calendar.JDateChooser();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jPanel25 = new javax.swing.JPanel();
        documentOrderNumber = new javax.swing.JTextField();
        jSeparator11 = new javax.swing.JSeparator();
        docValue = new javax.swing.JTextField();
        jSeparator29 = new javax.swing.JSeparator();
        jLabel64 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jLabel129 = new javax.swing.JLabel();
        documentPurchaseDate = new com.toedter.calendar.JDateChooser();
        users = new javax.swing.JPanel();
        jLabel70 = new javax.swing.JLabel();
        searchBarUser = new javax.swing.JTextField();
        jLabel71 = new javax.swing.JLabel();
        userSearchType = new javax.swing.JComboBox<>();
        jLabel72 = new javax.swing.JLabel();
        userState = new javax.swing.JComboBox<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        userJTable = new javax.swing.JTable();
        addUser = new javax.swing.JLabel();
        editUser = new javax.swing.JLabel();
        deleteUser = new javax.swing.JLabel();
        cancelUser = new javax.swing.JLabel();
        jPanel26 = new javax.swing.JPanel();
        jPanel27 = new javax.swing.JPanel();
        jLabel74 = new javax.swing.JLabel();
        userID = new javax.swing.JTextField();
        jSeparator13 = new javax.swing.JSeparator();
        jPanel28 = new javax.swing.JPanel();
        userFirstName = new javax.swing.JTextField();
        jLabel75 = new javax.swing.JLabel();
        jSeparator15 = new javax.swing.JSeparator();
        jPanel29 = new javax.swing.JPanel();
        userLastName = new javax.swing.JTextField();
        jLabel76 = new javax.swing.JLabel();
        jSeparator16 = new javax.swing.JSeparator();
        jPanel30 = new javax.swing.JPanel();
        userTypeF = new javax.swing.JComboBox<>();
        jLabel79 = new javax.swing.JLabel();
        admins = new javax.swing.JPanel();
        jLabel73 = new javax.swing.JLabel();
        searchBarAdmin = new javax.swing.JTextField();
        jLabel77 = new javax.swing.JLabel();
        adminSearchType = new javax.swing.JComboBox<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        adminJTable = new javax.swing.JTable();
        addAdmin = new javax.swing.JLabel();
        editAdmin = new javax.swing.JLabel();
        deleteAdmin = new javax.swing.JLabel();
        cancelAdmin = new javax.swing.JLabel();
        jPanel31 = new javax.swing.JPanel();
        jPanel32 = new javax.swing.JPanel();
        jLabel53 = new javax.swing.JLabel();
        adminID = new javax.swing.JTextField();
        jSeparator21 = new javax.swing.JSeparator();
        jLabel67 = new javax.swing.JLabel();
        jSeparator17 = new javax.swing.JSeparator();
        adminUsername = new javax.swing.JTextField();
        jPanel33 = new javax.swing.JPanel();
        jLabel68 = new javax.swing.JLabel();
        jLabel107 = new javax.swing.JLabel();
        adminLastName = new javax.swing.JTextField();
        jSeparator18 = new javax.swing.JSeparator();
        adminFirstName = new javax.swing.JTextField();
        jSeparator22 = new javax.swing.JSeparator();
        jPanel34 = new javax.swing.JPanel();
        jLabel108 = new javax.swing.JLabel();
        jSeparator23 = new javax.swing.JSeparator();
        jLabel69 = new javax.swing.JLabel();
        jSeparator19 = new javax.swing.JSeparator();
        adminType = new javax.swing.JComboBox<>();
        jLabel80 = new javax.swing.JLabel();
        adminPassword = new javax.swing.JPasswordField();
        adminPasswordC = new javax.swing.JPasswordField();
        loan = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        BookL = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        loanBookUserJTable = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        loanBookJTable = new javax.swing.JTable();
        jPanel40 = new javax.swing.JPanel();
        jLabel89 = new javax.swing.JLabel();
        bkLoanUserID = new javax.swing.JLabel();
        jLabel90 = new javax.swing.JLabel();
        bkLoanFirstName = new javax.swing.JLabel();
        jLabel91 = new javax.swing.JLabel();
        bkLoanLastName = new javax.swing.JLabel();
        bkLoanTitle = new javax.swing.JLabel();
        jLabel92 = new javax.swing.JLabel();
        jLabel93 = new javax.swing.JLabel();
        bkLoanAutor = new javax.swing.JLabel();
        jLabel94 = new javax.swing.JLabel();
        bkLoanIdCata = new javax.swing.JLabel();
        bkLoanReDate = new com.toedter.calendar.JDateChooser();
        jLabel95 = new javax.swing.JLabel();
        bkLoanDate = new javax.swing.JLabel();
        jLabel96 = new javax.swing.JLabel();
        cancelLoanBook = new javax.swing.JLabel();
        loanBook = new javax.swing.JLabel();
        jPanel44 = new javax.swing.JPanel();
        jPanel45 = new javax.swing.JPanel();
        loanBookSearchType = new javax.swing.JComboBox<>();
        jLabel85 = new javax.swing.JLabel();
        loanBookSearchBar = new javax.swing.JTextField();
        jPanel46 = new javax.swing.JPanel();
        loanUserSearchType = new javax.swing.JComboBox<>();
        jlabel = new javax.swing.JLabel();
        loanUserSearchBar = new javax.swing.JTextField();
        documentL = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        loanDocumentUserJTable = new javax.swing.JTable();
        jScrollPane9 = new javax.swing.JScrollPane();
        loanDocumentJTable = new javax.swing.JTable();
        jPanel43 = new javax.swing.JPanel();
        dcLoanUserID = new javax.swing.JLabel();
        jLabel97 = new javax.swing.JLabel();
        jLabel98 = new javax.swing.JLabel();
        dcLoanTitle = new javax.swing.JLabel();
        jLabel99 = new javax.swing.JLabel();
        dcLoanFirstName = new javax.swing.JLabel();
        jLabel100 = new javax.swing.JLabel();
        dcLoanLastName = new javax.swing.JLabel();
        dcLoanIdCata = new javax.swing.JLabel();
        jLabel101 = new javax.swing.JLabel();
        dcLoanEditor = new javax.swing.JLabel();
        jLabel102 = new javax.swing.JLabel();
        jLabel103 = new javax.swing.JLabel();
        dcLoanDate = new javax.swing.JLabel();
        jLabel104 = new javax.swing.JLabel();
        dcLoanReDate = new com.toedter.calendar.JDateChooser();
        loanDoc = new javax.swing.JLabel();
        cancelLoanDoc = new javax.swing.JLabel();
        jPanel47 = new javax.swing.JPanel();
        jPanel48 = new javax.swing.JPanel();
        loanDocumentSearchType = new javax.swing.JComboBox<>();
        jLabel88 = new javax.swing.JLabel();
        loanDocumentSearchBar = new javax.swing.JTextField();
        jPanel49 = new javax.swing.JPanel();
        loanUserDocSearchType = new javax.swing.JComboBox<>();
        jlab = new javax.swing.JLabel();
        loanUserDocSearchBar = new javax.swing.JTextField();
        reeturn = new javax.swing.JPanel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        BookR = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        returnBookUserJTable = new javax.swing.JTable();
        jScrollPane11 = new javax.swing.JScrollPane();
        returnBookJTable = new javax.swing.JTable();
        jPanel50 = new javax.swing.JPanel();
        bkreturnUserType = new javax.swing.JLabel();
        bkreturnUserStatus = new javax.swing.JLabel();
        bkRDate = new com.toedter.calendar.JDateChooser();
        bkreturnIdCata = new javax.swing.JLabel();
        jLabel105 = new javax.swing.JLabel();
        jLabel106 = new javax.swing.JLabel();
        returnBookState = new javax.swing.JComboBox<>();
        jLabel110 = new javax.swing.JLabel();
        jLabel112 = new javax.swing.JLabel();
        bkreturnAutor = new javax.swing.JLabel();
        jLabel113 = new javax.swing.JLabel();
        bkreturnTitle = new javax.swing.JLabel();
        jLabel114 = new javax.swing.JLabel();
        jLabel115 = new javax.swing.JLabel();
        bkreturnUserID = new javax.swing.JLabel();
        bkreturnFirstName = new javax.swing.JLabel();
        jLabel116 = new javax.swing.JLabel();
        bkreturnLastName = new javax.swing.JLabel();
        cancelReturnBook = new javax.swing.JLabel();
        editRDateBook = new javax.swing.JLabel();
        returnBook = new javax.swing.JLabel();
        jPanel51 = new javax.swing.JPanel();
        jPanel52 = new javax.swing.JPanel();
        returnBookSearchType = new javax.swing.JComboBox<>();
        jLabel117 = new javax.swing.JLabel();
        returnBookSearchBar = new javax.swing.JTextField();
        jPanel53 = new javax.swing.JPanel();
        returnUserSearchType = new javax.swing.JComboBox<>();
        loanUserSearch = new javax.swing.JLabel();
        returnUserSearchBar = new javax.swing.JTextField();
        documentR = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        returnDocUserJTable = new javax.swing.JTable();
        jScrollPane13 = new javax.swing.JScrollPane();
        returnDocJTable = new javax.swing.JTable();
        jPanel54 = new javax.swing.JPanel();
        dcreturnUserType = new javax.swing.JLabel();
        dcreturnUserStatus = new javax.swing.JLabel();
        dcRDate = new com.toedter.calendar.JDateChooser();
        dcreturnIdCata = new javax.swing.JLabel();
        jLabel118 = new javax.swing.JLabel();
        jLabel119 = new javax.swing.JLabel();
        returnDocState = new javax.swing.JComboBox<>();
        jLabel120 = new javax.swing.JLabel();
        jLabel121 = new javax.swing.JLabel();
        dcreturnEditor = new javax.swing.JLabel();
        jLabel122 = new javax.swing.JLabel();
        dcreturnTitle = new javax.swing.JLabel();
        jLabel123 = new javax.swing.JLabel();
        jLabel124 = new javax.swing.JLabel();
        dcreturnUserID = new javax.swing.JLabel();
        dcreturnFirstName = new javax.swing.JLabel();
        jLabel125 = new javax.swing.JLabel();
        dcreturnLastName = new javax.swing.JLabel();
        cancelReturnDoc = new javax.swing.JLabel();
        editRDateDoc = new javax.swing.JLabel();
        returnDoc = new javax.swing.JLabel();
        jPanel55 = new javax.swing.JPanel();
        jPanel56 = new javax.swing.JPanel();
        returnDockSearchType = new javax.swing.JComboBox<>();
        jLabel126 = new javax.swing.JLabel();
        returnDocSearchBar = new javax.swing.JTextField();
        jPanel57 = new javax.swing.JPanel();
        returnDocUserSearchType = new javax.swing.JComboBox<>();
        loanUserSearchBar2 = new javax.swing.JLabel();
        returnDocUserSearchBar = new javax.swing.JTextField();
        punishment = new javax.swing.JPanel();
        jLabel78 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        punishmentJTable = new javax.swing.JTable();
        banP = new javax.swing.JLabel();
        unbanP = new javax.swing.JLabel();
        editP = new javax.swing.JLabel();
        cancelP = new javax.swing.JLabel();
        jPanel35 = new javax.swing.JPanel();
        jPanel36 = new javax.swing.JPanel();
        jLabel82 = new javax.swing.JLabel();
        jLabel83 = new javax.swing.JLabel();
        startBan = new com.toedter.calendar.JDateChooser();
        userIdPuni = new javax.swing.JLabel();
        jPanel37 = new javax.swing.JPanel();
        jLabel109 = new javax.swing.JLabel();
        firstNamePuni = new javax.swing.JLabel();
        jLabel86 = new javax.swing.JLabel();
        endBan = new com.toedter.calendar.JDateChooser();
        jPanel38 = new javax.swing.JPanel();
        jLabel84 = new javax.swing.JLabel();
        lastNamePuni = new javax.swing.JLabel();
        penaltyValue = new javax.swing.JTextField();
        jSeparator27 = new javax.swing.JSeparator();
        jLabel111 = new javax.swing.JLabel();
        jLabel81 = new javax.swing.JLabel();
        searchBarUserPuni = new javax.swing.JTextField();
        puniSearchType = new javax.swing.JComboBox<>();
        jLabel87 = new javax.swing.JLabel();
        puniUserState = new javax.swing.JComboBox<>();

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 18, 50));

        jLabel11.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Management System");

        jLabel13.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Library");

        panelHome.setBackground(new java.awt.Color(0, 18, 50));
        panelHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelHomeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                panelHomeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                panelHomeMouseExited(evt);
            }
        });

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slibrary/image/home(1).png"))); // NOI18N

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Home");

        selectHome.setBackground(new java.awt.Color(0, 153, 153));

        javax.swing.GroupLayout selectHomeLayout = new javax.swing.GroupLayout(selectHome);
        selectHome.setLayout(selectHomeLayout);
        selectHomeLayout.setHorizontalGroup(
            selectHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );
        selectHomeLayout.setVerticalGroup(
            selectHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panelHomeLayout = new javax.swing.GroupLayout(panelHome);
        panelHome.setLayout(panelHomeLayout);
        panelHomeLayout.setHorizontalGroup(
            panelHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelHomeLayout.createSequentialGroup()
                .addComponent(selectHome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelHomeLayout.setVerticalGroup(
            panelHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelHomeLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(selectHome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        panelCatalogue.setBackground(new java.awt.Color(0, 18, 50));
        panelCatalogue.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelCatalogueMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                panelCatalogueMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                panelCatalogueMouseExited(evt);
            }
        });

        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slibrary/image/catalog.png"))); // NOI18N

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Catalogue");

        selectCatalogue.setBackground(new java.awt.Color(0, 18, 50));

        javax.swing.GroupLayout selectCatalogueLayout = new javax.swing.GroupLayout(selectCatalogue);
        selectCatalogue.setLayout(selectCatalogueLayout);
        selectCatalogueLayout.setHorizontalGroup(
            selectCatalogueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );
        selectCatalogueLayout.setVerticalGroup(
            selectCatalogueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panelCatalogueLayout = new javax.swing.GroupLayout(panelCatalogue);
        panelCatalogue.setLayout(panelCatalogueLayout);
        panelCatalogueLayout.setHorizontalGroup(
            panelCatalogueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCatalogueLayout.createSequentialGroup()
                .addComponent(selectCatalogue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelCatalogueLayout.setVerticalGroup(
            panelCatalogueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCatalogueLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(selectCatalogue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        panelLoan.setBackground(new java.awt.Color(0, 18, 50));
        panelLoan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelLoanMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                panelLoanMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                panelLoanMouseExited(evt);
            }
        });

        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slibrary/image/home(1).png"))); // NOI18N

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("Loan");

        selectLoan.setBackground(new java.awt.Color(0, 18, 50));

        javax.swing.GroupLayout selectLoanLayout = new javax.swing.GroupLayout(selectLoan);
        selectLoan.setLayout(selectLoanLayout);
        selectLoanLayout.setHorizontalGroup(
            selectLoanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );
        selectLoanLayout.setVerticalGroup(
            selectLoanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panelLoanLayout = new javax.swing.GroupLayout(panelLoan);
        panelLoan.setLayout(panelLoanLayout);
        panelLoanLayout.setHorizontalGroup(
            panelLoanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLoanLayout.createSequentialGroup()
                .addComponent(selectLoan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelLoanLayout.setVerticalGroup(
            panelLoanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLoanLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(selectLoan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        panelUsers.setBackground(new java.awt.Color(0, 18, 50));
        panelUsers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelUsersMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                panelUsersMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                panelUsersMouseExited(evt);
            }
        });

        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slibrary/image/group.png"))); // NOI18N

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setText("Users");

        selectUsers.setBackground(new java.awt.Color(0, 18, 50));

        javax.swing.GroupLayout selectUsersLayout = new javax.swing.GroupLayout(selectUsers);
        selectUsers.setLayout(selectUsersLayout);
        selectUsersLayout.setHorizontalGroup(
            selectUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );
        selectUsersLayout.setVerticalGroup(
            selectUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panelUsersLayout = new javax.swing.GroupLayout(panelUsers);
        panelUsers.setLayout(panelUsersLayout);
        panelUsersLayout.setHorizontalGroup(
            panelUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelUsersLayout.createSequentialGroup()
                .addComponent(selectUsers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelUsersLayout.setVerticalGroup(
            panelUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelUsersLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(selectUsers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        panelPunishment.setBackground(new java.awt.Color(0, 18, 50));
        panelPunishment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelPunishmentMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                panelPunishmentMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                panelPunishmentMouseExited(evt);
            }
        });

        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slibrary/image/imprisoned.png"))); // NOI18N

        jLabel33.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setText("Punishment");

        selectPunishment.setBackground(new java.awt.Color(0, 18, 50));

        javax.swing.GroupLayout selectPunishmentLayout = new javax.swing.GroupLayout(selectPunishment);
        selectPunishment.setLayout(selectPunishmentLayout);
        selectPunishmentLayout.setHorizontalGroup(
            selectPunishmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );
        selectPunishmentLayout.setVerticalGroup(
            selectPunishmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panelPunishmentLayout = new javax.swing.GroupLayout(panelPunishment);
        panelPunishment.setLayout(panelPunishmentLayout);
        panelPunishmentLayout.setHorizontalGroup(
            panelPunishmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPunishmentLayout.createSequentialGroup()
                .addComponent(selectPunishment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelPunishmentLayout.setVerticalGroup(
            panelPunishmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPunishmentLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(selectPunishment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        panelReturn.setBackground(new java.awt.Color(0, 18, 50));
        panelReturn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelReturnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                panelReturnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                panelReturnMouseExited(evt);
            }
        });

        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel34.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slibrary/image/return.png"))); // NOI18N

        jLabel35.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(255, 255, 255));
        jLabel35.setText("Return");

        selectReturn.setBackground(new java.awt.Color(0, 18, 50));

        javax.swing.GroupLayout selectReturnLayout = new javax.swing.GroupLayout(selectReturn);
        selectReturn.setLayout(selectReturnLayout);
        selectReturnLayout.setHorizontalGroup(
            selectReturnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );
        selectReturnLayout.setVerticalGroup(
            selectReturnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panelReturnLayout = new javax.swing.GroupLayout(panelReturn);
        panelReturn.setLayout(panelReturnLayout);
        panelReturnLayout.setHorizontalGroup(
            panelReturnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelReturnLayout.createSequentialGroup()
                .addComponent(selectReturn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelReturnLayout.setVerticalGroup(
            panelReturnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelReturnLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(selectReturn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        panelAdmins.setBackground(new java.awt.Color(0, 18, 50));
        panelAdmins.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelAdminsMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                panelAdminsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                panelAdminsMouseExited(evt);
            }
        });

        jLabel36.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel36.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slibrary/image/admin-with-cogwheels.png"))); // NOI18N

        jLabel37.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(255, 255, 255));
        jLabel37.setText("Admins");

        selectAdmins.setBackground(new java.awt.Color(0, 18, 50));

        javax.swing.GroupLayout selectAdminsLayout = new javax.swing.GroupLayout(selectAdmins);
        selectAdmins.setLayout(selectAdminsLayout);
        selectAdminsLayout.setHorizontalGroup(
            selectAdminsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );
        selectAdminsLayout.setVerticalGroup(
            selectAdminsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panelAdminsLayout = new javax.swing.GroupLayout(panelAdmins);
        panelAdmins.setLayout(panelAdminsLayout);
        panelAdminsLayout.setHorizontalGroup(
            panelAdminsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAdminsLayout.createSequentialGroup()
                .addComponent(selectAdmins, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelAdminsLayout.setVerticalGroup(
            panelAdminsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel37, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAdminsLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(selectAdmins, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
            .addComponent(panelHome, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelCatalogue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelUsers, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelLoan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelReturn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelPunishment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelAdmins, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(panelHome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(panelCatalogue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(panelUsers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(panelLoan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(panelReturn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(panelPunishment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(panelAdmins, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        laDate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        userName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slibrary/image/prs.png"))); // NOI18N

        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slibrary/image/turn-off.png"))); // NOI18N
        jLabel27.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel27MouseClicked(evt);
            }
        });

        closePanel.setBackground(new java.awt.Color(255, 255, 255));
        closePanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closePanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                closePanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                closePanelMouseExited(evt);
            }
        });

        closeIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        closeIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slibrary/image/close-button.png"))); // NOI18N

        javax.swing.GroupLayout closePanelLayout = new javax.swing.GroupLayout(closePanel);
        closePanel.setLayout(closePanelLayout);
        closePanelLayout.setHorizontalGroup(
            closePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(closeIcon, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
        );
        closePanelLayout.setVerticalGroup(
            closePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(closeIcon, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
        );

        maxPanel.setBackground(new java.awt.Color(255, 255, 255));
        maxPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                maxPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                maxPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                maxPanelMouseExited(evt);
            }
        });

        jLabel133.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel133.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slibrary/image/square-shape-outline.png"))); // NOI18N

        javax.swing.GroupLayout maxPanelLayout = new javax.swing.GroupLayout(maxPanel);
        maxPanel.setLayout(maxPanelLayout);
        maxPanelLayout.setHorizontalGroup(
            maxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel133, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
        );
        maxPanelLayout.setVerticalGroup(
            maxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel133, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
        );

        minPanel.setBackground(new java.awt.Color(255, 255, 255));
        minPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                minPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                minPanelMouseExited(evt);
            }
        });

        jLabel134.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel134.setText("__");

        javax.swing.GroupLayout minPanelLayout = new javax.swing.GroupLayout(minPanel);
        minPanel.setLayout(minPanelLayout);
        minPanelLayout.setHorizontalGroup(
            minPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel134, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
        );
        minPanelLayout.setVerticalGroup(
            minPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel134, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(laDate, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel26)
                .addGap(18, 18, 18)
                .addComponent(userName, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(minPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(maxPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(closePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(closePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maxPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel26)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(laDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(userName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        parentMain.setBackground(new java.awt.Color(204, 204, 204));
        parentMain.setLayout(new java.awt.CardLayout());

        home.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Dashboard");

        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(new java.awt.GridLayout(1, 0));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slibrary/image/book.png"))); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Total Books");

        numberOfBooks.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        numberOfBooks.setText("0");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numberOfBooks, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 95, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(numberOfBooks, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel4.add(jPanel6);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slibrary/image/docu.png"))); // NOI18N

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Total Documents");

        numberOfDocuments.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        numberOfDocuments.setText("0");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 191, Short.MAX_VALUE))
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addGap(98, 98, 98)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel12)
                        .addComponent(numberOfDocuments, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(73, Short.MAX_VALUE)))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(numberOfDocuments, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        jPanel4.add(jPanel7);

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slibrary/image/usersT.png"))); // NOI18N

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Total Users");

        numberOfUsers.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        numberOfUsers.setText("0");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 191, Short.MAX_VALUE))
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel8Layout.createSequentialGroup()
                    .addGap(98, 98, 98)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(numberOfUsers, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(84, Short.MAX_VALUE)))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel8Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(numberOfUsers, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        jPanel4.add(jPanel8);

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slibrary/image/adminT.jpg"))); // NOI18N

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("Total Admins");

        numberOfAdmins.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        numberOfAdmins.setText("0");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 191, Short.MAX_VALUE))
            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel9Layout.createSequentialGroup()
                    .addGap(98, 98, 98)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel16)
                        .addComponent(numberOfAdmins, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(94, Short.MAX_VALUE)))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel9Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(numberOfAdmins, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        jPanel4.add(jPanel9);

        jPanel10.setLayout(new java.awt.GridLayout(1, 0));

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slibrary/image/lB.png"))); // NOI18N

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("Total Loaned Books");

        numberOfLoanedBooks.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        numberOfLoanedBooks.setText("0");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(numberOfLoanedBooks, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(79, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(numberOfLoanedBooks, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel10.add(jPanel11);

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slibrary/image/lD.png"))); // NOI18N

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel20.setText("Total Loaned Documents");

        numberOfLoanedDocuments.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        numberOfLoanedDocuments.setText("0");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(numberOfLoanedDocuments, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(numberOfLoanedDocuments, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel10.add(jPanel12);

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slibrary/image/lU.png"))); // NOI18N

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel22.setText("Total Active Users");

        numberOfUsersActive.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        numberOfUsersActive.setText("0");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(numberOfUsersActive, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(83, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(numberOfUsersActive, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel10.add(jPanel13);

        jPanel14.setBackground(new java.awt.Color(255, 255, 255));

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slibrary/image/lA.png"))); // NOI18N

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel24.setText("Total Online Admins");

        numberOfAdminsOnline.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        numberOfAdminsOnline.setText("0");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(numberOfAdminsOnline, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(74, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(numberOfAdminsOnline, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel10.add(jPanel14);

        jPanel15.setBackground(new java.awt.Color(102, 108, 128));

        notificationAlert.setFont(new java.awt.Font("Tahoma", 1, 28)); // NOI18N
        notificationAlert.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        goPu.setFont(new java.awt.Font("Tahoma", 1, 28)); // NOI18N
        goPu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(goPu, javax.swing.GroupLayout.PREFERRED_SIZE, 1018, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(notificationAlert, javax.swing.GroupLayout.PREFERRED_SIZE, 1018, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap(93, Short.MAX_VALUE)
                .addComponent(notificationAlert, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(goPu, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(95, Short.MAX_VALUE))
        );

        reloadPanel.setBackground(new java.awt.Color(255, 255, 255));
        reloadPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reloadPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                reloadPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                reloadPanelMouseExited(evt);
            }
        });

        jLabel131.setBackground(new java.awt.Color(0, 204, 204));
        jLabel131.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel131.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slibrary/image/reload.png"))); // NOI18N
        jLabel131.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout reloadPanelLayout = new javax.swing.GroupLayout(reloadPanel);
        reloadPanel.setLayout(reloadPanelLayout);
        reloadPanelLayout.setHorizontalGroup(
            reloadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, reloadPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel131, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        reloadPanelLayout.setVerticalGroup(
            reloadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, reloadPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel131, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout homeLayout = new javax.swing.GroupLayout(home);
        home.setLayout(homeLayout);
        homeLayout.setHorizontalGroup(
            homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(reloadPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, 1105, Short.MAX_VALUE)
            .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        homeLayout.setVerticalGroup(
            homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homeLayout.createSequentialGroup()
                .addGroup(homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(homeLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homeLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(reloadPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        parentMain.add(home, "card2");

        catalogue.setBackground(new java.awt.Color(48, 14, 51));

        jTabbedPane1.setFocusable(false);
        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N

        book.setBackground(new java.awt.Color(48, 14, 51));

        jLabel38.setFont(new java.awt.Font("Tahoma", 2, 33)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(255, 255, 255));
        jLabel38.setText("   Books Catalogue");

        searchBarBook.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        searchBarBook.setBorder(null);
        searchBarBook.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        searchBarBook.setOpaque(false);
        searchBarBook.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchBarBookKeyReleased(evt);
            }
        });

        jLabel39.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel39.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slibrary/image/searchBar.png"))); // NOI18N

        bookSearchType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Title", "Autor", "ISBN", "Category", "ID Catalogue", "Order Number", "Purchase Date", "Book State" }));
        bookSearchType.setBorder(null);
        bookSearchType.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bookSearchType.setFocusable(false);

        jLabel61.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel61.setForeground(new java.awt.Color(255, 255, 255));
        jLabel61.setText("Status");

        bookSearchStatusType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "On The Shelf", "Loaned", "Late", "Reserved", "Under Construction" }));
        bookSearchStatusType.setBorder(null);
        bookSearchStatusType.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bookSearchStatusType.setFocusable(false);
        bookSearchStatusType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                bookSearchStatusTypeItemStateChanged(evt);
            }
        });

        jScrollPane1.setBorder(null);
        jScrollPane1.setFocusable(false);

        BookjTable.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        BookjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N°", "ID in Catalogue", "Title", "Autor", "ISBN", "Category", "Status", "Purchase Date", "OrderNumber", "Book State", "Book Value in Da"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Long.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        BookjTable.setRowHeight(30);
        BookjTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BookjTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(BookjTable);
        if (BookjTable.getColumnModel().getColumnCount() > 0) {
            BookjTable.getColumnModel().getColumn(0).setMinWidth(25);
            BookjTable.getColumnModel().getColumn(0).setPreferredWidth(25);
            BookjTable.getColumnModel().getColumn(0).setMaxWidth(25);
            BookjTable.getColumnModel().getColumn(1).setMinWidth(50);
            BookjTable.getColumnModel().getColumn(1).setPreferredWidth(50);
            BookjTable.getColumnModel().getColumn(1).setMaxWidth(50);
        }

        addBook.setBackground(new java.awt.Color(255, 255, 255));
        addBook.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        addBook.setForeground(new java.awt.Color(255, 255, 255));
        addBook.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addBook.setText("ADD");
        addBook.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        addBook.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addBook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addBookMouseClicked(evt);
            }
        });

        editBook.setBackground(new java.awt.Color(255, 255, 255));
        editBook.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        editBook.setForeground(new java.awt.Color(255, 255, 255));
        editBook.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        editBook.setText("EDIT");
        editBook.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        editBook.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        editBook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editBookMouseClicked(evt);
            }
        });

        deleteBook.setBackground(new java.awt.Color(48, 14, 51));
        deleteBook.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        deleteBook.setForeground(new java.awt.Color(255, 255, 255));
        deleteBook.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        deleteBook.setText("DELETE");
        deleteBook.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        deleteBook.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteBook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteBookMouseClicked(evt);
            }
        });

        jLabel41.setBackground(new java.awt.Color(255, 255, 255));
        jLabel41.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(255, 255, 255));
        jLabel41.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel41.setText("CANCEL");
        jLabel41.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLabel41.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel41.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel41MouseClicked(evt);
            }
        });

        jPanel16.setBackground(new java.awt.Color(48, 14, 51));
        jPanel16.setLayout(new java.awt.GridLayout(1, 0));

        jPanel17.setBackground(new java.awt.Color(48, 14, 51));

        jLabel42.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(255, 255, 255));
        jLabel42.setText("Title");

        jLabel43.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(255, 255, 255));
        jLabel43.setText("Autor");

        bookTitle.setBackground(new java.awt.Color(48, 14, 51));
        bookTitle.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        bookTitle.setForeground(new java.awt.Color(255, 255, 255));
        bookTitle.setBorder(null);

        bookAutor.setBackground(new java.awt.Color(48, 14, 51));
        bookAutor.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        bookAutor.setForeground(new java.awt.Color(255, 255, 255));
        bookAutor.setBorder(null);

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jSeparator20)
                        .addComponent(bookTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jSeparator24)
                        .addComponent(bookAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 25, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bookTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(jSeparator20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addComponent(bookAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(jSeparator24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        jPanel16.add(jPanel17);

        jPanel18.setBackground(new java.awt.Color(48, 14, 51));

        nbrBookCopy.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nbrBookCopy.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        nbrBookCopy.setBorder(null);
        nbrBookCopy.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        nbrBookCopy.setFocusable(false);
        nbrBookCopy.setOpaque(false);

        idbookCatalogue.setBackground(new java.awt.Color(48, 14, 51));
        idbookCatalogue.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        idbookCatalogue.setForeground(new java.awt.Color(255, 255, 255));
        idbookCatalogue.setToolTipText("id, id ,id, ......");
        idbookCatalogue.setBorder(null);
        idbookCatalogue.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        bookCat.setBorder(null);
        bookCat.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bookCat.setFocusable(false);
        bookCat.setOpaque(false);
        bookCat.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                bookCatItemStateChanged(evt);
            }
        });

        bookCategory.setBackground(new java.awt.Color(48, 14, 51));
        bookCategory.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        bookCategory.setForeground(new java.awt.Color(255, 255, 255));
        bookCategory.setBorder(null);
        bookCategory.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        jLabel40.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(255, 255, 255));
        jLabel40.setText("Number of Copy");

        jLabel44.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(255, 255, 255));
        jLabel44.setText("ID Catalogue");

        jLabel45.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(255, 255, 255));
        jLabel45.setText("Category");

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel18Layout.createSequentialGroup()
                            .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(bookCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(bookCat, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel18Layout.createSequentialGroup()
                            .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(idbookCatalogue, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(nbrBookCopy, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
            .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel18Layout.createSequentialGroup()
                    .addGap(95, 95, 95)
                    .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(23, Short.MAX_VALUE)))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel18Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nbrBookCopy, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idbookCatalogue, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bookCat, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(42, Short.MAX_VALUE))
            .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel18Layout.createSequentialGroup()
                    .addGap(167, 167, 167)
                    .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(37, Short.MAX_VALUE)))
        );

        jPanel16.add(jPanel18);

        jPanel19.setBackground(new java.awt.Color(48, 14, 51));
        jPanel19.setFocusable(false);

        bookStatus.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        bookStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "on the shelf", "loaned", "late", "reserved", "under construction" }));
        bookStatus.setBorder(null);
        bookStatus.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bookStatus.setFocusable(false);

        bookState.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        bookState.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "new", "very good state", "good state", "used", "damaged" }));
        bookState.setBorder(null);
        bookState.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bookState.setFocusable(false);

        bookPurchase.setDateFormatString("yyyy-MM-dd");
        bookPurchase.setOpaque(false);

        jLabel46.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel46.setForeground(new java.awt.Color(255, 255, 255));
        jLabel46.setText("Status");

        jLabel47.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(255, 255, 255));
        jLabel47.setText("Book State");

        jLabel48.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel48.setForeground(new java.awt.Color(255, 255, 255));
        jLabel48.setText("Purchase Date");

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel46)
                    .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bookPurchase, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bookStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bookState, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookState, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(bookPurchase, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jPanel16.add(jPanel19);

        jPanel20.setBackground(new java.awt.Color(48, 14, 51));

        bookISBN.setBackground(new java.awt.Color(48, 14, 51));
        bookISBN.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        bookISBN.setForeground(new java.awt.Color(255, 255, 255));
        bookISBN.setBorder(null);

        bookOrderNumber.setBackground(new java.awt.Color(48, 14, 51));
        bookOrderNumber.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        bookOrderNumber.setForeground(new java.awt.Color(255, 255, 255));
        bookOrderNumber.setBorder(null);
        bookOrderNumber.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        bookValue.setBackground(new java.awt.Color(48, 14, 51));
        bookValue.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        bookValue.setForeground(new java.awt.Color(255, 255, 255));
        bookValue.setBorder(null);
        bookValue.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        jLabel49.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel49.setForeground(new java.awt.Color(255, 255, 255));
        jLabel49.setText("ISBN");

        jLabel50.setBackground(new java.awt.Color(255, 255, 255));
        jLabel50.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel50.setForeground(new java.awt.Color(255, 255, 255));
        jLabel50.setText("Order Number");

        jLabel128.setBackground(new java.awt.Color(255, 255, 255));
        jLabel128.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel128.setForeground(new java.awt.Color(255, 255, 255));
        jLabel128.setText("Book Value");

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel50)
                        .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel20Layout.createSequentialGroup()
                        .addComponent(jLabel128)
                        .addGap(17, 17, 17)))
                .addGap(22, 22, 22)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSeparator28, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                    .addComponent(bookISBN)
                    .addComponent(bookValue, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(bookOrderNumber, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator12, javax.swing.GroupLayout.Alignment.TRAILING)))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel20Layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addComponent(bookISBN, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(jSeparator12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(bookOrderNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(bookValue, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel20Layout.createSequentialGroup()
                                .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(54, 54, 54))
                            .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addComponent(jLabel128, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, 0)
                .addComponent(jSeparator28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        jPanel16.add(jPanel20);

        javax.swing.GroupLayout bookLayout = new javax.swing.GroupLayout(book);
        book.setLayout(bookLayout);
        bookLayout.setHorizontalGroup(
            bookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(bookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, bookLayout.createSequentialGroup()
                        .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(bookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bookLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(searchBarBook, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bookSearchType, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel61, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(bookSearchStatusType, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addGap(20, 20, 20))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bookLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addBook, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(editBook, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(deleteBook, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        bookLayout.setVerticalGroup(
            bookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookLayout.createSequentialGroup()
                .addGroup(bookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bookLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(bookLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(bookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(searchBarBook, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel39)
                            .addGroup(bookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(bookSearchType, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel61, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(bookSearchStatusType, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(bookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(editBook, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addBook, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(deleteBook, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Books", book);

        document.setBackground(new java.awt.Color(48, 14, 51));

        jLabel51.setFont(new java.awt.Font("Tahoma", 2, 33)); // NOI18N
        jLabel51.setForeground(new java.awt.Color(255, 255, 255));
        jLabel51.setText("Documents Catalogue");

        searchBarDocument.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        searchBarDocument.setBorder(null);
        searchBarDocument.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        searchBarDocument.setOpaque(false);
        searchBarDocument.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchBarDocumentKeyReleased(evt);
            }
        });

        jLabel52.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel52.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slibrary/image/searchBar.png"))); // NOI18N

        documentSearchType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Title", "Editor", "ID", "Category", "ID Catalogue", "Order Number", "Publication Date", "Purchase Date", "Document State" }));
        documentSearchType.setBorder(null);
        documentSearchType.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        documentSearchType.setFocusable(false);

        jLabel62.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel62.setForeground(new java.awt.Color(255, 255, 255));
        jLabel62.setText("Status");

        documentSearchStatusType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "On The Shelf", "Loaned", "Late", "Reserved", "Under Construction" }));
        documentSearchStatusType.setBorder(null);
        documentSearchStatusType.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        documentSearchStatusType.setFocusable(false);
        documentSearchStatusType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                documentSearchStatusTypeItemStateChanged(evt);
            }
        });

        jScrollPane2.setBorder(null);
        jScrollPane2.setFocusable(false);

        documentjTable.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        documentjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N°", "ID in Catalogue", "Title", "Editor", "ID Document", "Category", "Status", "Publication Date", "Purchase Date", "Order Number", "Document State", "Doc Value in Da"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Long.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        documentjTable.setRowHeight(30);
        documentjTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                documentjTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(documentjTable);
        if (documentjTable.getColumnModel().getColumnCount() > 0) {
            documentjTable.getColumnModel().getColumn(0).setMinWidth(25);
            documentjTable.getColumnModel().getColumn(0).setPreferredWidth(25);
            documentjTable.getColumnModel().getColumn(0).setMaxWidth(25);
            documentjTable.getColumnModel().getColumn(1).setMinWidth(50);
            documentjTable.getColumnModel().getColumn(1).setPreferredWidth(50);
            documentjTable.getColumnModel().getColumn(1).setMaxWidth(50);
        }

        addDocument.setBackground(new java.awt.Color(255, 255, 255));
        addDocument.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        addDocument.setForeground(new java.awt.Color(255, 255, 255));
        addDocument.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addDocument.setText("ADD");
        addDocument.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        addDocument.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addDocument.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addDocumentMouseClicked(evt);
            }
        });

        editDocument.setBackground(new java.awt.Color(255, 255, 255));
        editDocument.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        editDocument.setForeground(new java.awt.Color(255, 255, 255));
        editDocument.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        editDocument.setText("EDIT");
        editDocument.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        editDocument.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        editDocument.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editDocumentMouseClicked(evt);
            }
        });

        deleteDocument.setBackground(new java.awt.Color(48, 14, 51));
        deleteDocument.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        deleteDocument.setForeground(new java.awt.Color(255, 255, 255));
        deleteDocument.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        deleteDocument.setText("DELETE");
        deleteDocument.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        deleteDocument.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteDocument.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteDocumentMouseClicked(evt);
            }
        });

        cancelDocument.setBackground(new java.awt.Color(255, 255, 255));
        cancelDocument.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cancelDocument.setForeground(new java.awt.Color(255, 255, 255));
        cancelDocument.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cancelDocument.setText("CANCEL");
        cancelDocument.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        cancelDocument.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelDocument.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelDocumentMouseClicked(evt);
            }
        });

        jPanel21.setBackground(new java.awt.Color(48, 14, 51));
        jPanel21.setLayout(new java.awt.GridLayout(1, 0));

        jPanel22.setBackground(new java.awt.Color(48, 14, 51));

        jLabel54.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel54.setForeground(new java.awt.Color(255, 255, 255));
        jLabel54.setText("Title");

        jLabel55.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel55.setForeground(new java.awt.Color(255, 255, 255));
        jLabel55.setText("Editor");

        documentEditor.setBackground(new java.awt.Color(48, 14, 51));
        documentEditor.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        documentEditor.setForeground(new java.awt.Color(255, 255, 255));
        documentEditor.setBorder(null);

        documentTitle.setBackground(new java.awt.Color(48, 14, 51));
        documentTitle.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        documentTitle.setForeground(new java.awt.Color(255, 255, 255));
        documentTitle.setToolTipText("");
        documentTitle.setBorder(null);

        jSeparator7.setForeground(new java.awt.Color(255, 255, 255));

        jSeparator8.setForeground(new java.awt.Color(255, 255, 255));

        jLabel66.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel66.setForeground(new java.awt.Color(255, 255, 255));
        jLabel66.setText("ID Catalogue");

        idDocumentCatalogue.setBackground(new java.awt.Color(48, 14, 51));
        idDocumentCatalogue.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        idDocumentCatalogue.setForeground(new java.awt.Color(255, 255, 255));
        idDocumentCatalogue.setToolTipText("id, id ,id, ......");
        idDocumentCatalogue.setBorder(null);
        idDocumentCatalogue.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel54, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(documentTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(documentEditor, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addComponent(jLabel66, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator14, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idDocumentCatalogue, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 23, Short.MAX_VALUE))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(documentTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel54, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, 0)
                        .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addComponent(documentEditor, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idDocumentCatalogue, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel66, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(jSeparator14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jPanel21.add(jPanel22);

        jPanel23.setBackground(new java.awt.Color(48, 14, 51));

        nbrDocCopy.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nbrDocCopy.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        nbrDocCopy.setBorder(null);
        nbrDocCopy.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        nbrDocCopy.setFocusable(false);
        nbrDocCopy.setOpaque(false);

        documentID.setBackground(new java.awt.Color(48, 14, 51));
        documentID.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        documentID.setForeground(new java.awt.Color(255, 255, 255));
        documentID.setToolTipText("id, id ,id, ......");
        documentID.setBorder(null);
        documentID.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        documentCat.setBorder(null);
        documentCat.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        documentCat.setFocusable(false);
        documentCat.setOpaque(false);
        documentCat.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                documentCatItemStateChanged(evt);
            }
        });

        documentCategory.setBackground(new java.awt.Color(48, 14, 51));
        documentCategory.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        documentCategory.setForeground(new java.awt.Color(255, 255, 255));
        documentCategory.setBorder(null);
        documentCategory.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        jLabel56.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel56.setForeground(new java.awt.Color(255, 255, 255));
        jLabel56.setText("Number of Copy");

        jLabel57.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel57.setForeground(new java.awt.Color(255, 255, 255));
        jLabel57.setText("ID Document");

        jLabel58.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel58.setForeground(new java.awt.Color(255, 255, 255));
        jLabel58.setText("Category");

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel23Layout.createSequentialGroup()
                            .addComponent(jLabel58, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(documentCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(documentCat, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel23Layout.createSequentialGroup()
                            .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(documentID, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel23Layout.createSequentialGroup()
                        .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(nbrDocCopy, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
            .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel23Layout.createSequentialGroup()
                    .addGap(95, 95, 95)
                    .addComponent(jSeparator10, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(23, Short.MAX_VALUE)))
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel23Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nbrDocCopy, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(documentID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(documentCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(documentCat, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel58, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(42, Short.MAX_VALUE))
            .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel23Layout.createSequentialGroup()
                    .addGap(167, 167, 167)
                    .addComponent(jSeparator10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(37, Short.MAX_VALUE)))
        );

        jPanel21.add(jPanel23);

        jPanel24.setBackground(new java.awt.Color(48, 14, 51));
        jPanel24.setFocusable(false);

        documentStatus.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        documentStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "on the shelf", "loaned", "late", "reserved", "under construction" }));
        documentStatus.setBorder(null);
        documentStatus.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        documentStatus.setFocusable(false);

        documentState.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        documentState.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "new", "very good state", "good state", "used", "damaged" }));
        documentState.setBorder(null);
        documentState.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        documentState.setFocusable(false);

        documentPublicationDate.setDateFormatString("yyyy-MM-dd");
        documentPublicationDate.setOpaque(false);

        jLabel59.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel59.setForeground(new java.awt.Color(255, 255, 255));
        jLabel59.setText("Status");

        jLabel60.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel60.setForeground(new java.awt.Color(255, 255, 255));
        jLabel60.setText("Book State");

        jLabel63.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel63.setForeground(new java.awt.Color(255, 255, 255));
        jLabel63.setText("Publication Date");

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel59)
                    .addComponent(jLabel60, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel63))
                .addGap(16, 16, 16)
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(documentPublicationDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(documentStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(documentState, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(documentStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel59, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(documentState, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel60, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(documentPublicationDate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel63, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jPanel21.add(jPanel24);

        jPanel25.setBackground(new java.awt.Color(48, 14, 51));

        documentOrderNumber.setBackground(new java.awt.Color(48, 14, 51));
        documentOrderNumber.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        documentOrderNumber.setForeground(new java.awt.Color(255, 255, 255));
        documentOrderNumber.setBorder(null);
        documentOrderNumber.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        docValue.setBackground(new java.awt.Color(48, 14, 51));
        docValue.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        docValue.setForeground(new java.awt.Color(255, 255, 255));
        docValue.setBorder(null);
        docValue.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        jLabel64.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel64.setForeground(new java.awt.Color(255, 255, 255));
        jLabel64.setText("Purchase Date");

        jLabel65.setBackground(new java.awt.Color(255, 255, 255));
        jLabel65.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel65.setForeground(new java.awt.Color(255, 255, 255));
        jLabel65.setText("Order Number");

        jLabel129.setBackground(new java.awt.Color(255, 255, 255));
        jLabel129.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel129.setForeground(new java.awt.Color(255, 255, 255));
        jLabel129.setText("Book Value");

        documentPurchaseDate.setDateFormatString("yyyy-MM-dd");
        documentPurchaseDate.setOpaque(false);

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel65, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel25Layout.createSequentialGroup()
                            .addComponent(jLabel129)
                            .addGap(17, 17, 17)))
                    .addComponent(jLabel64))
                .addGap(13, 13, 13)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSeparator29, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                    .addComponent(docValue, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator11, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(documentOrderNumber, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(documentPurchaseDate, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel25Layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addComponent(documentPurchaseDate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(documentOrderNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jSeparator11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(docValue, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel25Layout.createSequentialGroup()
                                .addComponent(jLabel64, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(54, 54, 54))
                            .addComponent(jLabel65, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addComponent(jLabel129, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, 0)
                .addComponent(jSeparator29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        jPanel21.add(jPanel25);

        javax.swing.GroupLayout documentLayout = new javax.swing.GroupLayout(document);
        document.setLayout(documentLayout);
        documentLayout.setHorizontalGroup(
            documentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(documentLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(documentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel21, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, documentLayout.createSequentialGroup()
                        .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(documentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(documentLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(searchBarDocument, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel52, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(documentSearchType, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel62, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(documentSearchStatusType, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2))
                .addGap(20, 20, 20))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, documentLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addDocument, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(editDocument, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(deleteDocument, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cancelDocument, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        documentLayout.setVerticalGroup(
            documentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(documentLayout.createSequentialGroup()
                .addGroup(documentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(documentLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(documentLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(documentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(searchBarDocument, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel52)
                            .addGroup(documentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(documentSearchType, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel62, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(documentSearchStatusType, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(0, 0, 0)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(documentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(documentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(editDocument, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addDocument, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(deleteDocument, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelDocument, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Documents", document);

        javax.swing.GroupLayout catalogueLayout = new javax.swing.GroupLayout(catalogue);
        catalogue.setLayout(catalogueLayout);
        catalogueLayout.setHorizontalGroup(
            catalogueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        catalogueLayout.setVerticalGroup(
            catalogueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        parentMain.add(catalogue, "card2");

        users.setBackground(new java.awt.Color(0, 43, 51));

        jLabel70.setFont(new java.awt.Font("Tahoma", 2, 33)); // NOI18N
        jLabel70.setForeground(new java.awt.Color(255, 255, 255));
        jLabel70.setText("   Users");

        searchBarUser.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        searchBarUser.setBorder(null);
        searchBarUser.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        searchBarUser.setOpaque(false);
        searchBarUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchBarUserKeyReleased(evt);
            }
        });

        jLabel71.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel71.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slibrary/image/searchBar.png"))); // NOI18N

        userSearchType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "User ID", "First Name", "Last Name", "User Type", "N° Copy can loan", "N° Book Loaned", "N° Doc Loaned", "N° Book Late", "N° doc Late" }));
        userSearchType.setBorder(null);
        userSearchType.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        userSearchType.setFocusable(false);

        jLabel72.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel72.setForeground(new java.awt.Color(255, 255, 255));
        jLabel72.setText("User State");

        userState.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Banned", "Loan", "Late" }));
        userState.setBorder(null);
        userState.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        userState.setFocusable(false);
        userState.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                userStateItemStateChanged(evt);
            }
        });

        jScrollPane4.setBorder(null);
        jScrollPane4.setFocusable(false);

        userJTable.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        userJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N°", "ID", "First Name", "Last Name", "User Type", "Banned", "N° Copy can Loan", "N° Book Loaned", "N° Book Late", "N° Doc Loaned", "N° Doc Late"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        userJTable.setFocusable(false);
        userJTable.setRowHeight(30);
        userJTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userJTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(userJTable);
        if (userJTable.getColumnModel().getColumnCount() > 0) {
            userJTable.getColumnModel().getColumn(0).setMinWidth(25);
            userJTable.getColumnModel().getColumn(0).setPreferredWidth(25);
            userJTable.getColumnModel().getColumn(0).setMaxWidth(25);
            userJTable.getColumnModel().getColumn(5).setHeaderValue("Banned");
            userJTable.getColumnModel().getColumn(6).setHeaderValue("N° Copy can Loan");
            userJTable.getColumnModel().getColumn(7).setHeaderValue("N° Book Loaned");
            userJTable.getColumnModel().getColumn(8).setHeaderValue("N° Book Late");
            userJTable.getColumnModel().getColumn(9).setHeaderValue("N° Doc Loaned");
            userJTable.getColumnModel().getColumn(10).setHeaderValue("N° Doc Late");
        }

        addUser.setBackground(new java.awt.Color(255, 255, 255));
        addUser.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        addUser.setForeground(new java.awt.Color(255, 255, 255));
        addUser.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addUser.setText("ADD");
        addUser.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        addUser.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addUserMouseClicked(evt);
            }
        });

        editUser.setBackground(new java.awt.Color(255, 255, 255));
        editUser.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        editUser.setForeground(new java.awt.Color(255, 255, 255));
        editUser.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        editUser.setText("EDIT");
        editUser.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        editUser.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        editUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editUserMouseClicked(evt);
            }
        });

        deleteUser.setBackground(new java.awt.Color(48, 14, 51));
        deleteUser.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        deleteUser.setForeground(new java.awt.Color(255, 255, 255));
        deleteUser.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        deleteUser.setText("DELETE");
        deleteUser.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        deleteUser.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteUserMouseClicked(evt);
            }
        });

        cancelUser.setBackground(new java.awt.Color(255, 255, 255));
        cancelUser.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cancelUser.setForeground(new java.awt.Color(255, 255, 255));
        cancelUser.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cancelUser.setText("CANCEL");
        cancelUser.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        cancelUser.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelUserMouseClicked(evt);
            }
        });

        jPanel26.setBackground(new java.awt.Color(0, 43, 51));
        jPanel26.setLayout(new java.awt.GridLayout(1, 0));

        jPanel27.setBackground(new java.awt.Color(0, 43, 51));

        jLabel74.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel74.setForeground(new java.awt.Color(255, 255, 255));
        jLabel74.setText("ID");

        userID.setBackground(new java.awt.Color(0, 43, 51));
        userID.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        userID.setForeground(new java.awt.Color(255, 255, 255));
        userID.setToolTipText("");
        userID.setBorder(null);

        jSeparator13.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel74, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSeparator13, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                    .addComponent(userID))
                .addGap(0, 26, Short.MAX_VALUE))
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel74, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(jSeparator13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(104, Short.MAX_VALUE))
        );

        jPanel26.add(jPanel27);

        jPanel28.setBackground(new java.awt.Color(0, 43, 51));

        userFirstName.setBackground(new java.awt.Color(0, 43, 51));
        userFirstName.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        userFirstName.setForeground(new java.awt.Color(255, 255, 255));
        userFirstName.setToolTipText("");
        userFirstName.setBorder(null);

        jLabel75.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel75.setForeground(new java.awt.Color(255, 255, 255));
        jLabel75.setText("First Name");

        jSeparator15.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel28Layout = new javax.swing.GroupLayout(jPanel28);
        jPanel28.setLayout(jPanel28Layout);
        jPanel28Layout.setHorizontalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addComponent(jLabel75, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSeparator15, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                    .addComponent(userFirstName))
                .addGap(0, 26, Short.MAX_VALUE))
        );
        jPanel28Layout.setVerticalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel75, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(jSeparator15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(104, Short.MAX_VALUE))
        );

        jPanel26.add(jPanel28);

        jPanel29.setBackground(new java.awt.Color(0, 43, 51));
        jPanel29.setFocusable(false);

        userLastName.setBackground(new java.awt.Color(0, 43, 51));
        userLastName.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        userLastName.setForeground(new java.awt.Color(255, 255, 255));
        userLastName.setToolTipText("");
        userLastName.setBorder(null);

        jLabel76.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel76.setForeground(new java.awt.Color(255, 255, 255));
        jLabel76.setText("Last Name");

        jSeparator16.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel29Layout = new javax.swing.GroupLayout(jPanel29);
        jPanel29.setLayout(jPanel29Layout);
        jPanel29Layout.setHorizontalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addComponent(jLabel76)
                .addGap(17, 17, 17)
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSeparator16, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                    .addComponent(userLastName))
                .addGap(0, 26, Short.MAX_VALUE))
        );
        jPanel29Layout.setVerticalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel76, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(jSeparator16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(104, Short.MAX_VALUE))
        );

        jPanel26.add(jPanel29);

        jPanel30.setBackground(new java.awt.Color(0, 43, 51));

        userTypeF.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        userTypeF.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "occasional user", "subscriber", "privileged subscriber" }));
        userTypeF.setBorder(null);
        userTypeF.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        userTypeF.setFocusable(false);

        jLabel79.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel79.setForeground(new java.awt.Color(255, 255, 255));
        jLabel79.setText("User Type");

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel79)
                .addGap(29, 29, 29)
                .addComponent(userTypeF, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel79, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userTypeF, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(105, Short.MAX_VALUE))
        );

        jPanel26.add(jPanel30);

        javax.swing.GroupLayout usersLayout = new javax.swing.GroupLayout(users);
        users.setLayout(usersLayout);
        usersLayout.setHorizontalGroup(
            usersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(usersLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(usersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel26, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, usersLayout.createSequentialGroup()
                        .addComponent(jLabel70, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(usersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(usersLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(searchBarUser, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel71, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(userSearchType, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(jLabel72, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(userState, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane4))
                .addGap(20, 20, 20))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, usersLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addUser, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(editUser, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(deleteUser, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cancelUser, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        usersLayout.setVerticalGroup(
            usersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(usersLayout.createSequentialGroup()
                .addGroup(usersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(usersLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel70, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(usersLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(usersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(searchBarUser, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel71)
                            .addGroup(usersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(userSearchType, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel72, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(userState, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(0, 0, 0)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jPanel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(usersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(usersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(editUser, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addUser, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(deleteUser, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelUser, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        parentMain.add(users, "card2");

        admins.setBackground(new java.awt.Color(51, 26, 0));

        jLabel73.setFont(new java.awt.Font("Tahoma", 2, 33)); // NOI18N
        jLabel73.setForeground(new java.awt.Color(255, 255, 255));
        jLabel73.setText("   Admins");

        searchBarAdmin.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        searchBarAdmin.setBorder(null);
        searchBarAdmin.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        searchBarAdmin.setOpaque(false);
        searchBarAdmin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchBarAdminKeyReleased(evt);
            }
        });

        jLabel77.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel77.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slibrary/image/searchBar.png"))); // NOI18N

        adminSearchType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Username", "ID", "First Name", "Last Name" }));
        adminSearchType.setBorder(null);
        adminSearchType.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        adminSearchType.setFocusable(false);

        jScrollPane5.setBorder(null);
        jScrollPane5.setFocusable(false);

        adminJTable.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        adminJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N°", "ID", "Username", "First Name", "Last Name", "Admin Type"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        adminJTable.setRowHeight(30);
        adminJTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                adminJTableMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(adminJTable);
        if (adminJTable.getColumnModel().getColumnCount() > 0) {
            adminJTable.getColumnModel().getColumn(0).setMinWidth(25);
            adminJTable.getColumnModel().getColumn(0).setPreferredWidth(25);
            adminJTable.getColumnModel().getColumn(0).setMaxWidth(25);
        }

        addAdmin.setBackground(new java.awt.Color(255, 255, 255));
        addAdmin.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        addAdmin.setForeground(new java.awt.Color(255, 255, 255));
        addAdmin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addAdmin.setText("ADD");
        addAdmin.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        addAdmin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addAdminMouseClicked(evt);
            }
        });

        editAdmin.setBackground(new java.awt.Color(255, 255, 255));
        editAdmin.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        editAdmin.setForeground(new java.awt.Color(255, 255, 255));
        editAdmin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        editAdmin.setText("EDIT");
        editAdmin.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        editAdmin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        editAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editAdminMouseClicked(evt);
            }
        });

        deleteAdmin.setBackground(new java.awt.Color(48, 14, 51));
        deleteAdmin.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        deleteAdmin.setForeground(new java.awt.Color(255, 255, 255));
        deleteAdmin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        deleteAdmin.setText("DELETE");
        deleteAdmin.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        deleteAdmin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteAdminMouseClicked(evt);
            }
        });

        cancelAdmin.setBackground(new java.awt.Color(255, 255, 255));
        cancelAdmin.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cancelAdmin.setForeground(new java.awt.Color(255, 255, 255));
        cancelAdmin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cancelAdmin.setText("CANCEL");
        cancelAdmin.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        cancelAdmin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelAdminMouseClicked(evt);
            }
        });

        jPanel31.setBackground(new java.awt.Color(51, 26, 0));
        jPanel31.setLayout(new java.awt.GridLayout(1, 0));

        jPanel32.setBackground(new java.awt.Color(51, 26, 0));

        jLabel53.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel53.setForeground(new java.awt.Color(255, 255, 255));
        jLabel53.setText("ID");

        adminID.setBackground(new java.awt.Color(51, 26, 0));
        adminID.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        adminID.setForeground(new java.awt.Color(255, 255, 255));
        adminID.setBorder(null);

        jLabel67.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel67.setForeground(new java.awt.Color(255, 255, 255));
        jLabel67.setText("Username");

        adminUsername.setBackground(new java.awt.Color(51, 26, 0));
        adminUsername.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        adminUsername.setForeground(new java.awt.Color(255, 255, 255));
        adminUsername.setBorder(null);

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel32Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel32Layout.createSequentialGroup()
                        .addComponent(jLabel67, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(adminUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator17, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel32Layout.createSequentialGroup()
                        .addComponent(jLabel53, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(adminID, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator21, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel32Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel53, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel32Layout.createSequentialGroup()
                        .addComponent(adminID, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jSeparator21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(42, 42, 42)
                .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel67, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel32Layout.createSequentialGroup()
                        .addComponent(adminUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jSeparator17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(80, Short.MAX_VALUE))
        );

        jPanel31.add(jPanel32);

        jPanel33.setBackground(new java.awt.Color(51, 26, 0));

        jLabel68.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel68.setForeground(new java.awt.Color(255, 255, 255));
        jLabel68.setText("Last Name");

        jLabel107.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel107.setForeground(new java.awt.Color(255, 255, 255));
        jLabel107.setText("First Name");

        adminLastName.setBackground(new java.awt.Color(51, 26, 0));
        adminLastName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        adminLastName.setForeground(new java.awt.Color(255, 255, 255));
        adminLastName.setBorder(null);

        adminFirstName.setBackground(new java.awt.Color(51, 26, 0));
        adminFirstName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        adminFirstName.setForeground(new java.awt.Color(255, 255, 255));
        adminFirstName.setBorder(null);

        javax.swing.GroupLayout jPanel33Layout = new javax.swing.GroupLayout(jPanel33);
        jPanel33.setLayout(jPanel33Layout);
        jPanel33Layout.setHorizontalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel107, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel68, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(adminLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator18, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(adminFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator22, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        jPanel33Layout.setVerticalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel33Layout.createSequentialGroup()
                        .addComponent(adminFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jSeparator22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(adminLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jSeparator18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel33Layout.createSequentialGroup()
                        .addComponent(jLabel107, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(jLabel68, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(81, Short.MAX_VALUE))
        );

        jPanel31.add(jPanel33);

        jPanel34.setBackground(new java.awt.Color(51, 26, 0));
        jPanel34.setFocusable(false);

        jLabel108.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel108.setForeground(new java.awt.Color(255, 255, 255));
        jLabel108.setText("Password");

        jLabel69.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel69.setForeground(new java.awt.Color(255, 255, 255));
        jLabel69.setText("Confirm Password");

        adminType.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        adminType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Principal", "Trainee" }));
        adminType.setBorder(null);
        adminType.setFocusable(false);
        adminType.setOpaque(false);

        jLabel80.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel80.setForeground(new java.awt.Color(255, 255, 255));
        jLabel80.setText("Admin Type");

        adminPassword.setBackground(new java.awt.Color(51, 26, 0));
        adminPassword.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        adminPassword.setForeground(new java.awt.Color(255, 255, 255));
        adminPassword.setBorder(null);

        adminPasswordC.setBackground(new java.awt.Color(51, 26, 0));
        adminPasswordC.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        adminPasswordC.setForeground(new java.awt.Color(255, 255, 255));
        adminPasswordC.setBorder(null);

        javax.swing.GroupLayout jPanel34Layout = new javax.swing.GroupLayout(jPanel34);
        jPanel34.setLayout(jPanel34Layout);
        jPanel34Layout.setHorizontalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel34Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel69, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                    .addComponent(jLabel80, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel108, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(adminType, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSeparator19, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                        .addComponent(jSeparator23, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                        .addComponent(adminPassword, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(adminPasswordC, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel34Layout.setVerticalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel34Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adminType, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                    .addComponent(jLabel80, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(27, 27, 27)
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel108, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel34Layout.createSequentialGroup()
                        .addComponent(adminPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jSeparator23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(42, 42, 42)
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel69, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(adminPasswordC, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(jSeparator19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );

        jPanel31.add(jPanel34);

        javax.swing.GroupLayout adminsLayout = new javax.swing.GroupLayout(admins);
        admins.setLayout(adminsLayout);
        adminsLayout.setHorizontalGroup(
            adminsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminsLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(adminsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel31, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, adminsLayout.createSequentialGroup()
                        .addComponent(jLabel73, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(adminsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(adminsLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(searchBarAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel77, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(adminSearchType, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane5))
                .addGap(20, 20, 20))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adminsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(editAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(deleteAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cancelAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        adminsLayout.setVerticalGroup(
            adminsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel73, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adminsLayout.createSequentialGroup()
                        .addGroup(adminsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(searchBarAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel77)
                            .addComponent(adminSearchType, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(adminsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(adminsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(editAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(deleteAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        parentMain.add(admins, "card2");

        loan.setBackground(new java.awt.Color(32, 102, 95));

        jTabbedPane2.setBackground(new java.awt.Color(32, 102, 95));
        jTabbedPane2.setFocusable(false);
        jTabbedPane2.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N

        BookL.setBackground(new java.awt.Color(32, 102, 95));

        jScrollPane3.setBorder(null);

        loanBookUserJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N°", "User ID", "First Name", "Last Name", "User Type"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        loanBookUserJTable.setFocusable(false);
        loanBookUserJTable.setRowHeight(30);
        loanBookUserJTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loanBookUserJTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(loanBookUserJTable);
        if (loanBookUserJTable.getColumnModel().getColumnCount() > 0) {
            loanBookUserJTable.getColumnModel().getColumn(0).setMinWidth(25);
            loanBookUserJTable.getColumnModel().getColumn(0).setPreferredWidth(25);
            loanBookUserJTable.getColumnModel().getColumn(0).setMaxWidth(25);
        }

        loanBookJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N°", "ID in Catalogue", "Title", "Autor", "Category", "ISBN"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Long.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        loanBookJTable.setFocusable(false);
        loanBookJTable.setRowHeight(30);
        loanBookJTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loanBookJTableMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(loanBookJTable);
        if (loanBookJTable.getColumnModel().getColumnCount() > 0) {
            loanBookJTable.getColumnModel().getColumn(0).setMinWidth(25);
            loanBookJTable.getColumnModel().getColumn(0).setPreferredWidth(25);
            loanBookJTable.getColumnModel().getColumn(0).setMaxWidth(25);
            loanBookJTable.getColumnModel().getColumn(1).setMinWidth(50);
            loanBookJTable.getColumnModel().getColumn(1).setPreferredWidth(50);
            loanBookJTable.getColumnModel().getColumn(1).setMaxWidth(50);
        }

        jPanel40.setBackground(new java.awt.Color(32, 102, 95));

        jLabel89.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel89.setForeground(new java.awt.Color(255, 255, 255));
        jLabel89.setText("User ID:");

        bkLoanUserID.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        bkLoanUserID.setForeground(new java.awt.Color(255, 255, 255));

        jLabel90.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel90.setForeground(new java.awt.Color(255, 255, 255));
        jLabel90.setText("First Name:");

        bkLoanFirstName.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        bkLoanFirstName.setForeground(new java.awt.Color(255, 255, 255));

        jLabel91.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel91.setForeground(new java.awt.Color(255, 255, 255));
        jLabel91.setText("Last Name:");

        bkLoanLastName.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        bkLoanLastName.setForeground(new java.awt.Color(255, 255, 255));

        bkLoanTitle.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        bkLoanTitle.setForeground(new java.awt.Color(255, 255, 255));

        jLabel92.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel92.setForeground(new java.awt.Color(255, 255, 255));
        jLabel92.setText("Tilte:");

        jLabel93.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel93.setForeground(new java.awt.Color(255, 255, 255));
        jLabel93.setText("Autor:");

        bkLoanAutor.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        bkLoanAutor.setForeground(new java.awt.Color(255, 255, 255));

        jLabel94.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel94.setForeground(new java.awt.Color(255, 255, 255));
        jLabel94.setText("ID in Catalogue:");

        bkLoanIdCata.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        bkLoanIdCata.setForeground(new java.awt.Color(255, 255, 255));

        bkLoanReDate.setDateFormatString("yyyy-MM-dd");
        bkLoanReDate.setFocusable(false);
        bkLoanReDate.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        bkLoanReDate.setOpaque(false);

        jLabel95.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel95.setForeground(new java.awt.Color(255, 255, 255));
        jLabel95.setText("Return Date:");

        bkLoanDate.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        bkLoanDate.setForeground(new java.awt.Color(255, 255, 255));

        jLabel96.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel96.setForeground(new java.awt.Color(255, 255, 255));
        jLabel96.setText("Loan Date:");

        cancelLoanBook.setBackground(new java.awt.Color(255, 255, 255));
        cancelLoanBook.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cancelLoanBook.setForeground(new java.awt.Color(255, 255, 255));
        cancelLoanBook.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cancelLoanBook.setText("CANCEL");
        cancelLoanBook.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        cancelLoanBook.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelLoanBook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelLoanBookMouseClicked(evt);
            }
        });

        loanBook.setBackground(new java.awt.Color(255, 255, 255));
        loanBook.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        loanBook.setForeground(new java.awt.Color(255, 255, 255));
        loanBook.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loanBook.setText("LOAN");
        loanBook.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        loanBook.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        loanBook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loanBookMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel40Layout = new javax.swing.GroupLayout(jPanel40);
        jPanel40.setLayout(jPanel40Layout);
        jPanel40Layout.setHorizontalGroup(
            jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel40Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel40Layout.createSequentialGroup()
                        .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel96, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel89, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(bkLoanTitle, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel40Layout.createSequentialGroup()
                                    .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(bkLoanAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(bkLoanDate, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel95, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel94))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(bkLoanIdCata, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(bkLoanReDate, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel40Layout.createSequentialGroup()
                                .addComponent(bkLoanUserID, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel90, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(bkLoanFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel91, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(bkLoanLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cancelLoanBook, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(loanBook, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel92, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel93, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel40Layout.setVerticalGroup(
            jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel40Layout.createSequentialGroup()
                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel40Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel89, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bkLoanUserID, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel91, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bkLoanLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel90, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bkLoanFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel92, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bkLoanTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel93, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel94, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bkLoanIdCata, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bkLoanAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel96, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bkLoanDate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel95, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                            .addComponent(bkLoanReDate, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)))
                    .addGroup(jPanel40Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(loanBook, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cancelLoanBook, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34))
        );

        jPanel44.setLayout(new java.awt.GridLayout(1, 0));

        jPanel45.setBackground(new java.awt.Color(32, 102, 95));

        loanBookSearchType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Title", "Autor", "ID in Catalogue", "ISBN", "Category" }));
        loanBookSearchType.setBorder(null);
        loanBookSearchType.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        loanBookSearchType.setFocusable(false);

        jLabel85.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel85.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slibrary/image/searchBar.png"))); // NOI18N

        loanBookSearchBar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        loanBookSearchBar.setBorder(null);
        loanBookSearchBar.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        loanBookSearchBar.setOpaque(false);
        loanBookSearchBar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                loanBookSearchBarKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel45Layout = new javax.swing.GroupLayout(jPanel45);
        jPanel45.setLayout(jPanel45Layout);
        jPanel45Layout.setHorizontalGroup(
            jPanel45Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 540, Short.MAX_VALUE)
            .addGroup(jPanel45Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel45Layout.createSequentialGroup()
                    .addGap(4, 4, 4)
                    .addGroup(jPanel45Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel45Layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addComponent(loanBookSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel85, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, Short.MAX_VALUE)
                    .addComponent(loanBookSearchType, 0, 102, Short.MAX_VALUE)
                    .addGap(5, 5, 5)))
        );
        jPanel45Layout.setVerticalGroup(
            jPanel45Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 47, Short.MAX_VALUE)
            .addGroup(jPanel45Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel45Layout.createSequentialGroup()
                    .addGap(4, 4, 4)
                    .addGroup(jPanel45Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(loanBookSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel85)
                        .addComponent(loanBookSearchType, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel44.add(jPanel45);

        jPanel46.setBackground(new java.awt.Color(32, 102, 95));

        loanUserSearchType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "User ID", "First Name", "Last Name", "User Type" }));
        loanUserSearchType.setBorder(null);
        loanUserSearchType.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        loanUserSearchType.setFocusable(false);

        jlabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slibrary/image/searchBar.png"))); // NOI18N

        loanUserSearchBar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        loanUserSearchBar.setBorder(null);
        loanUserSearchBar.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        loanUserSearchBar.setOpaque(false);
        loanUserSearchBar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                loanUserSearchBarKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel46Layout = new javax.swing.GroupLayout(jPanel46);
        jPanel46.setLayout(jPanel46Layout);
        jPanel46Layout.setHorizontalGroup(
            jPanel46Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 540, Short.MAX_VALUE)
            .addGroup(jPanel46Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel46Layout.createSequentialGroup()
                    .addGap(4, 4, 4)
                    .addGroup(jPanel46Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel46Layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addComponent(loanUserSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, Short.MAX_VALUE)
                    .addComponent(loanUserSearchType, 0, 102, Short.MAX_VALUE)
                    .addGap(5, 5, 5)))
        );
        jPanel46Layout.setVerticalGroup(
            jPanel46Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 47, Short.MAX_VALUE)
            .addGroup(jPanel46Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel46Layout.createSequentialGroup()
                    .addGap(4, 4, 4)
                    .addGroup(jPanel46Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(loanUserSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jlabel)
                        .addComponent(loanUserSearchType, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel44.add(jPanel46);

        javax.swing.GroupLayout BookLLayout = new javax.swing.GroupLayout(BookL);
        BookL.setLayout(BookLLayout);
        BookLLayout.setHorizontalGroup(
            BookLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BookLLayout.createSequentialGroup()
                .addGroup(BookLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(BookLLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel44, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, BookLLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(BookLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel40, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(BookLLayout.createSequentialGroup()
                                .addComponent(jScrollPane7)
                                .addGap(19, 19, 19)
                                .addComponent(jScrollPane3)))))
                .addContainerGap())
        );
        BookLLayout.setVerticalGroup(
            BookLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BookLLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jPanel44, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BookLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addComponent(jPanel40, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane2.addTab("Books", BookL);

        documentL.setBackground(new java.awt.Color(32, 102, 95));

        jScrollPane8.setBorder(null);

        loanDocumentUserJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N°", "User ID", "First Name", "Last Name", "User Type"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        loanDocumentUserJTable.setFocusable(false);
        loanDocumentUserJTable.setRowHeight(30);
        loanDocumentUserJTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loanDocumentUserJTableMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(loanDocumentUserJTable);
        if (loanDocumentUserJTable.getColumnModel().getColumnCount() > 0) {
            loanDocumentUserJTable.getColumnModel().getColumn(0).setMinWidth(25);
            loanDocumentUserJTable.getColumnModel().getColumn(0).setPreferredWidth(25);
            loanDocumentUserJTable.getColumnModel().getColumn(0).setMaxWidth(25);
        }

        loanDocumentJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N°", "ID in Catalogue", "Title", "Editor", "Category", "ID Document"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Long.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        loanDocumentJTable.setFocusable(false);
        loanDocumentJTable.setRowHeight(30);
        loanDocumentJTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loanDocumentJTableMouseClicked(evt);
            }
        });
        jScrollPane9.setViewportView(loanDocumentJTable);
        if (loanDocumentJTable.getColumnModel().getColumnCount() > 0) {
            loanDocumentJTable.getColumnModel().getColumn(0).setMinWidth(25);
            loanDocumentJTable.getColumnModel().getColumn(0).setPreferredWidth(25);
            loanDocumentJTable.getColumnModel().getColumn(0).setMaxWidth(25);
            loanDocumentJTable.getColumnModel().getColumn(1).setMinWidth(50);
            loanDocumentJTable.getColumnModel().getColumn(1).setPreferredWidth(50);
            loanDocumentJTable.getColumnModel().getColumn(1).setMaxWidth(50);
        }

        jPanel43.setBackground(new java.awt.Color(32, 102, 95));

        dcLoanUserID.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        dcLoanUserID.setForeground(new java.awt.Color(255, 255, 255));

        jLabel97.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel97.setForeground(new java.awt.Color(255, 255, 255));
        jLabel97.setText("User ID:");

        jLabel98.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel98.setForeground(new java.awt.Color(255, 255, 255));
        jLabel98.setText("Tilte:");

        dcLoanTitle.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        dcLoanTitle.setForeground(new java.awt.Color(255, 255, 255));

        jLabel99.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel99.setForeground(new java.awt.Color(255, 255, 255));
        jLabel99.setText("First Name:");

        dcLoanFirstName.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        dcLoanFirstName.setForeground(new java.awt.Color(255, 255, 255));

        jLabel100.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel100.setForeground(new java.awt.Color(255, 255, 255));
        jLabel100.setText("Last Name:");

        dcLoanLastName.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        dcLoanLastName.setForeground(new java.awt.Color(255, 255, 255));

        dcLoanIdCata.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        dcLoanIdCata.setForeground(new java.awt.Color(255, 255, 255));

        jLabel101.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel101.setForeground(new java.awt.Color(255, 255, 255));
        jLabel101.setText("ID in Catalogue:");

        dcLoanEditor.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        dcLoanEditor.setForeground(new java.awt.Color(255, 255, 255));

        jLabel102.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel102.setForeground(new java.awt.Color(255, 255, 255));
        jLabel102.setText("Editor:");

        jLabel103.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel103.setForeground(new java.awt.Color(255, 255, 255));
        jLabel103.setText("Loan Date:");

        dcLoanDate.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        dcLoanDate.setForeground(new java.awt.Color(255, 255, 255));

        jLabel104.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel104.setForeground(new java.awt.Color(255, 255, 255));
        jLabel104.setText("Return Date:");

        dcLoanReDate.setDateFormatString("yyyy-MM-dd");
        dcLoanReDate.setFocusable(false);
        dcLoanReDate.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        dcLoanReDate.setOpaque(false);

        loanDoc.setBackground(new java.awt.Color(255, 255, 255));
        loanDoc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        loanDoc.setForeground(new java.awt.Color(255, 255, 255));
        loanDoc.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loanDoc.setText("LOAN");
        loanDoc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        loanDoc.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        loanDoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loanDocMouseClicked(evt);
            }
        });

        cancelLoanDoc.setBackground(new java.awt.Color(255, 255, 255));
        cancelLoanDoc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cancelLoanDoc.setForeground(new java.awt.Color(255, 255, 255));
        cancelLoanDoc.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cancelLoanDoc.setText("CANCEL");
        cancelLoanDoc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        cancelLoanDoc.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelLoanDoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelLoanDocMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel43Layout = new javax.swing.GroupLayout(jPanel43);
        jPanel43.setLayout(jPanel43Layout);
        jPanel43Layout.setHorizontalGroup(
            jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel43Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel43Layout.createSequentialGroup()
                        .addGroup(jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel103, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel97, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel43Layout.createSequentialGroup()
                                .addComponent(dcLoanUserID, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel99, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(dcLoanFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel100, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(dcLoanLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(dcLoanTitle, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel43Layout.createSequentialGroup()
                                    .addGroup(jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(dcLoanEditor, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(dcLoanDate, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel104, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel101))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(dcLoanIdCata, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(dcLoanReDate, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addComponent(jLabel98, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel102, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cancelLoanDoc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loanDoc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel43Layout.setVerticalGroup(
            jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel43Layout.createSequentialGroup()
                .addGroup(jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel43Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel97, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dcLoanUserID, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel100, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dcLoanLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel99, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dcLoanFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel98, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dcLoanTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel102, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel101, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dcLoanIdCata, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dcLoanEditor, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dcLoanReDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel103, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dcLoanDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel104, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)))
                    .addGroup(jPanel43Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(loanDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cancelLoanDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(32, 32, 32))
        );

        jPanel47.setLayout(new java.awt.GridLayout(1, 0));

        jPanel48.setBackground(new java.awt.Color(32, 102, 95));

        loanDocumentSearchType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Title", "Editor", "ID in Catalogue", "ID Document", "Category" }));
        loanDocumentSearchType.setBorder(null);
        loanDocumentSearchType.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        loanDocumentSearchType.setFocusable(false);

        jLabel88.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel88.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slibrary/image/searchBar.png"))); // NOI18N

        loanDocumentSearchBar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        loanDocumentSearchBar.setBorder(null);
        loanDocumentSearchBar.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        loanDocumentSearchBar.setOpaque(false);
        loanDocumentSearchBar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                loanDocumentSearchBarKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel48Layout = new javax.swing.GroupLayout(jPanel48);
        jPanel48.setLayout(jPanel48Layout);
        jPanel48Layout.setHorizontalGroup(
            jPanel48Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 540, Short.MAX_VALUE)
            .addGroup(jPanel48Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel48Layout.createSequentialGroup()
                    .addGap(4, 4, 4)
                    .addGroup(jPanel48Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel48Layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addComponent(loanDocumentSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel88, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, Short.MAX_VALUE)
                    .addComponent(loanDocumentSearchType, 0, 102, Short.MAX_VALUE)
                    .addGap(5, 5, 5)))
        );
        jPanel48Layout.setVerticalGroup(
            jPanel48Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 47, Short.MAX_VALUE)
            .addGroup(jPanel48Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel48Layout.createSequentialGroup()
                    .addGap(4, 4, 4)
                    .addGroup(jPanel48Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(loanDocumentSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel88)
                        .addComponent(loanDocumentSearchType, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel47.add(jPanel48);

        jPanel49.setBackground(new java.awt.Color(32, 102, 95));

        loanUserDocSearchType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "User ID", "First Name", "Last Name", "User Type" }));
        loanUserDocSearchType.setBorder(null);
        loanUserDocSearchType.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        loanUserDocSearchType.setFocusable(false);

        jlab.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlab.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slibrary/image/searchBar.png"))); // NOI18N

        loanUserDocSearchBar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        loanUserDocSearchBar.setBorder(null);
        loanUserDocSearchBar.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        loanUserDocSearchBar.setOpaque(false);
        loanUserDocSearchBar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                loanUserDocSearchBarKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel49Layout = new javax.swing.GroupLayout(jPanel49);
        jPanel49.setLayout(jPanel49Layout);
        jPanel49Layout.setHorizontalGroup(
            jPanel49Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 540, Short.MAX_VALUE)
            .addGroup(jPanel49Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel49Layout.createSequentialGroup()
                    .addGap(4, 4, 4)
                    .addGroup(jPanel49Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel49Layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addComponent(loanUserDocSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jlab, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, Short.MAX_VALUE)
                    .addComponent(loanUserDocSearchType, 0, 102, Short.MAX_VALUE)
                    .addGap(5, 5, 5)))
        );
        jPanel49Layout.setVerticalGroup(
            jPanel49Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 47, Short.MAX_VALUE)
            .addGroup(jPanel49Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel49Layout.createSequentialGroup()
                    .addGap(4, 4, 4)
                    .addGroup(jPanel49Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(loanUserDocSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jlab)
                        .addComponent(loanUserDocSearchType, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel47.add(jPanel49);

        javax.swing.GroupLayout documentLLayout = new javax.swing.GroupLayout(documentL);
        documentL.setLayout(documentLLayout);
        documentLLayout.setHorizontalGroup(
            documentLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, documentLLayout.createSequentialGroup()
                .addGroup(documentLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(documentLLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel47, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, documentLLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(documentLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel43, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(documentLLayout.createSequentialGroup()
                                .addComponent(jScrollPane9)
                                .addGap(19, 19, 19)
                                .addComponent(jScrollPane8)))))
                .addContainerGap())
        );
        documentLLayout.setVerticalGroup(
            documentLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(documentLLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jPanel47, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(documentLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addComponent(jPanel43, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane2.addTab("Documents", documentL);

        javax.swing.GroupLayout loanLayout = new javax.swing.GroupLayout(loan);
        loan.setLayout(loanLayout);
        loanLayout.setHorizontalGroup(
            loanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );
        loanLayout.setVerticalGroup(
            loanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );

        parentMain.add(loan, "card2");

        reeturn.setBackground(new java.awt.Color(32, 47, 90));

        jTabbedPane3.setBackground(new java.awt.Color(32, 47, 90));
        jTabbedPane3.setFocusable(false);
        jTabbedPane3.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N

        BookR.setBackground(new java.awt.Color(32, 47, 90));

        jScrollPane10.setBorder(null);

        returnBookUserJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N°", "User ID", "First Name", "Last Name", "User Type"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        returnBookUserJTable.setFocusable(false);
        returnBookUserJTable.setRowHeight(30);
        returnBookUserJTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                returnBookUserJTableMouseClicked(evt);
            }
        });
        jScrollPane10.setViewportView(returnBookUserJTable);
        if (returnBookUserJTable.getColumnModel().getColumnCount() > 0) {
            returnBookUserJTable.getColumnModel().getColumn(0).setMinWidth(25);
            returnBookUserJTable.getColumnModel().getColumn(0).setPreferredWidth(25);
            returnBookUserJTable.getColumnModel().getColumn(0).setMaxWidth(25);
        }

        returnBookJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N°", "ID in Catalogue", "Title", "Autor", "Category", "Status", "Book State", "ISBN", "Loan Date", "Return Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Long.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        returnBookJTable.setFocusable(false);
        returnBookJTable.setRowHeight(30);
        returnBookJTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                returnBookJTableMouseClicked(evt);
            }
        });
        jScrollPane11.setViewportView(returnBookJTable);
        if (returnBookJTable.getColumnModel().getColumnCount() > 0) {
            returnBookJTable.getColumnModel().getColumn(0).setMinWidth(25);
            returnBookJTable.getColumnModel().getColumn(0).setPreferredWidth(25);
            returnBookJTable.getColumnModel().getColumn(0).setMaxWidth(25);
            returnBookJTable.getColumnModel().getColumn(1).setMinWidth(50);
            returnBookJTable.getColumnModel().getColumn(1).setPreferredWidth(50);
            returnBookJTable.getColumnModel().getColumn(1).setMaxWidth(50);
        }

        jPanel50.setBackground(new java.awt.Color(32, 47, 90));

        bkreturnUserType.setText("kjnjon");

        bkreturnUserStatus.setText("kjnjon");

        bkRDate.setDateFormatString("yyyy-MM-dd");
        bkRDate.setFocusable(false);
        bkRDate.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        bkRDate.setOpaque(false);

        bkreturnIdCata.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        bkreturnIdCata.setForeground(new java.awt.Color(255, 255, 255));

        jLabel105.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel105.setForeground(new java.awt.Color(255, 255, 255));
        jLabel105.setText("ID in Catalogue:");

        jLabel106.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel106.setForeground(new java.awt.Color(255, 255, 255));
        jLabel106.setText("Return Date:");

        returnBookState.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        returnBookState.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "new", "very good state", "good state", "used", "damaged" }));
        returnBookState.setBorder(null);
        returnBookState.setFocusable(false);
        returnBookState.setOpaque(false);

        jLabel110.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel110.setForeground(new java.awt.Color(255, 255, 255));
        jLabel110.setText("Book State:");

        jLabel112.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel112.setForeground(new java.awt.Color(255, 255, 255));
        jLabel112.setText("Autor:");

        bkreturnAutor.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        bkreturnAutor.setForeground(new java.awt.Color(255, 255, 255));

        jLabel113.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel113.setForeground(new java.awt.Color(255, 255, 255));
        jLabel113.setText("Tilte:");

        bkreturnTitle.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        bkreturnTitle.setForeground(new java.awt.Color(255, 255, 255));

        jLabel114.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel114.setForeground(new java.awt.Color(255, 255, 255));
        jLabel114.setText("User ID:");

        jLabel115.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel115.setForeground(new java.awt.Color(255, 255, 255));
        jLabel115.setText("First Name:");

        bkreturnUserID.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        bkreturnUserID.setForeground(new java.awt.Color(255, 255, 255));

        bkreturnFirstName.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        bkreturnFirstName.setForeground(new java.awt.Color(255, 255, 255));

        jLabel116.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel116.setForeground(new java.awt.Color(255, 255, 255));
        jLabel116.setText("Last Name:");

        bkreturnLastName.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        bkreturnLastName.setForeground(new java.awt.Color(255, 255, 255));

        cancelReturnBook.setBackground(new java.awt.Color(255, 255, 255));
        cancelReturnBook.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cancelReturnBook.setForeground(new java.awt.Color(255, 255, 255));
        cancelReturnBook.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cancelReturnBook.setText("CANCEL");
        cancelReturnBook.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        cancelReturnBook.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelReturnBook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelReturnBookMouseClicked(evt);
            }
        });

        editRDateBook.setBackground(new java.awt.Color(255, 255, 255));
        editRDateBook.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        editRDateBook.setForeground(new java.awt.Color(255, 255, 255));
        editRDateBook.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        editRDateBook.setText("EDIT DATE");
        editRDateBook.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        editRDateBook.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        editRDateBook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editRDateBookMouseClicked(evt);
            }
        });

        returnBook.setBackground(new java.awt.Color(255, 255, 255));
        returnBook.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        returnBook.setForeground(new java.awt.Color(255, 255, 255));
        returnBook.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        returnBook.setText("RETURN");
        returnBook.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        returnBook.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        returnBook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                returnBookMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel50Layout = new javax.swing.GroupLayout(jPanel50);
        jPanel50.setLayout(jPanel50Layout);
        jPanel50Layout.setHorizontalGroup(
            jPanel50Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel50Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel50Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel112, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel50Layout.createSequentialGroup()
                        .addGroup(jPanel50Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel50Layout.createSequentialGroup()
                                .addGroup(jPanel50Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel110, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel114, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel50Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel50Layout.createSequentialGroup()
                                        .addComponent(bkreturnUserID, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel115, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(bkreturnFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel116, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(bkreturnLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel50Layout.createSequentialGroup()
                                        .addGroup(jPanel50Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(bkreturnTitle, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel50Layout.createSequentialGroup()
                                                .addGroup(jPanel50Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(bkreturnAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(returnBookState, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel50Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel105)
                                                    .addComponent(jLabel106))
                                                .addGap(27, 27, 27)
                                                .addGroup(jPanel50Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(bkreturnIdCata, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(bkRDate, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel50Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(bkreturnUserType, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(bkreturnUserStatus)))))
                            .addComponent(jLabel113, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel50Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(editRDateBook, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cancelReturnBook, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(returnBook, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel50Layout.setVerticalGroup(
            jPanel50Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel50Layout.createSequentialGroup()
                .addGroup(jPanel50Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel50Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel50Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel114, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bkreturnUserID, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel116, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bkreturnLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel115, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bkreturnFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel50Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel113, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bkreturnTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(jPanel50Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel112, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel105, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bkreturnIdCata, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bkreturnAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel50Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(returnBook, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(editRDateBook, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel50Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel50Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel110, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel50Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(returnBookState)
                            .addComponent(cancelReturnBook, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel50Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel106, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bkRDate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(35, 35, 35))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel50Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel50Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel50Layout.createSequentialGroup()
                        .addComponent(bkreturnUserType)
                        .addGap(25, 25, 25))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel50Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(bkreturnUserStatus)))
                .addGap(63, 63, 63))
        );

        jPanel51.setLayout(new java.awt.GridLayout(1, 0));

        jPanel52.setBackground(new java.awt.Color(32, 47, 90));

        returnBookSearchType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Title", "Autor", "ID in Catalogue", "ISBN", "Category" }));
        returnBookSearchType.setBorder(null);
        returnBookSearchType.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        returnBookSearchType.setFocusable(false);

        jLabel117.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel117.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slibrary/image/searchBar.png"))); // NOI18N

        returnBookSearchBar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        returnBookSearchBar.setBorder(null);
        returnBookSearchBar.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        returnBookSearchBar.setOpaque(false);
        returnBookSearchBar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                returnBookSearchBarKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel52Layout = new javax.swing.GroupLayout(jPanel52);
        jPanel52.setLayout(jPanel52Layout);
        jPanel52Layout.setHorizontalGroup(
            jPanel52Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 540, Short.MAX_VALUE)
            .addGroup(jPanel52Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel52Layout.createSequentialGroup()
                    .addGap(4, 4, 4)
                    .addGroup(jPanel52Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel52Layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addComponent(returnBookSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel117, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, Short.MAX_VALUE)
                    .addComponent(returnBookSearchType, 0, 102, Short.MAX_VALUE)
                    .addGap(5, 5, 5)))
        );
        jPanel52Layout.setVerticalGroup(
            jPanel52Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 47, Short.MAX_VALUE)
            .addGroup(jPanel52Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel52Layout.createSequentialGroup()
                    .addGap(4, 4, 4)
                    .addGroup(jPanel52Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(returnBookSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel117)
                        .addComponent(returnBookSearchType, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel51.add(jPanel52);

        jPanel53.setBackground(new java.awt.Color(32, 47, 90));

        returnUserSearchType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "User ID", "First Name", "Last Name", "User Type" }));
        returnUserSearchType.setBorder(null);
        returnUserSearchType.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        returnUserSearchType.setFocusable(false);

        loanUserSearch.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loanUserSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slibrary/image/searchBar.png"))); // NOI18N

        returnUserSearchBar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        returnUserSearchBar.setBorder(null);
        returnUserSearchBar.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        returnUserSearchBar.setOpaque(false);
        returnUserSearchBar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                returnUserSearchBarKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel53Layout = new javax.swing.GroupLayout(jPanel53);
        jPanel53.setLayout(jPanel53Layout);
        jPanel53Layout.setHorizontalGroup(
            jPanel53Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 540, Short.MAX_VALUE)
            .addGroup(jPanel53Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel53Layout.createSequentialGroup()
                    .addGap(4, 4, 4)
                    .addGroup(jPanel53Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel53Layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addComponent(returnUserSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(loanUserSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, Short.MAX_VALUE)
                    .addComponent(returnUserSearchType, 0, 102, Short.MAX_VALUE)
                    .addGap(5, 5, 5)))
        );
        jPanel53Layout.setVerticalGroup(
            jPanel53Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 47, Short.MAX_VALUE)
            .addGroup(jPanel53Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel53Layout.createSequentialGroup()
                    .addGap(4, 4, 4)
                    .addGroup(jPanel53Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(returnUserSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(loanUserSearch)
                        .addComponent(returnUserSearchType, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel51.add(jPanel53);

        javax.swing.GroupLayout BookRLayout = new javax.swing.GroupLayout(BookR);
        BookR.setLayout(BookRLayout);
        BookRLayout.setHorizontalGroup(
            BookRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BookRLayout.createSequentialGroup()
                .addGroup(BookRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(BookRLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel51, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, BookRLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(BookRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel50, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(BookRLayout.createSequentialGroup()
                                .addComponent(jScrollPane11)
                                .addGap(19, 19, 19)
                                .addComponent(jScrollPane10)))))
                .addContainerGap())
        );
        BookRLayout.setVerticalGroup(
            BookRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BookRLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jPanel51, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BookRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addComponent(jPanel50, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane3.addTab("Books", BookR);

        documentR.setBackground(new java.awt.Color(32, 47, 90));

        jScrollPane12.setBorder(null);

        returnDocUserJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N°", "User ID", "First Name", "Last Name", "User Type"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        returnDocUserJTable.setFocusable(false);
        returnDocUserJTable.setRowHeight(30);
        returnDocUserJTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                returnDocUserJTableMouseClicked(evt);
            }
        });
        jScrollPane12.setViewportView(returnDocUserJTable);
        if (returnDocUserJTable.getColumnModel().getColumnCount() > 0) {
            returnDocUserJTable.getColumnModel().getColumn(0).setMinWidth(25);
            returnDocUserJTable.getColumnModel().getColumn(0).setPreferredWidth(25);
            returnDocUserJTable.getColumnModel().getColumn(0).setMaxWidth(25);
        }

        returnDocJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N°", "ID in Catalogue", "Title", "Editor", "Category", "Status", "Doc State", "ID", "Loan Date", "Return Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Long.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        returnDocJTable.setFocusable(false);
        returnDocJTable.setRowHeight(30);
        returnDocJTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                returnDocJTableMouseClicked(evt);
            }
        });
        jScrollPane13.setViewportView(returnDocJTable);
        if (returnDocJTable.getColumnModel().getColumnCount() > 0) {
            returnDocJTable.getColumnModel().getColumn(0).setMinWidth(25);
            returnDocJTable.getColumnModel().getColumn(0).setPreferredWidth(25);
            returnDocJTable.getColumnModel().getColumn(0).setMaxWidth(25);
            returnDocJTable.getColumnModel().getColumn(1).setMinWidth(50);
            returnDocJTable.getColumnModel().getColumn(1).setPreferredWidth(50);
            returnDocJTable.getColumnModel().getColumn(1).setMaxWidth(50);
        }

        jPanel54.setBackground(new java.awt.Color(32, 47, 90));

        dcreturnUserType.setText("kjnjon");

        dcreturnUserStatus.setText("kjnjon");

        dcRDate.setDateFormatString("yyyy-MM-dd");
        dcRDate.setFocusable(false);
        dcRDate.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        dcRDate.setOpaque(false);

        dcreturnIdCata.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        dcreturnIdCata.setForeground(new java.awt.Color(255, 255, 255));

        jLabel118.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel118.setForeground(new java.awt.Color(255, 255, 255));
        jLabel118.setText("ID in Catalogue:");

        jLabel119.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel119.setForeground(new java.awt.Color(255, 255, 255));
        jLabel119.setText("Return Date:");

        returnDocState.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        returnDocState.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "new", "very good state", "good state", "used", "damaged" }));
        returnDocState.setBorder(null);
        returnDocState.setFocusable(false);
        returnDocState.setOpaque(false);

        jLabel120.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel120.setForeground(new java.awt.Color(255, 255, 255));
        jLabel120.setText("Document State:");

        jLabel121.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel121.setForeground(new java.awt.Color(255, 255, 255));
        jLabel121.setText("Editor:");

        dcreturnEditor.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        dcreturnEditor.setForeground(new java.awt.Color(255, 255, 255));

        jLabel122.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel122.setForeground(new java.awt.Color(255, 255, 255));
        jLabel122.setText("Tilte:");

        dcreturnTitle.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        dcreturnTitle.setForeground(new java.awt.Color(255, 255, 255));

        jLabel123.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel123.setForeground(new java.awt.Color(255, 255, 255));
        jLabel123.setText("User ID:");

        jLabel124.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel124.setForeground(new java.awt.Color(255, 255, 255));
        jLabel124.setText("First Name:");

        dcreturnUserID.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        dcreturnUserID.setForeground(new java.awt.Color(255, 255, 255));

        dcreturnFirstName.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        dcreturnFirstName.setForeground(new java.awt.Color(255, 255, 255));

        jLabel125.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel125.setForeground(new java.awt.Color(255, 255, 255));
        jLabel125.setText("Last Name:");

        dcreturnLastName.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        dcreturnLastName.setForeground(new java.awt.Color(255, 255, 255));

        cancelReturnDoc.setBackground(new java.awt.Color(255, 255, 255));
        cancelReturnDoc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cancelReturnDoc.setForeground(new java.awt.Color(255, 255, 255));
        cancelReturnDoc.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cancelReturnDoc.setText("CANCEL");
        cancelReturnDoc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        cancelReturnDoc.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelReturnDoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelReturnDocMouseClicked(evt);
            }
        });

        editRDateDoc.setBackground(new java.awt.Color(255, 255, 255));
        editRDateDoc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        editRDateDoc.setForeground(new java.awt.Color(255, 255, 255));
        editRDateDoc.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        editRDateDoc.setText("EDIT DATE");
        editRDateDoc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        editRDateDoc.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        editRDateDoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editRDateDocMouseClicked(evt);
            }
        });

        returnDoc.setBackground(new java.awt.Color(255, 255, 255));
        returnDoc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        returnDoc.setForeground(new java.awt.Color(255, 255, 255));
        returnDoc.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        returnDoc.setText("RETURN");
        returnDoc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        returnDoc.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        returnDoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                returnDocMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel54Layout = new javax.swing.GroupLayout(jPanel54);
        jPanel54.setLayout(jPanel54Layout);
        jPanel54Layout.setHorizontalGroup(
            jPanel54Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel54Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel54Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel121, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel54Layout.createSequentialGroup()
                        .addGroup(jPanel54Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel54Layout.createSequentialGroup()
                                .addGroup(jPanel54Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel123, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel120, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel54Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel54Layout.createSequentialGroup()
                                        .addComponent(dcreturnUserID, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel124, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(dcreturnFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel125, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(dcreturnLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel54Layout.createSequentialGroup()
                                        .addGroup(jPanel54Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(dcreturnTitle, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel54Layout.createSequentialGroup()
                                                .addGroup(jPanel54Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(dcreturnEditor, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(jPanel54Layout.createSequentialGroup()
                                                        .addGap(61, 61, 61)
                                                        .addComponent(returnDocState, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel54Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel118)
                                                    .addComponent(jLabel119))
                                                .addGap(27, 27, 27)
                                                .addGroup(jPanel54Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(dcreturnIdCata, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(dcRDate, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel54Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(dcreturnUserType, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(dcreturnUserStatus)))))
                            .addComponent(jLabel122, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel54Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(editRDateDoc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cancelReturnDoc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(returnDoc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel54Layout.setVerticalGroup(
            jPanel54Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel54Layout.createSequentialGroup()
                .addGroup(jPanel54Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel54Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel54Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel123, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dcreturnUserID, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel125, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dcreturnLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel124, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dcreturnFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel54Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel122, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dcreturnTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(jPanel54Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel121, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel118, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dcreturnIdCata, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dcreturnEditor, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel54Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(returnDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(editRDateDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel54Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel54Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel54Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel120, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(returnDocState))
                        .addComponent(cancelReturnDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel54Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel119, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dcRDate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(35, 35, 35))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel54Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel54Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel54Layout.createSequentialGroup()
                        .addComponent(dcreturnUserType)
                        .addGap(25, 25, 25))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel54Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(dcreturnUserStatus)))
                .addGap(63, 63, 63))
        );

        jPanel55.setLayout(new java.awt.GridLayout(1, 0));

        jPanel56.setBackground(new java.awt.Color(32, 47, 90));

        returnDockSearchType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Title", "Editor", "ID in Catalogue", "ID", "Category" }));
        returnDockSearchType.setBorder(null);
        returnDockSearchType.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        returnDockSearchType.setFocusable(false);

        jLabel126.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel126.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slibrary/image/searchBar.png"))); // NOI18N

        returnDocSearchBar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        returnDocSearchBar.setBorder(null);
        returnDocSearchBar.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        returnDocSearchBar.setOpaque(false);
        returnDocSearchBar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                returnDocSearchBarKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel56Layout = new javax.swing.GroupLayout(jPanel56);
        jPanel56.setLayout(jPanel56Layout);
        jPanel56Layout.setHorizontalGroup(
            jPanel56Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 540, Short.MAX_VALUE)
            .addGroup(jPanel56Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel56Layout.createSequentialGroup()
                    .addGap(4, 4, 4)
                    .addGroup(jPanel56Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel56Layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addComponent(returnDocSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel126, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, Short.MAX_VALUE)
                    .addComponent(returnDockSearchType, 0, 102, Short.MAX_VALUE)
                    .addGap(5, 5, 5)))
        );
        jPanel56Layout.setVerticalGroup(
            jPanel56Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 47, Short.MAX_VALUE)
            .addGroup(jPanel56Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel56Layout.createSequentialGroup()
                    .addGap(4, 4, 4)
                    .addGroup(jPanel56Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(returnDocSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel126)
                        .addComponent(returnDockSearchType, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel55.add(jPanel56);

        jPanel57.setBackground(new java.awt.Color(32, 47, 90));

        returnDocUserSearchType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "User ID", "First Name", "Last Name", "User Type" }));
        returnDocUserSearchType.setBorder(null);
        returnDocUserSearchType.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        returnDocUserSearchType.setFocusable(false);

        loanUserSearchBar2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loanUserSearchBar2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slibrary/image/searchBar.png"))); // NOI18N

        returnDocUserSearchBar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        returnDocUserSearchBar.setBorder(null);
        returnDocUserSearchBar.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        returnDocUserSearchBar.setOpaque(false);
        returnDocUserSearchBar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                returnDocUserSearchBarKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel57Layout = new javax.swing.GroupLayout(jPanel57);
        jPanel57.setLayout(jPanel57Layout);
        jPanel57Layout.setHorizontalGroup(
            jPanel57Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 540, Short.MAX_VALUE)
            .addGroup(jPanel57Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel57Layout.createSequentialGroup()
                    .addGap(4, 4, 4)
                    .addGroup(jPanel57Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel57Layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addComponent(returnDocUserSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(loanUserSearchBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, Short.MAX_VALUE)
                    .addComponent(returnDocUserSearchType, 0, 102, Short.MAX_VALUE)
                    .addGap(5, 5, 5)))
        );
        jPanel57Layout.setVerticalGroup(
            jPanel57Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 47, Short.MAX_VALUE)
            .addGroup(jPanel57Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel57Layout.createSequentialGroup()
                    .addGap(4, 4, 4)
                    .addGroup(jPanel57Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(returnDocUserSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(loanUserSearchBar2)
                        .addComponent(returnDocUserSearchType, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel55.add(jPanel57);

        javax.swing.GroupLayout documentRLayout = new javax.swing.GroupLayout(documentR);
        documentR.setLayout(documentRLayout);
        documentRLayout.setHorizontalGroup(
            documentRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, documentRLayout.createSequentialGroup()
                .addGroup(documentRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(documentRLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel55, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, documentRLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(documentRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel54, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(documentRLayout.createSequentialGroup()
                                .addComponent(jScrollPane13)
                                .addGap(19, 19, 19)
                                .addComponent(jScrollPane12)))))
                .addContainerGap())
        );
        documentRLayout.setVerticalGroup(
            documentRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(documentRLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jPanel55, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(documentRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addComponent(jPanel54, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane3.addTab("Documents", documentR);

        javax.swing.GroupLayout reeturnLayout = new javax.swing.GroupLayout(reeturn);
        reeturn.setLayout(reeturnLayout);
        reeturnLayout.setHorizontalGroup(
            reeturnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane3)
        );
        reeturnLayout.setVerticalGroup(
            reeturnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane3)
        );

        parentMain.add(reeturn, "card2");

        punishment.setBackground(new java.awt.Color(0, 26, 9));

        jLabel78.setFont(new java.awt.Font("Tahoma", 2, 33)); // NOI18N
        jLabel78.setForeground(new java.awt.Color(255, 255, 255));
        jLabel78.setText("   Punishment");

        jScrollPane6.setBorder(null);
        jScrollPane6.setFocusable(false);

        punishmentJTable.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        punishmentJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N°", "ID", "First Name", "Last Name", "Statu", "Ban", "Ban Start", "Ban End", "Penalty"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        punishmentJTable.setRowHeight(30);
        punishmentJTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                punishmentJTableMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(punishmentJTable);
        if (punishmentJTable.getColumnModel().getColumnCount() > 0) {
            punishmentJTable.getColumnModel().getColumn(0).setMinWidth(25);
            punishmentJTable.getColumnModel().getColumn(0).setPreferredWidth(25);
            punishmentJTable.getColumnModel().getColumn(0).setMaxWidth(25);
        }

        banP.setBackground(new java.awt.Color(255, 255, 255));
        banP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        banP.setForeground(new java.awt.Color(255, 255, 255));
        banP.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        banP.setText("BAN");
        banP.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        banP.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        banP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                banPMouseClicked(evt);
            }
        });

        unbanP.setBackground(new java.awt.Color(255, 255, 255));
        unbanP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        unbanP.setForeground(new java.awt.Color(255, 255, 255));
        unbanP.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        unbanP.setText("UNBAN");
        unbanP.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        unbanP.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        unbanP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                unbanPMouseClicked(evt);
            }
        });

        editP.setBackground(new java.awt.Color(48, 14, 51));
        editP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        editP.setForeground(new java.awt.Color(255, 255, 255));
        editP.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        editP.setText("PENALTY");
        editP.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        editP.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        editP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editPMouseClicked(evt);
            }
        });

        cancelP.setBackground(new java.awt.Color(255, 255, 255));
        cancelP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cancelP.setForeground(new java.awt.Color(255, 255, 255));
        cancelP.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cancelP.setText("CANCEL");
        cancelP.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        cancelP.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelPMouseClicked(evt);
            }
        });

        jPanel35.setBackground(new java.awt.Color(0, 26, 9));
        jPanel35.setLayout(new java.awt.GridLayout(1, 0));

        jPanel36.setBackground(new java.awt.Color(0, 26, 9));

        jLabel82.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel82.setForeground(new java.awt.Color(255, 255, 255));
        jLabel82.setText("ID");

        jLabel83.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel83.setForeground(new java.awt.Color(255, 255, 255));
        jLabel83.setText("Ban Start");

        startBan.setDateFormatString("yyyy-MM-dd");
        startBan.setFocusable(false);
        startBan.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        startBan.setOpaque(false);

        userIdPuni.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        userIdPuni.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel36Layout = new javax.swing.GroupLayout(jPanel36);
        jPanel36.setLayout(jPanel36Layout);
        jPanel36Layout.setHorizontalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel36Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel36Layout.createSequentialGroup()
                        .addComponent(jLabel83, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(startBan, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel36Layout.createSequentialGroup()
                        .addComponent(jLabel82, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(userIdPuni, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel36Layout.setVerticalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel36Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel82, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userIdPuni, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel83, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(startBan, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(82, Short.MAX_VALUE))
        );

        jPanel35.add(jPanel36);

        jPanel37.setBackground(new java.awt.Color(0, 26, 9));

        jLabel109.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel109.setForeground(new java.awt.Color(255, 255, 255));
        jLabel109.setText("First Name");

        firstNamePuni.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        firstNamePuni.setForeground(new java.awt.Color(255, 255, 255));

        jLabel86.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel86.setForeground(new java.awt.Color(255, 255, 255));
        jLabel86.setText("Ban End");

        endBan.setDateFormatString("yyyy-MM-dd");
        endBan.setFocusable(false);
        endBan.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        endBan.setOpaque(false);

        javax.swing.GroupLayout jPanel37Layout = new javax.swing.GroupLayout(jPanel37);
        jPanel37.setLayout(jPanel37Layout);
        jPanel37Layout.setHorizontalGroup(
            jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel37Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel37Layout.createSequentialGroup()
                        .addComponent(jLabel86, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(endBan, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel37Layout.createSequentialGroup()
                        .addComponent(jLabel109, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(firstNamePuni, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel37Layout.setVerticalGroup(
            jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel37Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(firstNamePuni, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel109, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel86, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(endBan, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(85, Short.MAX_VALUE))
        );

        jPanel35.add(jPanel37);

        jPanel38.setBackground(new java.awt.Color(0, 26, 9));
        jPanel38.setFocusable(false);

        jLabel84.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel84.setForeground(new java.awt.Color(255, 255, 255));
        jLabel84.setText("Last Name");

        lastNamePuni.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lastNamePuni.setForeground(new java.awt.Color(255, 255, 255));

        penaltyValue.setBackground(new java.awt.Color(0, 26, 9));
        penaltyValue.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        penaltyValue.setForeground(new java.awt.Color(255, 255, 255));
        penaltyValue.setBorder(null);

        jLabel111.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel111.setForeground(new java.awt.Color(255, 255, 255));
        jLabel111.setText("Penalty Value");

        javax.swing.GroupLayout jPanel38Layout = new javax.swing.GroupLayout(jPanel38);
        jPanel38.setLayout(jPanel38Layout);
        jPanel38Layout.setHorizontalGroup(
            jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel38Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel38Layout.createSequentialGroup()
                        .addComponent(jLabel84, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(lastNamePuni, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel38Layout.createSequentialGroup()
                        .addComponent(jLabel111)
                        .addGap(27, 27, 27)
                        .addComponent(penaltyValue, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel38Layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(jSeparator27, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel38Layout.setVerticalGroup(
            jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel38Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel84, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastNamePuni, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel111, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(penaltyValue, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(jSeparator27, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(79, Short.MAX_VALUE))
        );

        jPanel35.add(jPanel38);

        jLabel81.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel81.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slibrary/image/searchBar.png"))); // NOI18N

        searchBarUserPuni.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        searchBarUserPuni.setBorder(null);
        searchBarUserPuni.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        searchBarUserPuni.setOpaque(false);
        searchBarUserPuni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchBarUserPuniKeyReleased(evt);
            }
        });

        puniSearchType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "User ID", "First Name", "Last Name", "Ban Start", "Ban End", "Penalty" }));
        puniSearchType.setBorder(null);
        puniSearchType.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        puniSearchType.setFocusable(false);

        jLabel87.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel87.setForeground(new java.awt.Color(255, 255, 255));
        jLabel87.setText("User State");

        puniUserState.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Banned", "Late", "Penalty" }));
        puniUserState.setBorder(null);
        puniUserState.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        puniUserState.setFocusable(false);
        puniUserState.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                puniUserStateItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout punishmentLayout = new javax.swing.GroupLayout(punishment);
        punishment.setLayout(punishmentLayout);
        punishmentLayout.setHorizontalGroup(
            punishmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(punishmentLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(punishmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel35, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, punishmentLayout.createSequentialGroup()
                        .addComponent(jLabel78, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(punishmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(punishmentLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(searchBarUserPuni, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel81, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(puniSearchType, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(jLabel87, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(puniUserState, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15))
                    .addComponent(jScrollPane6))
                .addGap(20, 20, 20))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, punishmentLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(banP, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(unbanP, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(editP, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cancelP, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        punishmentLayout.setVerticalGroup(
            punishmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(punishmentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(punishmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel78, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, punishmentLayout.createSequentialGroup()
                        .addGroup(punishmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(searchBarUserPuni, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel81)
                            .addGroup(punishmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(puniSearchType, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel87, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(puniUserState, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jPanel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(punishmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(punishmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(unbanP, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(banP, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(editP, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelP, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        parentMain.add(punishment, "card2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(parentMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(parentMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closePanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closePanelMouseClicked
        try {
            Obout.writeObject("main logOut");
            Obout.writeObject(l.id_adminDatabase);
            Obout.writeObject(l.name);
            Obout.writeObject("logOut");
            t.stop();
        } catch (IOException ex) {
            serverDown();
        }
        System.exit(0);
    }//GEN-LAST:event_closePanelMouseClicked

    private void closePanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closePanelMouseEntered
        closePanel.setBackground(new Color(232, 17, 35));
    }//GEN-LAST:event_closePanelMouseEntered

    private void closePanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closePanelMouseExited
        closePanel.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_closePanelMouseExited

    private void maxPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_maxPanelMouseClicked
        if (this.getExtendedState() != JFrame.MAXIMIZED_BOTH) {
            this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        } else {
            this.setExtendedState(JFrame.NORMAL);
        }
    }//GEN-LAST:event_maxPanelMouseClicked

    private void maxPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_maxPanelMouseEntered
        maxPanel.setBackground(new Color(229, 229, 229));
    }//GEN-LAST:event_maxPanelMouseEntered

    private void maxPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_maxPanelMouseExited
        maxPanel.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_maxPanelMouseExited

    private void minPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minPanelMouseClicked
        this.setExtendedState(JFrame.ICONIFIED);
    }//GEN-LAST:event_minPanelMouseClicked

    private void minPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minPanelMouseEntered
        minPanel.setBackground(new Color(229, 229, 229));
    }//GEN-LAST:event_minPanelMouseEntered

    private void minPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minPanelMouseExited
        minPanel.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_minPanelMouseExited

    private void panelHomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelHomeMouseClicked
        selectHome.setBackground(new Color(0,153,153));
        selectCatalogue.setBackground(new Color(0,18,50));
        selectUsers.setBackground(new Color(0,18,50));
        selectAdmins.setBackground(new Color(0,18,50));
        selectLoan.setBackground(new Color(0,18,50));
        selectReturn.setBackground(new Color(0,18,50));
        selectPunishment.setBackground(new Color(0,18,50));
        
        parentMain.removeAll();
        parentMain.add(home);
        parentMain.repaint();
        parentMain.revalidate();
        
        try {
            Obout.writeObject("main home");
            String[] ReplyMS;
            ReplyMS = ((String)Obin.readObject()).split(" ");

            numberOfBooks.setText(ReplyMS[0]);
            numberOfDocuments.setText(ReplyMS[1]);
            numberOfUsers.setText(ReplyMS[2]);
            numberOfAdmins.setText(ReplyMS[3]);
            numberOfLoanedBooks.setText(ReplyMS[4]);
            numberOfLoanedDocuments.setText(ReplyMS[5]);
            numberOfAdminsOnline.setText(ReplyMS[6]);
            
            Obout.writeObject("main setLateBook");
            Obout.writeObject("main setLateDoc");
            Obout.writeObject("main endBan");

            Obout.writeObject("main activeUser");

            int nbrActiveUser = (int)Obin.readObject();

            numberOfUsersActive.setText(nbrActiveUser+"");

            Obout.writeObject("main nbrLateUser");
            int nbrLateUserNotPunished = (int)Obin.readObject();
            if (nbrLateUserNotPunished == 1) {
                notificationAlert.setText("There is one user late to return book or document.");
                goPu.setText("Please go to Punishment to take action");
            } else if (nbrLateUserNotPunished > 1) {
                notificationAlert.setText("There is "+nbrLateUserNotPunished+" users late to return book or document.");
                goPu.setText("Please go to Punishment to take action");
            } else {
               notificationAlert.setText("");
               goPu.setText("");
            }
        } catch (Exception ex) {
            serverDown();
        }
    }//GEN-LAST:event_panelHomeMouseClicked

    private void panelHomeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelHomeMouseEntered
        panelHome.setBackground(new Color(32,47,90));
    }//GEN-LAST:event_panelHomeMouseEntered

    private void panelHomeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelHomeMouseExited
        panelHome.setBackground(new Color(0,18,50));
    }//GEN-LAST:event_panelHomeMouseExited

    private void panelCatalogueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelCatalogueMouseClicked
        selectCatalogue.setBackground(new Color(0,153,153));
        selectHome.setBackground(new Color(0,18,50));
        selectUsers.setBackground(new Color(0,18,50));
        selectAdmins.setBackground(new Color(0,18,50));
        selectLoan.setBackground(new Color(0,18,50));
        selectReturn.setBackground(new Color(0,18,50));
        selectPunishment.setBackground(new Color(0,18,50));
        
        parentMain.removeAll();
        parentMain.add(catalogue);
        parentMain.repaint();
        parentMain.revalidate();
        
        try {
            Obout.writeObject("main setLateBook");
            Obout.writeObject("main setLateDoc");
        } catch (IOException ex) {
            serverDown();
        }
        try {
            Obout.writeObject("main Book setBookJTable");
            Obout.writeObject(searchBarBook.getText());
            Obout.writeObject(bookSearchType.getSelectedIndex());
            Obout.writeObject(CUI.searchStatuType(bookSearchStatusType));
            
            String[] jTableResultBook = (String[]) Obin.readObject();
            CUI.setBookJTableR(jTableResultBook, BookjTable);
            
        } catch (Exception ex) {
            serverDown();
        }
        
        try {
            Obout.writeObject("main Document setDocumentJTable");
            Obout.writeObject(searchBarDocument.getText());
            Obout.writeObject(documentSearchType.getSelectedIndex());
            Obout.writeObject(CUI.searchStatuType(documentSearchStatusType));
            
            String[] jTableResultDoc = (String[]) Obin.readObject();
            CUI.setDocJTableR(jTableResultDoc, documentjTable);
            
        } catch (Exception ex) {
            serverDown();
        }
        try {
            Obout.writeObject("main Book addAllToComboBox");
            String jComboBoxResultBook = (String) Obin.readObject();
            if (jComboBoxResultBook != null) {
                CUI.addAllToComboBoxR(bookCat, jComboBoxResultBook);
            }
        } catch (Exception ex) {
            serverDown();
        }
        try {
            Obout.writeObject("main Document addAllToComboBox");
            String jComboBoxResultDoc = (String) Obin.readObject();
            if (jComboBoxResultDoc != null) {
                CUI.addAllToComboBoxR(documentCat, jComboBoxResultDoc);
            }
        } catch (Exception ex) {
            serverDown();
        }
        CUI.setFeildBookNull(idbookCatalogue, bookTitle, bookAutor, bookISBN, bookCategory, bookPurchase, bookOrderNumber, bookStatus, bookCat, bookState, bookValue, nbrBookCopy);
        CUI.setFeildDocumentNull(idDocumentCatalogue, documentTitle, documentEditor, documentID, documentCategory, documentPublicationDate, documentPurchaseDate, documentOrderNumber, documentCat, documentStatus, documentState, docValue, nbrDocCopy);
    }//GEN-LAST:event_panelCatalogueMouseClicked

    private void panelCatalogueMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelCatalogueMouseEntered
        panelCatalogue.setBackground(new Color(32,47,90));
    }//GEN-LAST:event_panelCatalogueMouseEntered

    private void panelCatalogueMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelCatalogueMouseExited
        panelCatalogue.setBackground(new Color(0,18,50));
    }//GEN-LAST:event_panelCatalogueMouseExited

    private void panelLoanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelLoanMouseClicked
        selectHome.setBackground(new Color(0,18,50));
        selectCatalogue.setBackground(new Color(0,18,50));
        selectUsers.setBackground(new Color(0,18,50));
        selectAdmins.setBackground(new Color(0,18,50));
        selectLoan.setBackground(new Color(0,153,153));
        selectReturn.setBackground(new Color(0,18,50));
        selectPunishment.setBackground(new Color(0,18,50));
        
        parentMain.removeAll();
        parentMain.add(loan);
        parentMain.repaint();
        parentMain.revalidate();
        
        try {
                Obout.writeObject("main LoanBook setUserJTable");
                Obout.writeObject(loanUserSearchBar.getText());
                Obout.writeObject(loanUserSearchType.getSelectedIndex());
                
                String[] jTableResultloanBookUser = (String[]) Obin.readObject();
                CUI.setUsersJTableR(jTableResultloanBookUser, loanBookUserJTable);
            } catch (Exception ex) {
                serverDown();
            }
        try {
                Obout.writeObject("main LoanBook setLoanBookJTable");
                Obout.writeObject(loanBookSearchBar.getText());
                Obout.writeObject(loanBookSearchType.getSelectedIndex());
                
                String[] jTableResultloanBook = (String[]) Obin.readObject();
                CUI.setLoanBookDocJTableR(jTableResultloanBook, loanBookJTable);
            } catch (Exception ex) {
                serverDown();
            }
        
        try {
                Obout.writeObject("main LoanDoc setUserJTable");
                Obout.writeObject(loanUserDocSearchBar.getText());
                Obout.writeObject(loanUserDocSearchType.getSelectedIndex());
                
                String[] jTableResultloanDocUser = (String[]) Obin.readObject();
                CUI.setUsersJTableR(jTableResultloanDocUser, loanDocumentUserJTable);
            } catch (Exception ex) {
                serverDown();
            }
        try {
                Obout.writeObject("main LoanDoc setLoanDocJTable");
                Obout.writeObject(loanDocumentSearchBar.getText());
                Obout.writeObject(loanDocumentSearchType.getSelectedIndex());
                
                String[] jTableResultloanDoc = (String[]) Obin.readObject();
                CUI.setLoanBookDocJTableR(jTableResultloanDoc, loanDocumentJTable);
            } catch (Exception ex) {
                serverDown();
            }

        if (l.adminType.equals("Principal")) { 
            bkLoanReDate.setEnabled(true);
            dcLoanReDate.setEnabled(true);
        } else {
            bkLoanReDate.setEnabled(false);
            dcLoanReDate.setEnabled(false);
        }
    }//GEN-LAST:event_panelLoanMouseClicked

    private void panelLoanMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelLoanMouseEntered
        panelLoan.setBackground(new Color(32,47,90));
    }//GEN-LAST:event_panelLoanMouseEntered

    private void panelLoanMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelLoanMouseExited
        panelLoan.setBackground(new Color(0,18,50));
    }//GEN-LAST:event_panelLoanMouseExited

    private void panelUsersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelUsersMouseClicked
        selectCatalogue.setBackground(new Color(0,18,50));
        selectHome.setBackground(new Color(0,18,50));
        selectUsers.setBackground(new Color(0,153,153));
        selectAdmins.setBackground(new Color(0,18,50));
        selectLoan.setBackground(new Color(0,18,50));
        selectReturn.setBackground(new Color(0,18,50));
        selectPunishment.setBackground(new Color(0,18,50));
        
        parentMain.removeAll();
        parentMain.add(users);
        parentMain.repaint();
        parentMain.revalidate();
        
        try {
            Obout.writeObject("main User setUserJTable");
            Obout.writeObject(searchBarUser.getText());
            Obout.writeObject(userSearchType.getSelectedIndex());
            Obout.writeObject(CUI.userState(searchBarUser.getText(), userState));
            
            String[] jTableResultUser = (String[]) Obin.readObject();
            CUI.setUsersJTableR(jTableResultUser, userJTable);
            
        } catch (Exception ex) {
            serverDown();
        }
        
        CUI.setFeildUserNull(userID, userFirstName, userLastName, userTypeF);
        
        try {
            Obout.writeObject("main setLateBook");
            Obout.writeObject("main setLateDoc");
        } catch (IOException ex) {
            serverDown();
        }
    }//GEN-LAST:event_panelUsersMouseClicked

    private void panelUsersMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelUsersMouseEntered
        panelUsers.setBackground(new Color(32,47,90));
    }//GEN-LAST:event_panelUsersMouseEntered

    private void panelUsersMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelUsersMouseExited
        panelUsers.setBackground(new Color(0,18,50));
    }//GEN-LAST:event_panelUsersMouseExited

    private void panelPunishmentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelPunishmentMouseClicked
        selectHome.setBackground(new Color(0,18,50));
        selectCatalogue.setBackground(new Color(0,18,50));
        selectUsers.setBackground(new Color(0,18,50));
        selectAdmins.setBackground(new Color(0,18,50));
        selectLoan.setBackground(new Color(0,18,50));
        selectReturn.setBackground(new Color(0,18,50));
        selectPunishment.setBackground(new Color(0,153,153));
        
        parentMain.removeAll();
        parentMain.add(punishment);
        parentMain.repaint();
        parentMain.revalidate();
        
        try {
            Obout.writeObject("main Punishment setPunishmentJTable");
            Obout.writeObject(searchBarUserPuni.getText());
            Obout.writeObject(puniSearchType.getSelectedIndex());
            Obout.writeObject(CUI.punishUserState(searchBarUserPuni.getText(), puniUserState));
            
            String[] jTablePunishment = (String[]) Obin.readObject();
            CUI.setPunishmantJTableR(jTablePunishment, punishmentJTable);      
        } catch (Exception ex) {
            serverDown();
        }
    }//GEN-LAST:event_panelPunishmentMouseClicked

    private void panelPunishmentMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelPunishmentMouseEntered
        panelPunishment.setBackground(new Color(32,47,90));
    }//GEN-LAST:event_panelPunishmentMouseEntered

    private void panelPunishmentMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelPunishmentMouseExited
        panelPunishment.setBackground(new Color(0,18,50));
    }//GEN-LAST:event_panelPunishmentMouseExited

    private void panelReturnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelReturnMouseClicked
        selectCatalogue.setBackground(new Color(0,18,50));
        selectHome.setBackground(new Color(0,18,50));
        selectUsers.setBackground(new Color(0,18,50));
        selectAdmins.setBackground(new Color(0,18,50));
        selectLoan.setBackground(new Color(0,18,50));
        selectReturn.setBackground(new Color(0,153,153));
        selectPunishment.setBackground(new Color(0,18,50));
        
        parentMain.removeAll();
        parentMain.add(reeturn);
        parentMain.repaint();
        parentMain.revalidate();
        
        bkreturnUserType.setVisible(false);
        dcreturnUserType.setVisible(false);
        
        bkreturnUserStatus.setVisible(false);
        dcreturnUserStatus.setVisible(false);
        
        returnBookSearchBar.setEnabled(false);
        returnBookSearchBar.setText("");
        returnDocSearchBar.setEnabled(false);
        returnDocSearchBar.setText("");
                
        try {
            Obout.writeObject("main ReturnBook setUserJTable");
            Obout.writeObject(returnUserSearchBar.getText());
            Obout.writeObject(returnUserSearchType.getSelectedIndex());

            String[] jTableResultReturnUser = (String[]) Obin.readObject();
            CUI.setUsersJTableR(jTableResultReturnUser, returnBookUserJTable);
        } catch (Exception ex) {
            serverDown();
        }
        try {
            Obout.writeObject("main ReturnBook setReturnBookJTable");
            Obout.writeObject(returnBookSearchBar.getText());
            Obout.writeObject(returnBookSearchType.getSelectedIndex());
                
            String[] jTableResultReturnBook = (String[]) Obin.readObject();
            CUI.setReturnBookDocJTableR(jTableResultReturnBook, returnBookJTable);         
        } catch (Exception ex) {
            serverDown();
        }
        CUI.setLabelReturnBookNull(bkreturnUserID, bkreturnFirstName, bkreturnLastName, bkreturnTitle, bkreturnAutor, bkreturnIdCata, returnBookState, bkreturnUserType, bkRDate);       
        try {
            Obout.writeObject("main ReturnDoc setUserJTable");
            Obout.writeObject(returnDocUserSearchBar.getText());
            Obout.writeObject(returnDocUserSearchType.getSelectedIndex());
                
            String[] jTableResultReturnUser = (String[]) Obin.readObject();
            CUI.setUsersJTableR(jTableResultReturnUser, returnDocUserJTable);
        } catch (Exception ex) {
            serverDown();
        }
        CUI.setLabelReturnDocNull(dcreturnUserID, dcreturnFirstName, dcreturnLastName, dcreturnTitle, dcreturnEditor, dcreturnIdCata, returnDocState, dcreturnUserType, dcRDate);
        if (l.adminType.equals("Principal")) { 
            bkRDate.setEnabled(true);
            dcRDate.setEnabled(true);
        } else {
            bkRDate.setEnabled(false);
            dcRDate.setEnabled(false);
        }
    }//GEN-LAST:event_panelReturnMouseClicked

    private void panelReturnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelReturnMouseEntered
        panelReturn.setBackground(new Color(32,47,90));
    }//GEN-LAST:event_panelReturnMouseEntered

    private void panelReturnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelReturnMouseExited
        panelReturn.setBackground(new Color(0,18,50));
    }//GEN-LAST:event_panelReturnMouseExited

    private void panelAdminsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelAdminsMouseClicked
        selectCatalogue.setBackground(new Color(0,18,50));
        selectHome.setBackground(new Color(0,18,50));
        selectUsers.setBackground(new Color(0,18,50));
        selectAdmins.setBackground(new Color(0,153,153));
        selectLoan.setBackground(new Color(0,18,50));
        selectReturn.setBackground(new Color(0,18,50));
        selectPunishment.setBackground(new Color(0,18,50));
        
        parentMain.removeAll();
        parentMain.add(admins);
        parentMain.repaint();
        parentMain.revalidate();
        
        try {
            Obout.writeObject("main Admin setAdminJTable");
            
            String[] jTableAdminResult = (String[]) Obin.readObject();
            CUI.setAdminsJTableR(jTableAdminResult, adminJTable);
            
        } catch (Exception ex) {
            serverDown();
        }
        CUI.setFeildAdminNull(adminID, adminUsername, adminFirstName, adminLastName, adminPassword, adminPasswordC, adminType);
    }//GEN-LAST:event_panelAdminsMouseClicked

    private void panelAdminsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelAdminsMouseEntered
        panelAdmins.setBackground(new Color(32,47,90));
    }//GEN-LAST:event_panelAdminsMouseEntered

    private void panelAdminsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelAdminsMouseExited
        panelAdmins.setBackground(new Color(0,18,50));
    }//GEN-LAST:event_panelAdminsMouseExited
    int x,y;
    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_formMousePressed

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        if (this.getExtendedState() != JFrame.MAXIMIZED_BOTH) {
            int xx = evt.getXOnScreen();
            int yy = evt.getYOnScreen();
            this.setLocation(xx-x, yy-y);
        } 
    }//GEN-LAST:event_formMouseDragged

    private void reloadPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reloadPanelMouseClicked
        try {
            Obout.writeObject("main home");
            String[] ReplyMS;
            ReplyMS = ((String)Obin.readObject()).split(" ");

            numberOfBooks.setText(ReplyMS[0]);
            numberOfDocuments.setText(ReplyMS[1]);
            numberOfUsers.setText(ReplyMS[2]);
            numberOfAdmins.setText(ReplyMS[3]);
            numberOfLoanedBooks.setText(ReplyMS[4]);
            numberOfLoanedDocuments.setText(ReplyMS[5]);
            numberOfAdminsOnline.setText(ReplyMS[6]);

            Obout.writeObject("main setLateBook");
            Obout.writeObject("main setLateDoc");
            Obout.writeObject("main endBan");

            Obout.writeObject("main activeUser");

            int nbrActiveUser = (int)Obin.readObject();

            numberOfUsersActive.setText(nbrActiveUser+"");

            Obout.writeObject("main nbrLateUser");
            int nbrLateUserNotPunished = (int)Obin.readObject();
            if (nbrLateUserNotPunished == 1) {
                notificationAlert.setText("There is one user late to return book or document.");
                goPu.setText("Please go to Punishment to take action");
            } else if (nbrLateUserNotPunished > 1) {
                notificationAlert.setText("There is "+nbrLateUserNotPunished+" users late to return book or document.");
                goPu.setText("Please go to Punishment to take action");
            } else {
               notificationAlert.setText("");
               goPu.setText("");
            }
        } catch (Exception ex) {
            serverDown();
        }
    }//GEN-LAST:event_reloadPanelMouseClicked

    private void reloadPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reloadPanelMouseEntered
        reloadPanel.setBackground(new Color(0,204,204));
    }//GEN-LAST:event_reloadPanelMouseEntered

    private void reloadPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reloadPanelMouseExited
        reloadPanel.setBackground(new Color(255,255,255));
    }//GEN-LAST:event_reloadPanelMouseExited

    private void jLabel27MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel27MouseClicked
        try {
            Obout.writeObject("main logOut");
            Obout.writeObject(l.id_adminDatabase);
            Obout.writeObject(l.name);
            Obout.writeObject("logOut");
            t.stop();
        } catch (IOException ex) {
            serverDown();
        }
        Login l = new Login();
        this.setVisible(false);
        l.setVisible(true);
    }//GEN-LAST:event_jLabel27MouseClicked

    private void searchBarBookKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchBarBookKeyReleased
        try {
            Obout.writeObject("main Book setBookJTable");
            Obout.writeObject(searchBarBook.getText());
            Obout.writeObject(bookSearchType.getSelectedIndex());
            Obout.writeObject(CUI.searchStatuType(bookSearchStatusType));
            
            String[] jTableResultBook = (String[]) Obin.readObject();
            CUI.setBookJTableR(jTableResultBook, BookjTable);
            
        } catch (Exception ex) {
            serverDown();
        }
    }//GEN-LAST:event_searchBarBookKeyReleased

    private void bookSearchStatusTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_bookSearchStatusTypeItemStateChanged
        try {
            Obout.writeObject("main Book setBookJTable");
            Obout.writeObject(searchBarBook.getText());  
            Obout.writeObject(bookSearchType.getSelectedIndex());
            Obout.writeObject(CUI.searchStatuType(bookSearchStatusType));
            
            String[] jTableResultBook = (String[]) Obin.readObject();
            CUI.setBookJTableR(jTableResultBook, BookjTable);
            
        } catch (Exception ex) {
            serverDown();
        }
    }//GEN-LAST:event_bookSearchStatusTypeItemStateChanged

    private void BookjTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BookjTableMouseClicked
        DefaultTableModel model = (DefaultTableModel)BookjTable.getModel();
        int selectedRowIndex = BookjTable.getSelectedRow();

        id_exmp = model.getValueAt(selectedRowIndex, 1).toString();
        idbookCatalogue.setText(model.getValueAt(selectedRowIndex, 1).toString());
        bookTitle.setText(model.getValueAt(selectedRowIndex, 2).toString());
        bookAutor.setText(model.getValueAt(selectedRowIndex, 3).toString());
        bookISBN.setText(model.getValueAt(selectedRowIndex, 4).toString());
        bookCategory.setText(model.getValueAt(selectedRowIndex, 5).toString());
        bookCat.setSelectedItem(model.getValueAt(selectedRowIndex, 5).toString());
        bookStatus.setSelectedItem(model.getValueAt(selectedRowIndex, 6).toString());
        try {
            Date date = new SimpleDateFormat("yyyy-MM-dd").parse((String)model.getValueAt(selectedRowIndex, 7));
            bookPurchase.setDate(date);
        } catch (ParseException ex) {
            System.out.println("can't set Date...");
        }
        bookOrderNumber.setText(model.getValueAt(selectedRowIndex, 8).toString());
        bookState.setSelectedItem(model.getValueAt(selectedRowIndex, 9).toString());
        bookValue.setText(model.getValueAt(selectedRowIndex, 10).toString());
    }//GEN-LAST:event_BookjTableMouseClicked

    private void bookCatItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_bookCatItemStateChanged
        if (bookCat.getSelectedIndex() == -1) { bookCategory.setText(""); }
        else { bookCategory.setText(bookCat.getSelectedItem().toString()); }
    }//GEN-LAST:event_bookCatItemStateChanged

    public String isIdBookExist(int idbookCatalogue) {
        String result = null;
        try {
            Obout.writeObject("main Book isIdBookExist");
            Obout.writeObject(idbookCatalogue);
            result = (String)Obin.readObject();
            
        } catch (IOException ex) {
            serverDown();
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        return result;
    }
    
    //--------------------------------------------------------------------------------------------------------------------//
    
    public String isbnIsThere(long bookISBN) {
        String result = null;
        try {
            Obout.writeObject("main Book isbnIsThere");
            Obout.writeObject(bookISBN);
            result =(String)Obin.readObject();
            
        } catch (IOException ex) {
            serverDown();
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        return result;
    }
    
    public void isLongTrue(long lgn) {
        lgn += 2;
        lgn -= 2;
    }
    
    public void isIntTrue(int lgn) {
        lgn += 2;
        lgn -= 2;
    }
    
    private void addBookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addBookMouseClicked
        if (l.adminType.equals("Principal")) {   
            try {
                if (idbookCatalogue.getText().equals("") || bookTitle.getText().equals("") || bookAutor.getText().equals("") || idbookCatalogue.getText().equals("") || bookCategory.getText().equals("") || bookPurchase.getDate() == null || bookOrderNumber.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Complit all the information of the book!"); 
                } else if (CUI.idExpsCatalogue(idbookCatalogue.getText()).length == Integer.parseInt(nbrBookCopy.getValue().toString())){ 
                    boolean b = true;
                    for (int i=0; i< CUI.idExpsCatalogue(idbookCatalogue.getText()).length; i++) {
                        if (isIdBookExist(Integer.parseInt(CUI.idExpsCatalogue(idbookCatalogue.getText())[i])).equals("yes") ) {
                            JOptionPane.showMessageDialog(null, "the ID Catalogue "+CUI.idExpsCatalogue(idbookCatalogue.getText())[i]+" already exist in the catalogue!");
                            b = false;
                            break;
                        }
                    }            
                    if (b) {
                        if (isbnIsThere(Long.parseLong(bookISBN.getText())).equals("yes")) {
                            int opt = JOptionPane.showConfirmDialog (null, "This ISBN: "+bookISBN.getText()+", already exist as \n\""+"\"\ndo you want to add it as another copy of it?","Warning!",JOptionPane.YES_NO_OPTION);
                            if (opt == 0) {
                                isLongTrue(Long.parseLong(bookOrderNumber.getText()));
                                for (int i=0; i< CUI.idExpsCatalogue(idbookCatalogue.getText()).length; i++) {
                                    try {
                                        Obout.writeObject("main Book addBookToDataBase");
                                        Obout.writeObject(Integer.parseInt(CUI.idExpsCatalogue(idbookCatalogue.getText())[i]));
                                        Obout.writeObject(Long.parseLong(bookISBN.getText()));
                                        Obout.writeObject(bookAutor.getText());
                                        Obout.writeObject(bookCategory.getText());
                                        Obout.writeObject(bookStatus.getSelectedItem().toString());
                                        Obout.writeObject(bookState.getSelectedItem().toString());
                                        Obout.writeObject(bookPurchase.getDate());
                                        Obout.writeObject(Long.parseLong(bookOrderNumber.getText()));
                                        Obout.writeObject(Integer.parseInt(bookValue.getText()));
                                    } catch (IOException ex) {
                                        serverDown();
                                    }
                                }
                                try {
                                    Obout.writeObject("main Book setBookJTable");
                                    Obout.writeObject(searchBarBook.getText());
                                    Obout.writeObject(bookSearchType.getSelectedIndex());
                                    Obout.writeObject(CUI.searchStatuType(bookSearchStatusType));

                                    String[] jTableResultBook = (String[]) Obin.readObject();
                                    CUI.setBookJTableR(jTableResultBook, BookjTable);

                                } catch (IOException ex) {
                                    serverDown();
                                }     
                                try {
                                    Obout.writeObject("main Book addAllToComboBox");

                                    String jComboBoxResultBook = (String) Obin.readObject();
                                    CUI.addAllToComboBoxR(bookCat, jComboBoxResultBook);

                                } catch (IOException ex) {
                                    serverDown();
                                }
                                CUI.setFeildBookNull(idbookCatalogue, bookTitle, bookAutor, bookISBN, bookCategory, bookPurchase, bookOrderNumber, bookStatus, bookCat, bookState, bookValue, nbrBookCopy);
                            } else {
                                JOptionPane.showMessageDialog(null, "This ISBN already exist!");
                            }
                        } else {
                            isLongTrue(Long.parseLong(bookOrderNumber.getText()));
                            for (int i=0; i< CUI.idExpsCatalogue(idbookCatalogue.getText()).length; i++) {
                                try {
                                    Obout.writeObject("main Book addBookToDataBase2");
                                    Obout.writeObject(Integer.parseInt(CUI.idExpsCatalogue(idbookCatalogue.getText())[i]));
                                    Obout.writeObject(bookTitle.getText());
                                    Obout.writeObject(bookAutor.getText());
                                    Obout.writeObject(Long.parseLong(bookISBN.getText()));
                                    Obout.writeObject(bookCategory.getText());
                                    Obout.writeObject(bookStatus.getSelectedItem().toString());
                                    Obout.writeObject(bookState.getSelectedItem().toString());
                                    Obout.writeObject(bookPurchase.getDate());
                                    Obout.writeObject(Long.parseLong(bookOrderNumber.getText()));
                                    Obout.writeObject(Integer.parseInt(bookValue.getText()));
                                } catch (IOException ex) {
                                    serverDown();
                                }
                            }
                                try {
                                    Obout.writeObject("main Book setBookJTable");
                                    Obout.writeObject(searchBarBook.getText());
                                    Obout.writeObject(bookSearchType.getSelectedIndex());
                                    Obout.writeObject(CUI.searchStatuType(bookSearchStatusType));

                                    String[] jTableResultBook = (String[]) Obin.readObject();
                                    CUI.setBookJTableR(jTableResultBook, BookjTable);

                                } catch (IOException ex) {
                                    serverDown();
                                }

                                try {
                                    Obout.writeObject("main Book addAllToComboBox");

                                    String jComboBoxResultBook = (String) Obin.readObject();
                                    CUI.addAllToComboBoxR(bookCat, jComboBoxResultBook);

                                } catch (IOException ex) {
                                    serverDown();
                                }
                                CUI.setFeildBookNull(idbookCatalogue, bookTitle, bookAutor, bookISBN, bookCategory, bookPurchase, bookOrderNumber, bookStatus, bookCat, bookState, bookValue, nbrBookCopy);
                        }
                    }
                    
                } else {
                    JOptionPane.showMessageDialog(null, "Please enter all the copy ID Catalogue, example: id, id, id..., id"); 
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "You can only put a number on ID Catalogue(id, id, id..., id), ID, Order Number and Document Value!");  
            }
        } else {
            JOptionPane.showMessageDialog(null, "This option is not unavailable for you");
        }
    }//GEN-LAST:event_addBookMouseClicked

    private void editBookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editBookMouseClicked
        if (l.adminType.equals("Principal")) {    
            try {        
                if (idbookCatalogue.getText().equals("") || bookTitle.getText().equals("") || bookAutor.getText().equals("") || idbookCatalogue.getText().equals("") || bookCategory.getText().equals("") || bookPurchase.getDate() == null || bookOrderNumber.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Complit all the information of the book!"); 
                } else {
                    if (id_exmp.equals(idbookCatalogue.getText()) || isIdBookExist(Integer.parseInt(idbookCatalogue.getText())).equals("no") ) {
                        isLongTrue(Long.parseLong(bookISBN.getText()));
                        isLongTrue(Long.parseLong(bookOrderNumber.getText()));
                        boolean isBookStatuLanORLate = false;
                        String oldStatu = null;
                        try {
                            Obout.writeObject("main Book isBookStatuLanORLate");
                            Obout.writeObject(Integer.parseInt(id_exmp));
                            Obout.writeObject(bookStatus.getSelectedItem().toString());
                            isBookStatuLanORLate = (boolean)Obin.readObject();
                            oldStatu = (String)Obin.readObject();
                        } catch (IOException ex) {
                            serverDown();
                        }
                        if (isBookStatuLanORLate || (!oldStatu.equals("loaned") && !oldStatu.equals("late"))) {
                            if ((!oldStatu.equals("loaned") && !oldStatu.equals("late")) && (bookStatus.getSelectedItem().toString().equals("loaned") || bookStatus.getSelectedItem().toString().equals("late"))) {
                                JOptionPane.showMessageDialog(null, "You can't Edit the Statu to loaned or late!");
                            } else {
                                try {
                                    Obout.writeObject("main Book editBook");
                                    Obout.writeObject(Integer.parseInt(idbookCatalogue.getText()));
                                    Obout.writeObject(bookTitle.getText());
                                    Obout.writeObject(bookAutor.getText());
                                    Obout.writeObject(Long.parseLong(bookISBN.getText()));
                                    Obout.writeObject(bookCategory.getText());
                                    Obout.writeObject(bookStatus.getSelectedItem().toString());
                                    Obout.writeObject(bookState.getSelectedItem().toString());
                                    Obout.writeObject(bookPurchase.getDate());
                                    Obout.writeObject(Long.parseLong(bookOrderNumber.getText()));
                                    Obout.writeObject(Integer.parseInt(bookValue.getText()));
                                    Obout.writeObject(CUI.getBookId(BookjTable));
                                } catch (IOException ex) {
                                    serverDown();
                                } 
                                try {
                                    Obout.writeObject("main Book setBookJTable");
                                    Obout.writeObject(searchBarBook.getText());
                                    Obout.writeObject(bookSearchType.getSelectedIndex());
                                    Obout.writeObject(CUI.searchStatuType(bookSearchStatusType));

                                    String[] jTableResultBook = (String[]) Obin.readObject();
                                    CUI.setBookJTableR(jTableResultBook, BookjTable);
                                } catch (IOException ex) {
                                    serverDown();
                                }
                                try {
                                    Obout.writeObject("main Book addAllToComboBox");

                                    String jComboBoxResultBook = (String) Obin.readObject();
                                    CUI.addAllToComboBoxR(bookCat, jComboBoxResultBook);

                                } catch (IOException ex) {
                                    serverDown();
                                }
                                CUI.setFeildBookNull(idbookCatalogue, bookTitle, bookAutor, bookISBN, bookCategory, bookPurchase, bookOrderNumber, bookStatus, bookCat, bookState, bookValue, nbrBookCopy);
                            }
                            
                        } else {
                            JOptionPane.showMessageDialog(null, "You can't Edit the Statu of a loaned or late book to another Statu!");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "this ID Catalogue exist in the catalogue!");
                    } 
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "You can only put a number on ID Catalogue, ISBN and Order Number!"); 
            }
        } else {
            JOptionPane.showMessageDialog(null, "This option is not unavailable for you");
        }
    }//GEN-LAST:event_editBookMouseClicked

    private void deleteBookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteBookMouseClicked
        if (l.adminType.equals("Principal")) {    
            try {    
                if (idbookCatalogue.getText().equals("") || bookTitle.getText().equals("") || bookAutor.getText().equals("") || idbookCatalogue.getText().equals("") || bookCategory.getText().equals("") || bookPurchase.getDate() == null || bookOrderNumber.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Select a book..."); 
                } else {
                    int opt = JOptionPane.showConfirmDialog (null, "Are you sur want to Delete?","Delete",JOptionPane.YES_NO_OPTION);
                    if (opt == 0) {
                        isLongTrue(Long.parseLong(bookOrderNumber.getText()));
                        isLongTrue(Long.parseLong(bookISBN.getText()));
                        isIntTrue(Integer.parseInt(idbookCatalogue.getText()));
                        boolean isBookLoaned = false;
                        try {
                            Obout.writeObject("main Book isBookLoaned");
                            Obout.writeObject(Integer.parseInt(idbookCatalogue.getText()));
                            isBookLoaned = (boolean)Obin.readObject();
                        } catch (IOException ex) {
                            serverDown();
                        }
                        if (!isBookLoaned) {
                            try {
                                Obout.writeObject("main Book deleteBook");
                                Obout.writeObject(Integer.parseInt(idbookCatalogue.getText()));
                                Obout.writeObject(bookTitle.getText());
                                Obout.writeObject(bookAutor.getText());
                                Obout.writeObject(Long.parseLong(bookISBN.getText()));
                                Obout.writeObject(bookCategory.getText());
                                Obout.writeObject(bookStatus.getSelectedItem().toString());
                                Obout.writeObject(bookState.getSelectedItem().toString());
                                Obout.writeObject(bookPurchase.getDate());
                                Obout.writeObject(Long.parseLong(bookOrderNumber.getText()));
                                Obout.writeObject(Integer.parseInt(bookValue.getText()));
                                Obout.writeObject(CUI.getBookId(BookjTable));
                                

                            } catch (IOException ex) {
                                serverDown();
                            } 
                            try {
                               Obout.writeObject("main Book setBookJTable");
                               Obout.writeObject(searchBarBook.getText());
                               Obout.writeObject(bookSearchType.getSelectedIndex());
                               Obout.writeObject(CUI.searchStatuType(bookSearchStatusType));

                               String[] jTableResultBook = (String[]) Obin.readObject();
                               CUI.setBookJTableR(jTableResultBook, BookjTable);

                           } catch (IOException ex) {
                               serverDown();
                           }
                            CUI.setFeildBookNull(idbookCatalogue, bookTitle, bookAutor, bookISBN, bookCategory, bookPurchase, bookOrderNumber, bookStatus, bookCat, bookState, bookValue, nbrBookCopy);
                        } else {
                            JOptionPane.showMessageDialog(null, "This Book is loaned, you can't delete it until the user return it!"); 
                        }
                    }    
                }  
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "You can only put a number on ID Catalogue, ISBN, Order Number and Book Value!"); 
            }
        } else {
            JOptionPane.showMessageDialog(null, "This option is not unavailable for you");
        }
    }//GEN-LAST:event_deleteBookMouseClicked

    private void jLabel41MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel41MouseClicked
        CUI.setFeildBookNull(idbookCatalogue, bookTitle, bookAutor, bookISBN, bookCategory, bookPurchase, bookOrderNumber, bookStatus, bookCat, bookState, bookValue, nbrBookCopy);       
        bookCat.setSelectedItem(null);
    }//GEN-LAST:event_jLabel41MouseClicked

    //---------------------------------------------------- END BOOK -----------------------------------------------------------//
    //------------------------------------------------- START DOCUMENT --------------------------------------------------------//
    
    private void searchBarDocumentKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchBarDocumentKeyReleased
        try {
            Obout.writeObject("main Document setDocumentJTable");
            Obout.writeObject(searchBarDocument.getText());
            Obout.writeObject(documentSearchType.getSelectedIndex());
            Obout.writeObject(CUI.searchStatuType(documentSearchStatusType));
            
            String[] jTableResultDoc = (String[]) Obin.readObject();
            CUI.setDocJTableR(jTableResultDoc, documentjTable);
            
        } catch (Exception ex) {
            serverDown();
        }
    }//GEN-LAST:event_searchBarDocumentKeyReleased

    private void documentSearchStatusTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_documentSearchStatusTypeItemStateChanged
        try {
            Obout.writeObject("main Document setDocumentJTable");
            Obout.writeObject(searchBarDocument.getText());
            Obout.writeObject(documentSearchType.getSelectedIndex());
            Obout.writeObject(CUI.searchStatuType(documentSearchStatusType));
            
            String[] jTableResultDoc = (String[]) Obin.readObject();
            CUI.setDocJTableR(jTableResultDoc, documentjTable);
            
        } catch (Exception ex) {
            serverDown();
        }
    }//GEN-LAST:event_documentSearchStatusTypeItemStateChanged

    private void documentjTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_documentjTableMouseClicked
        DefaultTableModel model = (DefaultTableModel)documentjTable.getModel();
        int selectedRowIndex = documentjTable.getSelectedRow();
        
        id_exmp = model.getValueAt(selectedRowIndex, 1).toString();
        idDocumentCatalogue.setText(model.getValueAt(selectedRowIndex, 1).toString());
        documentTitle.setText(model.getValueAt(selectedRowIndex, 2).toString());
        documentEditor.setText(model.getValueAt(selectedRowIndex, 3).toString());
        documentID.setText(model.getValueAt(selectedRowIndex, 4).toString());
        documentCategory.setText(model.getValueAt(selectedRowIndex, 5).toString());
        documentCat.setSelectedItem(model.getValueAt(selectedRowIndex, 5).toString());
        documentStatus.setSelectedItem(model.getValueAt(selectedRowIndex, 6).toString());
        try {
            Date date = new SimpleDateFormat("yyyy-MM-dd").parse((String) model.getValueAt(selectedRowIndex, 7));
            documentPublicationDate.setDate(date);
            Date date2 = new SimpleDateFormat("yyyy-MM-dd").parse((String) model.getValueAt(selectedRowIndex, 8));
            documentPurchaseDate.setDate(date2);
        } catch (ParseException ex) {
            System.out.println("can't set Date...");
        }
        documentOrderNumber.setText(model.getValueAt(selectedRowIndex, 9).toString());
        documentState.setSelectedItem(model.getValueAt(selectedRowIndex, 10).toString());
        docValue.setText(model.getValueAt(selectedRowIndex, 11).toString());
    }//GEN-LAST:event_documentjTableMouseClicked

    private void documentCatItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_documentCatItemStateChanged
        if (documentCat.getSelectedIndex() == -1) { documentCategory.setText(""); }
        else { documentCategory.setText(documentCat.getSelectedItem().toString()); }
    }//GEN-LAST:event_documentCatItemStateChanged

    public String isIdDocCataloguetExist(int idDocCatalogue) {
        String result = null;
        try {
            Obout.writeObject("main Document isIdDocumenCataloguetExist");
            Obout.writeObject(idDocCatalogue);
            result = (String)Obin.readObject();
            
        } catch (Exception ex) {
            serverDown();
        }
        return result;
    }
    
    //--------------------------------------------------------------------------------------------------------------------//
    
    public String idIsThere(long docID) {
        String result = null;
        try {
            Obout.writeObject("main Document idIsThere");
            Obout.writeObject(docID);
            result = (String)Obin.readObject();
            
        } catch (Exception ex) {
            serverDown();
        }
        return result;
    }
    
    private void addDocumentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addDocumentMouseClicked
        if (l.adminType.equals("Principal")) {    
            try {
                if (idDocumentCatalogue.getText().equals("") || documentTitle.getText().equals("") || documentEditor.getText().equals("") || documentID.getText().equals("") || documentCategory.getText().equals("") || documentPublicationDate.getDate() == null || documentPurchaseDate.getDate() == null || documentOrderNumber.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Complit all the information of the document!"); 
                } else if (CUI.idExpsCatalogue(idDocumentCatalogue.getText()).length == Integer.parseInt(nbrDocCopy.getValue().toString())){ 
                    boolean b = true;
                    for (int i=0; i< CUI.idExpsCatalogue(idDocumentCatalogue.getText()).length; i++) {
                        if (isIdDocCataloguetExist(Integer.parseInt(CUI.idExpsCatalogue(idDocumentCatalogue.getText())[i])).equals("yes") ) {
                            JOptionPane.showMessageDialog(null, "the ID Catalogue "+CUI.idExpsCatalogue(idDocumentCatalogue.getText())[i]+" already exist in the catalogue!");
                            b = false;
                            break;
                        }
                    }            
                    if (b) {
                        if (idIsThere(Long.parseLong(documentID.getText())).equals("yes")) {
                            int opt = JOptionPane.showConfirmDialog (null, "This ID: "+documentID.getText()+", already exist \n"+"do you want to add it as another copy of it?","Warning!",JOptionPane.YES_NO_OPTION);
                            if (opt == 0) {
                                isLongTrue(Long.parseLong(documentOrderNumber.getText()));
                                isIntTrue(Integer.parseInt(docValue.getText()));
                                for (int i=0; i< CUI.idExpsCatalogue(idDocumentCatalogue.getText()).length; i++) {
                                    try {
                                        Obout.writeObject("main Document addDocumentToDataBase2");
                                        Obout.writeObject(Integer.parseInt(CUI.idExpsCatalogue(idDocumentCatalogue.getText())[i]));
                                        Obout.writeObject(Long.parseLong(documentID.getText()));
                                        Obout.writeObject(documentEditor.getText());
                                        Obout.writeObject(Long.parseLong(documentID.getText()));
                                        Obout.writeObject(documentCategory.getText());
                                        Obout.writeObject(documentStatus.getSelectedItem().toString());
                                        Obout.writeObject(documentState.getSelectedItem().toString());
                                        Obout.writeObject(documentPublicationDate.getDate());
                                        Obout.writeObject(documentPurchaseDate.getDate());
                                        Obout.writeObject(Long.parseLong(documentOrderNumber.getText()));
                                        Obout.writeObject(Integer.parseInt(docValue.getText()));
                                    } catch (IOException ex) {
                                        serverDown();
                                    }
                                }                         
                                try {
                                    Obout.writeObject("main Document setDocumentJTable");
                                    Obout.writeObject(searchBarDocument.getText());
                                    Obout.writeObject(documentSearchType.getSelectedIndex());
                                    Obout.writeObject(CUI.searchStatuType(documentSearchStatusType));

                                    String[] jTableResultDoc = (String[]) Obin.readObject();
                                    CUI.setDocJTableR(jTableResultDoc, documentjTable);

                                } catch (IOException ex) {
                                    serverDown();
                                }
                                try {
                                    Obout.writeObject("main Document addAllToComboBox");

                                    String jComboBoxResultDoc = (String) Obin.readObject();
                                    CUI.addAllToComboBoxR(documentCat, jComboBoxResultDoc);

                                } catch (IOException ex) {
                                    serverDown();
                                }

                                CUI.setFeildDocumentNull(idDocumentCatalogue, documentTitle, documentEditor, documentID, documentCategory, documentPublicationDate, documentPurchaseDate, documentOrderNumber, documentCat, documentStatus, documentState, docValue, nbrDocCopy); 
                            } else {
                                JOptionPane.showMessageDialog(null, "This ID already exist!");
                            }
                        } else {
                            isLongTrue(Long.parseLong(documentOrderNumber.getText()));
                            isIntTrue(Integer.parseInt(docValue.getText()));
                            for (int i=0; i< CUI.idExpsCatalogue(idDocumentCatalogue.getText()).length; i++) {
                                try {
                                    Obout.writeObject("main Document addDocumentToDataBase");
                                    Obout.writeObject(Integer.parseInt(CUI.idExpsCatalogue(idDocumentCatalogue.getText())[i]));
                                    Obout.writeObject(documentTitle.getText());
                                    Obout.writeObject(documentEditor.getText());
                                    Obout.writeObject(Long.parseLong(documentID.getText()));
                                    Obout.writeObject(documentCategory.getText());
                                    Obout.writeObject(documentStatus.getSelectedItem().toString());
                                    Obout.writeObject(documentState.getSelectedItem().toString());
                                    Obout.writeObject(documentPublicationDate.getDate());
                                    Obout.writeObject(documentPurchaseDate.getDate());
                                    Obout.writeObject(Long.parseLong(documentOrderNumber.getText()));
                                    Obout.writeObject(Integer.parseInt(docValue.getText()));

                                } catch (IOException ex) {
                                    serverDown();
                                } 
                            }                      
                            try {
                                    Obout.writeObject("main Document setDocumentJTable");
                                    Obout.writeObject(searchBarDocument.getText());
                                    Obout.writeObject(documentSearchType.getSelectedIndex());
                                    Obout.writeObject(CUI.searchStatuType(documentSearchStatusType));

                                    String[] jTableResultDoc = (String[]) Obin.readObject();
                                    CUI.setDocJTableR(jTableResultDoc, documentjTable);

                                } catch (IOException ex) {
                                    serverDown();
                                }
                                try {
                                    Obout.writeObject("main Document addAllToComboBox");

                                    String jComboBoxResultDoc = (String) Obin.readObject();
                                    CUI.addAllToComboBoxR(documentCat, jComboBoxResultDoc);

                                } catch (IOException ex) {
                                    serverDown();
                                }

                                CUI.setFeildDocumentNull(idDocumentCatalogue, documentTitle, documentEditor, documentID, documentCategory, documentPublicationDate, documentPurchaseDate, documentOrderNumber, documentCat, documentStatus, documentState, docValue, nbrDocCopy);
                        }
                    }
                    
                } else {
                    JOptionPane.showMessageDialog(null, "Please enter all the copy ID Catalogue, example: id, id, id..., id"); 
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "You can only put a number on ID Catalogue(id, id, id..., id), ID, Order Number and Document Value!"); 
            }
        } else {
            JOptionPane.showMessageDialog(null, "This option is not unavailable for you");
        }
    }//GEN-LAST:event_addDocumentMouseClicked

    private void editDocumentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editDocumentMouseClicked
        if (l.adminType.equals("Principal")) {    
            try {        
                if (idDocumentCatalogue.getText().equals("") || documentTitle.getText().equals("") || documentEditor.getText().equals("") || documentID.getText().equals("") || documentCategory.getText().equals("") || documentPublicationDate.getDate() == null || documentPurchaseDate.getDate() == null || documentOrderNumber.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Complit all the information of the document!"); 
                } else {
                    isLongTrue(Long.parseLong(documentOrderNumber.getText()));
                    isLongTrue(Long.parseLong(documentID.getText()));
                    isIntTrue(Integer.parseInt(idDocumentCatalogue.getText()));
                    isIntTrue(Integer.parseInt(docValue.getText()));
                    if (id_exmp.equals(idDocumentCatalogue.getText()) || isIdDocCataloguetExist(Integer.parseInt(idDocumentCatalogue.getText())).equals("no")) {
                        boolean isDocStatuLanORLate = false;
                        String oldStatu = null;
                        try {
                            Obout.writeObject("main Document isDocStatuLoanORLate");
                            Obout.writeObject(Integer.parseInt(id_exmp));
                            Obout.writeObject(documentStatus.getSelectedItem().toString());
                            isDocStatuLanORLate = (boolean)Obin.readObject();
                            oldStatu = (String)Obin.readObject();
                        } catch (IOException ex) {
                            serverDown();
                        }
                        if (isDocStatuLanORLate || (!oldStatu.equals("loaned") && !oldStatu.equals("late"))) {
                            if ((!oldStatu.equals("loaned") && !oldStatu.equals("late")) && (documentStatus.getSelectedItem().toString().equals("loaned") || documentStatus.getSelectedItem().toString().equals("late"))) {
                                JOptionPane.showMessageDialog(null, "You can't Edit the Statu to loaned or late!");
                            } else {
                                try {
                                    Obout.writeObject("main Document editDocument");
                                    Obout.writeObject(Integer.parseInt(idDocumentCatalogue.getText()));
                                    Obout.writeObject(documentTitle.getText());
                                    Obout.writeObject(documentEditor.getText());
                                    Obout.writeObject(Long.parseLong(documentID.getText()));
                                    Obout.writeObject(documentCategory.getText());
                                    Obout.writeObject(documentStatus.getSelectedItem().toString());
                                    Obout.writeObject(documentState.getSelectedItem().toString());
                                    Obout.writeObject(documentPublicationDate.getDate());
                                    Obout.writeObject(documentPurchaseDate.getDate());
                                    Obout.writeObject(Long.parseLong(documentOrderNumber.getText()));
                                    Obout.writeObject(Integer.parseInt(docValue.getText()));
                                    Obout.writeObject(CUI.getDocId(documentjTable));
                                } catch (IOException ex) {
                                    serverDown();
                                }                        
                                try {
                                    Obout.writeObject("main Document setDocumentJTable");
                                    Obout.writeObject(searchBarDocument.getText());
                                    Obout.writeObject(documentSearchType.getSelectedIndex());
                                    Obout.writeObject(CUI.searchStatuType(documentSearchStatusType));

                                    String[] jTableResultDoc = (String[]) Obin.readObject();
                                    CUI.setDocJTableR(jTableResultDoc, documentjTable);

                                } catch (IOException ex) {
                                    serverDown();
                                }
                                try {
                                    Obout.writeObject("main Document addAllToComboBox");

                                    String jComboBoxResultDoc = (String) Obin.readObject();
                                    CUI.addAllToComboBoxR(documentCat, jComboBoxResultDoc);

                                } catch (IOException ex) {
                                    serverDown();
                                }
                                CUI.setFeildDocumentNull(idDocumentCatalogue, documentTitle, documentEditor, documentID, documentCategory, documentPublicationDate, documentPurchaseDate, documentOrderNumber, documentCat, documentStatus, documentState, docValue, nbrDocCopy);
                            }
                            
                        } else {
                            JOptionPane.showMessageDialog(null, "You can't Edit the Statu of a loaned or late Document to another Statu!");
                        }
                        
                    } else {
                        JOptionPane.showMessageDialog(null, "this ID Catalogue exist in the catalogue!");
                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "You can only put a number on ID Catalogue, ID, Order Number and Document Value!"); 
            }
        } else {
            JOptionPane.showMessageDialog(null, "This option is not unavailable for you");
        }
    }//GEN-LAST:event_editDocumentMouseClicked

    private void deleteDocumentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteDocumentMouseClicked
        if (l.adminType.equals("Principal")) {    
            try {        
                if (idDocumentCatalogue.getText().equals("") || documentTitle.getText().equals("") || documentEditor.getText().equals("") || documentID.getText().equals("") || documentCategory.getText().equals("") || documentPublicationDate.getDate() == null || documentPurchaseDate.getDate() == null || documentOrderNumber.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Select a document!"); 
                } else {
                    int opt = JOptionPane.showConfirmDialog (null, "Are you sur want to Delete?","Delete",JOptionPane.YES_NO_OPTION);
                    if (opt == 0) {
                        isLongTrue(Long.parseLong(documentOrderNumber.getText()));
                        isLongTrue(Long.parseLong(documentID.getText()));
                        isIntTrue(Integer.parseInt(idDocumentCatalogue.getText()));
                        isIntTrue(Integer.parseInt(docValue.getText()));
                        boolean isDocLoaned = false;
                        try {
                            Obout.writeObject("main Document isDocLoaned");
                            Obout.writeObject(Integer.parseInt(idDocumentCatalogue.getText()));
                            isDocLoaned = (boolean)Obin.readObject();
                        } catch (IOException ex) {
                            serverDown();
                        }
                        if (!isDocLoaned) {
                            try {
                                Obout.writeObject("main Document deleteDocument");
                                Obout.writeObject(Integer.parseInt(idDocumentCatalogue.getText()));
                                Obout.writeObject(documentTitle.getText());
                                Obout.writeObject(documentEditor.getText());
                                Obout.writeObject(Long.parseLong(documentID.getText()));
                                Obout.writeObject(documentCategory.getText());
                                Obout.writeObject(documentStatus.getSelectedItem().toString());
                                Obout.writeObject(documentState.getSelectedItem().toString());
                                Obout.writeObject(documentPublicationDate.getDate());
                                Obout.writeObject(documentPurchaseDate.getDate());
                                Obout.writeObject(Long.parseLong(documentOrderNumber.getText()));
                                Obout.writeObject(Integer.parseInt(docValue.getText()));
                                Obout.writeObject(CUI.getDocId(documentjTable));

                            } catch (IOException ex) {
                                serverDown();
                            }
                            try {
                                Obout.writeObject("main Document setDocumentJTable");
                                Obout.writeObject(searchBarDocument.getText());
                                Obout.writeObject(documentSearchType.getSelectedIndex());
                                Obout.writeObject(CUI.searchStatuType(documentSearchStatusType));

                                String[] jTableResultDoc = (String[]) Obin.readObject();
                                CUI.setDocJTableR(jTableResultDoc, documentjTable);

                            } catch (IOException ex) {
                                serverDown();
                            }
                            CUI.setFeildDocumentNull(idDocumentCatalogue, documentTitle, documentEditor, documentID, documentCategory, documentPublicationDate, documentPurchaseDate, documentOrderNumber, documentCat, documentStatus, documentState, docValue, nbrDocCopy);
                        } else {
                            JOptionPane.showMessageDialog(null, "This Document is loaned, you can't delete it until the user return it!"); 
                        }
                        
                    }    
                }  
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "You can only put a number on ID Catalogue, ID, Order Number and Document Value!"); 
            }
        } else {
            JOptionPane.showMessageDialog(null, "This option is not unavailable for you");
        }
    }//GEN-LAST:event_deleteDocumentMouseClicked

    private void cancelDocumentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelDocumentMouseClicked
        CUI.setFeildDocumentNull(idDocumentCatalogue, documentTitle, documentEditor, documentID, documentCategory, documentPublicationDate, documentPurchaseDate, documentOrderNumber, documentCat, documentStatus, documentState, docValue, nbrDocCopy);
    }//GEN-LAST:event_cancelDocumentMouseClicked

    //---------------------------------------------------- END DOCUMENT -----------------------------------------------------------//
    //----------------------------------------------------- START USER -----------------------------------------------------------//
    
    private void searchBarUserKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchBarUserKeyReleased
        try {
            Obout.writeObject("main User setUserJTable");
            Obout.writeObject(searchBarUser.getText());
            Obout.writeObject(userSearchType.getSelectedIndex());
            Obout.writeObject(CUI.userState(searchBarUser.getText(), userState));
            
            String[] jTableResultUser = (String[]) Obin.readObject();
            CUI.setUsersJTableR(jTableResultUser, userJTable);
            
        } catch (Exception ex) {
            serverDown();
        }
    }//GEN-LAST:event_searchBarUserKeyReleased

    private void userStateItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_userStateItemStateChanged
        try {
            Obout.writeObject("main User setUserJTable");
            Obout.writeObject(searchBarUser.getText());
            Obout.writeObject(userState.getSelectedIndex());
            Obout.writeObject(CUI.userState(searchBarUser.getText(), userState));
            
            String[] jTableResultUser = (String[]) Obin.readObject();
            CUI.setUsersJTableR(jTableResultUser, userJTable);
            
        } catch (Exception ex) {
            serverDown();
        }
    }//GEN-LAST:event_userStateItemStateChanged

    private void userJTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userJTableMouseClicked
        DefaultTableModel model = (DefaultTableModel)userJTable.getModel();
        int selectedRowIndex = userJTable.getSelectedRow();
        
        id_exmp = model.getValueAt(selectedRowIndex, 1).toString();
        userID.setText(model.getValueAt(selectedRowIndex, 1).toString());
        userFirstName.setText(model.getValueAt(selectedRowIndex, 2).toString());
        userLastName.setText(model.getValueAt(selectedRowIndex, 3).toString());
        userTypeF.setSelectedItem(model.getValueAt(selectedRowIndex, 4).toString());
    }//GEN-LAST:event_userJTableMouseClicked

    public String isIdUserExist(long userID) {
        String result = null;
        try {
            Obout.writeObject("main User isIdUserExist");
            Obout.writeObject(userID);
            result = (String) Obin.readObject();
            
        } catch (Exception ex) {
            serverDown();
        }
        return result;
    }
    
    private void addUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addUserMouseClicked
        Sread = new String[1];
        if (l.adminType.equals("Principal")) {    
            try {        
                if (userID.getText().equals("") || userFirstName.getText().equals("") || userLastName.getText().equals("") ) {
                    JOptionPane.showMessageDialog(null, "Complit all the information of the user!"); 
                } else if (isIdUserExist(Long.parseLong(userID.getText())).equals("yes")) {
                    JOptionPane.showMessageDialog(null, "this ID exist!");
                } else {
                     try {
                            Obout.writeObject("main User isUserExist2");
                            Obout.writeObject(Long.parseLong(userID.getText()));
                            Obout.writeObject(userFirstName.getText());
                            Obout.writeObject(userLastName.getText());
                            Obout.writeObject(userTypeF.getSelectedItem().toString());
                            Sread[0] = (String)Obin.readObject();
                        } catch (IOException ex) {
                            serverDown();
                        }
                    if ( Sread[0].equals("no")) {
                        
                        try {
                            Obout.writeObject("main User addUserToDataBase");
                            Obout.writeObject(Long.parseLong(userID.getText()));
                            Obout.writeObject(userFirstName.getText());
                            Obout.writeObject(userLastName.getText());
                            Obout.writeObject(userTypeF.getSelectedItem().toString());
                        } catch (IOException ex) {
                            serverDown();
                        }
                        
                        try {
                            Obout.writeObject("main User setUserJTable");
                            Obout.writeObject(searchBarUser.getText());
                            Obout.writeObject(userSearchType.getSelectedIndex());
                            Obout.writeObject(CUI.userState(searchBarUser.getText(), userState));

                            String[] jTableResultUser = (String[]) Obin.readObject();
                            CUI.setUsersJTableR(jTableResultUser, userJTable);

                        } catch (IOException ex) {
                            serverDown();
                        }
                        CUI.setFeildUserNull(userID, userFirstName, userLastName, userTypeF);
                    } else {
                        JOptionPane.showMessageDialog(null, "This users already exist!");
                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "You can only put a number on ID!"); 
            }
        } else {
            JOptionPane.showMessageDialog(null, "This option is not unavailable for you");
        }
    }//GEN-LAST:event_addUserMouseClicked

    private void editUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editUserMouseClicked
        if (l.adminType.equals("Principal")) {    
            try {
                if (userID.getText().equals("") || userFirstName.getText().equals("") || userLastName.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Complit all the information of the document!"); 
                } else {
                    if (id_exmp.equals(userID.getText()) || isIdUserExist(Long.parseLong(userID.getText())).equals("no") ) {
                        try {
                            Obout.writeObject("main User editUser");
                            Obout.writeObject(Long.parseLong(userID.getText()));
                            Obout.writeObject(userFirstName.getText());
                            Obout.writeObject(userLastName.getText());
                            Obout.writeObject(userTypeF.getSelectedItem().toString());
                            Obout.writeObject(CUI.getUserId(userJTable));
                            
                        } catch (IOException ex) {
                            serverDown();
                        }
                        
                        try {
                            Obout.writeObject("main User setUserJTable");
                            Obout.writeObject(searchBarUser.getText());
                            Obout.writeObject(userSearchType.getSelectedIndex());
                            Obout.writeObject(CUI.userState(searchBarUser.getText(), userState));

                            String[] jTableResultUser = (String[]) Obin.readObject();
                            CUI.setUsersJTableR(jTableResultUser, userJTable);

                        } catch (IOException ex) {
                            serverDown();
                        }
                        CUI.setFeildUserNull(userID, userFirstName, userLastName, userTypeF);
                    } else {
                        JOptionPane.showMessageDialog(null, "This ID already exist!");
                    }

                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "You can only put a number on ID!"); 
            }
        } else {
            JOptionPane.showMessageDialog(null, "This option is not unavailable for you");
        }
    }//GEN-LAST:event_editUserMouseClicked

    private void deleteUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteUserMouseClicked
        if (l.adminType.equals("Principal")) {    
            try {    
                if (userID.getText().equals("") || userFirstName.getText().equals("") || userLastName.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Select a user..."); 
                } else {
                    int opt = JOptionPane.showConfirmDialog (null, "Are you sur want to Delete?","Delete",JOptionPane.YES_NO_OPTION);
                    if (opt == 0) {
                        isLongTrue(Long.parseLong(userID.getText()));
                        boolean isUserLoaned = false;
                        try {
                            Obout.writeObject("main User isUserLoaned");
                            Obout.writeObject(Long.parseLong(userID.getText()));
                            isUserLoaned = (boolean)Obin.readObject();
                            
                        } catch (IOException ex) {
                            serverDown();
                        }
                        if (!isUserLoaned) {
                            try {
                                Obout.writeObject("main User deleteUser");
                                Obout.writeObject(Long.parseLong(userID.getText()));
                                Obout.writeObject(userFirstName.getText());
                                Obout.writeObject(userLastName.getText());
                                Obout.writeObject(userTypeF.getSelectedItem().toString());
                                Obout.writeObject(CUI.getUserId(userJTable));
                            } catch (IOException ex) {
                                serverDown();
                            }
                            try {
                                Obout.writeObject("main User setUserJTable");
                                Obout.writeObject(searchBarUser.getText());
                                Obout.writeObject(userSearchType.getSelectedIndex());
                                Obout.writeObject(CUI.userState(searchBarUser.getText(), userState));

                                String[] jTableResultUser = (String[]) Obin.readObject();
                                CUI.setUsersJTableR(jTableResultUser, userJTable);
                            } catch (IOException ex) {
                                serverDown();
                            }
                            CUI.setFeildUserNull(userID, userFirstName, userLastName, userTypeF);
                        } else {
                            JOptionPane.showMessageDialog(null, "You can't delete this user until he return all the copies he loaned!");
                        }
                    }    
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "You can only put a number on ID!"); 
            }
        } else {
            JOptionPane.showMessageDialog(null, "This option is not unavailable for you");
        }
    }//GEN-LAST:event_deleteUserMouseClicked

    private void cancelUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelUserMouseClicked
        CUI.setFeildUserNull(userID, userFirstName, userLastName, userTypeF);
    }//GEN-LAST:event_cancelUserMouseClicked

    //------------------------------------------------------- END USER ------------------------------------------------------------//
    //----------------------------------------------------- START ADMIN -----------------------------------------------------------//
    
    private void searchBarAdminKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchBarAdminKeyReleased
        try {
            Obout.writeObject("main Admin setAdminJTable2");
            Obout.writeObject(searchBarAdmin.getText());
            Obout.writeObject(adminSearchType.getSelectedIndex());
            
            String[] jTableAdminResult = (String[]) Obin.readObject();
            CUI.setAdminsJTableR(jTableAdminResult, adminJTable);
        } catch (Exception ex) {
            serverDown();
        }
    }//GEN-LAST:event_searchBarAdminKeyReleased

    private void adminJTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_adminJTableMouseClicked
        DefaultTableModel model = (DefaultTableModel)adminJTable.getModel();
        int selectedRowIndex = adminJTable.getSelectedRow();
        
        adminID.setText(model.getValueAt(selectedRowIndex, 1).toString());
        adminUsername.setText(model.getValueAt(selectedRowIndex, 2).toString());
        adminFirstName.setText(model.getValueAt(selectedRowIndex, 3).toString());
        adminLastName.setText(model.getValueAt(selectedRowIndex, 4).toString());
        adminType.setSelectedItem(model.getValueAt(selectedRowIndex, 5).toString());
    }//GEN-LAST:event_adminJTableMouseClicked

    public String isIDExist() {
        String result = "";
        try {
            Obout.writeObject("main Admin isIDExist");
            Obout.writeObject(Long.parseLong(adminID.getText()));
            result =(String) Obin.readObject();
            
        } catch (Exception ex) {
            serverDown();
        }
        return result;
    }
    
    private void addAdminMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addAdminMouseClicked
        if (l.adminType.equalsIgnoreCase("Principal")) {
            try {
                if (adminID.getText().equals("") || adminUsername.getText().equals("") || adminFirstName.getText().equals("") || adminLastName.getText().equals("") || adminPassword.getText().equals("") || adminPasswordC.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Complit all the information of the admin!"); 
                } else if (!adminPasswordC.getText().equals(adminPassword.getText())) {
                    JOptionPane.showMessageDialog(null, "Confirm password does't match the password!"); 
                } else {
                    isLongTrue(Long.parseLong(adminID.getText()));
                    if (isIDExist().equals("yes")) {
                        JOptionPane.showMessageDialog(null, "this ID exist!");
                    } else {
                        Sread = new String[1];
                        try {
                            Obout.writeObject("main Admin isAdminExist");
                            Obout.writeObject(Long.parseLong(adminID.getText()));
                            Obout.writeObject(adminUsername.getText());
                            Obout.writeObject(adminFirstName.getText());
                            Obout.writeObject(adminLastName.getText());
                            Obout.writeObject(adminType.getSelectedItem().toString());
                            Obout.writeObject(adminPassword.getText());

                            Sread[0] = (String)Obin.readObject();

                        } catch (IOException ex) {
                            serverDown();
                        }
                        if (Sread[0].equals("no")) {

                            try {
                            Obout.writeObject("main Admin addAdminToDataBase");
                            Obout.writeObject(Long.parseLong(adminID.getText()));
                            Obout.writeObject(adminUsername.getText());
                            Obout.writeObject(adminFirstName.getText());
                            Obout.writeObject(adminLastName.getText());
                            Obout.writeObject(adminType.getSelectedItem().toString());
                            Obout.writeObject(adminPassword.getText());
                        } catch (IOException ex) {
                            serverDown();
                        }
                            try {
                                Obout.writeObject("main Admin setAdminJTable");

                                String[] jTableAdminResult = (String[])Obin.readObject();
                                CUI.setAdminsJTableR(jTableAdminResult, adminJTable);

                            } catch (IOException ex) {
                                serverDown();
                            }
                            CUI.setFeildAdminNull(adminID, adminUsername, adminFirstName, adminLastName, adminPassword, adminPasswordC, adminType);
                            CUI.setFeildAdminNull(adminID, adminUsername, adminFirstName, adminLastName, adminPassword, adminPasswordC, adminType);
                        } else {
                            JOptionPane.showMessageDialog(null, "This admin already exist!");
                        }
                    }
                }
                
            } catch (Exception e) {
                //JOptionPane.showMessageDialog(null, "Complit all the information of the admin!");
                JOptionPane.showMessageDialog(null, "You can only put a number on ID!"); 
            }
        } else {
            JOptionPane.showMessageDialog(null, "This option is not unavailable for you");
        } 
    }//GEN-LAST:event_addAdminMouseClicked

    private void editAdminMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editAdminMouseClicked
        if (l.adminType.equals("Principal")) {    
            try { 
                if (adminID.getText().equals("") || adminUsername.getText().equals("") || adminFirstName.getText().equals("") || adminLastName.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Complit all the information of the admin!"); 
                } else {
                    isLongTrue(Long.parseLong(adminID.getText()));
                    if (isIDExist().equals("yes") && CUI.getAdminId(adminJTable) != Long.parseLong(adminID.getText())) {
                        JOptionPane.showMessageDialog(null, "this ID exist!");
                    } else {
                        if (CUI.canEditAdmin(CUI.getAdminType(adminJTable))) {

                            Obout.writeObject("main Admin editAdmin");
                            Obout.writeObject(Long.parseLong(adminID.getText()));
                            Obout.writeObject(adminUsername.getText());
                            Obout.writeObject(adminFirstName.getText());
                            Obout.writeObject(adminLastName.getText());
                            Obout.writeObject(adminType.getSelectedItem().toString());
                            Obout.writeObject(CUI.getAdminId(adminJTable));

                            try {
                                Obout.writeObject("main Admin setAdminJTable");

                                String[] jTableAdminResult = (String[])Obin.readObject();
                                CUI.setAdminsJTableR(jTableAdminResult, adminJTable);

                            } catch (IOException ex) {
                                serverDown();
                            }
                            CUI.setFeildAdminNull(adminID, adminUsername, adminFirstName, adminLastName, adminPassword, adminPasswordC, adminType);
                        } else {
                            JOptionPane.showMessageDialog(null, "You can't Edit this Admin!");
                        } 
                    }
                }
                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "You can only put a number on ID!"); 
            }
        } else {
            JOptionPane.showMessageDialog(null, "This option is not unavailable for you");
        }
    }//GEN-LAST:event_editAdminMouseClicked

    private void deleteAdminMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteAdminMouseClicked
        if (l.adminType.equals("Principal")) {    
            try {        
                if (adminID.getText().equals("") || adminFirstName.getText().equals("") || adminLastName.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Select a admin..."); 
                } else {
                    
                    int opt = JOptionPane.showConfirmDialog (null, "Are you sur want to Delete?","Delete",JOptionPane.YES_NO_OPTION);
                    if (opt == 0) {
                        isLongTrue(Long.parseLong(adminID.getText()));
                        try {
                            Obout.writeObject("main Admin deleteAdmin");
                            Obout.writeObject(Long.parseLong(adminID.getText()));
                            Obout.writeObject(adminUsername.getText());
                            Obout.writeObject(adminFirstName.getText());
                            Obout.writeObject(adminLastName.getText());
                            Obout.writeObject(adminType.getSelectedItem().toString());
                            Obout.writeObject(CUI.getAdminId(adminJTable));
                        } catch (IOException ex) {
                            serverDown();
                        }
                        
                        try {
                            Obout.writeObject("main Admin setAdminJTable");
                            
                            String[] jTableAdminResult = (String[])Obin.readObject();
                            CUI.setAdminsJTableR(jTableAdminResult, adminJTable);

                        } catch (IOException ex) {
                            serverDown();
                        }
                        CUI.setFeildAdminNull(adminID, adminUsername, adminFirstName, adminLastName, adminPassword, adminPasswordC, adminType);
                    }    
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "You can only put a number on ID!"); 
            }
        } else {
            JOptionPane.showMessageDialog(null, "This option is not unavailable for you");
        }
    }//GEN-LAST:event_deleteAdminMouseClicked

    private void cancelAdminMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelAdminMouseClicked
        CUI.setFeildAdminNull(adminID, adminUsername, adminFirstName, adminLastName, adminPassword, adminPasswordC, adminType);
    }//GEN-LAST:event_cancelAdminMouseClicked

    private void searchBarUserPuniKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchBarUserPuniKeyReleased
        try {
            Obout.writeObject("main Punishment setPunishmentJTable");
            Obout.writeObject(searchBarUserPuni.getText());
            Obout.writeObject(puniSearchType.getSelectedIndex());
            Obout.writeObject(CUI.punishUserState(searchBarUserPuni.getText(), puniUserState));
                    
            String[] jTablePunishment = (String[]) Obin.readObject();
            CUI.setPunishmantJTableR(jTablePunishment, punishmentJTable);
        } catch (Exception ex) {
            serverDown();
        }
    }//GEN-LAST:event_searchBarUserPuniKeyReleased

    private void puniUserStateItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_puniUserStateItemStateChanged
        try {
            Obout.writeObject("main Punishment setPunishmentJTable");
            Obout.writeObject(searchBarUserPuni.getText());
            Obout.writeObject(puniSearchType.getSelectedIndex());
            Obout.writeObject(CUI.punishUserState(searchBarUserPuni.getText(), puniUserState));
            
            String[] jTablePunishment = (String[]) Obin.readObject();
            CUI.setPunishmantJTableR(jTablePunishment, punishmentJTable);           
        } catch (Exception ex) {
            serverDown();
        }
    }//GEN-LAST:event_puniUserStateItemStateChanged

    private void punishmentJTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_punishmentJTableMouseClicked
        DefaultTableModel model = (DefaultTableModel)punishmentJTable.getModel();
        int selectedRowIndex = punishmentJTable.getSelectedRow();
        
        userIdPuni.setText(model.getValueAt(selectedRowIndex, 1).toString());
        firstNamePuni.setText(model.getValueAt(selectedRowIndex, 2).toString());
        lastNamePuni.setText(model.getValueAt(selectedRowIndex, 3).toString());
        try {
            if (model.getValueAt(selectedRowIndex, 6).toString().equals("NULL")) {        
                startBan.setDate(new Date());
            } else {
                Date date = new SimpleDateFormat("yyyy-MM-dd").parse((String) model.getValueAt(selectedRowIndex, 6));
                startBan.setDate(date);
            }
            if (model.getValueAt(selectedRowIndex, 7).toString().equals("NULL")) {
                endBan.setDate(null);
            } else {
                Date date2 = new SimpleDateFormat("yyyy-MM-dd").parse((String) model.getValueAt(selectedRowIndex, 7));
                endBan.setDate(date2);
            }
        } catch (ParseException ex) {
            System.out.println("can't set Date...");
        }
        penaltyValue.setText(model.getValueAt(selectedRowIndex, 8).toString());
    }//GEN-LAST:event_punishmentJTableMouseClicked

    private void banPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_banPMouseClicked
        if (l.adminType.equalsIgnoreCase("Principal")) {
            if (userIdPuni.getText().equals("") || startBan.getDate() == null || endBan.getDate() == null) {
                JOptionPane.showMessageDialog(null, "Complit all the informations!");
            } else {
                try {
                    try {
                        Obout.writeObject("main Punishment banUser");
                        Obout.writeObject(Long.parseLong(userIdPuni.getText()));
                        Obout.writeObject(startBan.getDate());
                        Obout.writeObject(endBan.getDate());

                    } catch (Exception ex) {
                        serverDown();
                    }
                    try {
                        Obout.writeObject("main Punishment setPunishmentJTable");
                        Obout.writeObject(searchBarUserPuni.getText());
                        Obout.writeObject(puniSearchType.getSelectedIndex());
                        Obout.writeObject(CUI.punishUserState(searchBarUserPuni.getText(), puniUserState));

                        String[] jTablePunishment = (String[]) Obin.readObject();
                        CUI.setPunishmantJTableR(jTablePunishment, punishmentJTable);
                    } catch (Exception ex) {
                        serverDown();
                    }

                    CUI.setFeildUserPunishmentNull(userIdPuni, firstNamePuni, lastNamePuni, startBan, endBan, penaltyValue);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "something not right in the information you entered!");
                }
            }
            
        } else {
            JOptionPane.showMessageDialog(null, "This option is not unavailable for you");
        }
    }//GEN-LAST:event_banPMouseClicked

    private void unbanPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_unbanPMouseClicked
        if (l.adminType.equalsIgnoreCase("Principal")) {
            try {
                if (userIdPuni.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Select a user!");
                } else {
                    try {
                        Obout.writeObject("main Punishment unbanUser");
                        Obout.writeObject(Long.parseLong(userIdPuni.getText()));
                        Obout.writeObject(startBan.getDate());
                        Obout.writeObject(endBan.getDate());

                    } catch (Exception ex) {
                        serverDown();
                    }
                    try {
                        Obout.writeObject("main Punishment setPunishmentJTable");
                        Obout.writeObject(searchBarUserPuni.getText());
                        Obout.writeObject(puniSearchType.getSelectedIndex());
                        Obout.writeObject(CUI.punishUserState(searchBarUserPuni.getText(), puniUserState));

                        String[] jTablePunishment = (String[]) Obin.readObject();
                        CUI.setPunishmantJTableR(jTablePunishment, punishmentJTable);
                    } catch (Exception ex) {
                        serverDown();
                    }

                    CUI.setFeildUserPunishmentNull(userIdPuni, firstNamePuni, lastNamePuni, startBan, endBan, penaltyValue);
                }
                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Complit all the informations!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "This option is not unavailable for you");
        }
    }//GEN-LAST:event_unbanPMouseClicked

    private void editPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editPMouseClicked
        if (l.adminType.equalsIgnoreCase("Principal")) {
            if (userIdPuni.getText().equals("") || penaltyValue.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Complit all the informations!");
            } else {
                try {
                    isIntTrue(Integer.parseInt(penaltyValue.getText()));
                    try {
                        Obout.writeObject("main Punishment penaltyUserPunishment");
                        Obout.writeObject(Long.parseLong(userIdPuni.getText()));
                        Obout.writeObject(Integer.parseInt(penaltyValue.getText()));

                    } catch (Exception ex) {
                        serverDown();
                    }
                    try {
                        Obout.writeObject("main Punishment setPunishmentJTable");
                        Obout.writeObject(searchBarUserPuni.getText());
                        Obout.writeObject(puniSearchType.getSelectedIndex());
                        Obout.writeObject(CUI.punishUserState(searchBarUserPuni.getText(), puniUserState));

                        String[] jTablePunishment = (String[]) Obin.readObject();
                        CUI.setPunishmantJTableR(jTablePunishment, punishmentJTable);

                    } catch (Exception ex) {
                        serverDown();
                    }
                
                CUI.setFeildUserPunishmentNull(userIdPuni, firstNamePuni, lastNamePuni, startBan, endBan, penaltyValue);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Penalty value must be a number");
                }
            }    
        } else {
            JOptionPane.showMessageDialog(null, "This option is not unavailable for you");
        }
    }//GEN-LAST:event_editPMouseClicked

    private void cancelPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelPMouseClicked
        CUI.setFeildUserPunishmentNull(userIdPuni, firstNamePuni, lastNamePuni, startBan, endBan, penaltyValue);
    }//GEN-LAST:event_cancelPMouseClicked

    private void loanUserSearchBarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_loanUserSearchBarKeyReleased
        try {
            Obout.writeObject("main LoanBook setUserJTable");
            Obout.writeObject(loanUserSearchBar.getText());
            Obout.writeObject(loanUserSearchType.getSelectedIndex());
                
            String[] jTableResultloanBookUser = (String[]) Obin.readObject();
            CUI.setUsersJTableR(jTableResultloanBookUser, loanBookUserJTable);
        } catch (Exception ex) {
            serverDown();
        }
    }//GEN-LAST:event_loanUserSearchBarKeyReleased

    private void loanBookUserJTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loanBookUserJTableMouseClicked
        DefaultTableModel model = (DefaultTableModel)loanBookUserJTable.getModel();
        int selectedRowIndex = loanBookUserJTable.getSelectedRow();
        
        bkLoanUserID.setText(model.getValueAt(selectedRowIndex, 1).toString());
        bkLoanFirstName.setText(model.getValueAt(selectedRowIndex, 2).toString());
        bkLoanLastName.setText(model.getValueAt(selectedRowIndex, 3).toString());
        
        SimpleDateFormat format1 = new SimpleDateFormat("yyyy-MM-dd");
        String loanDate = format1.format(new Date());
        bkLoanDate.setText(loanDate);
        
        Calendar c = Calendar.getInstance();
        c.setTime(new Date());
        
        Sread = new String[1];
        nbR = new int[1];
        try {
            Obout.writeObject("main LoanBook getNumberOfLoanDays");
            Obout.writeObject(model.getValueAt(selectedRowIndex, 4).toString());
            nbR[0] = (int)Obin.readObject();
            
        } catch (Exception ex) {
            serverDown();
        }
        c.add(Calendar.DATE, nbR[0]); 
        Date returnDate  = c.getTime();
        bkLoanReDate.setDate(returnDate);
    }//GEN-LAST:event_loanBookUserJTableMouseClicked

    private void loanBookSearchBarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_loanBookSearchBarKeyReleased
        try {
            Obout.writeObject("main LoanBook setLoanBookJTable");
            Obout.writeObject(loanBookSearchBar.getText());
            Obout.writeObject(loanBookSearchType.getSelectedIndex());
                
            String[] jTableResultloanBook = (String[]) Obin.readObject();
            CUI.setLoanBookDocJTableR(jTableResultloanBook, loanBookJTable);  
        } catch (Exception ex) {
            serverDown();
        }
    }//GEN-LAST:event_loanBookSearchBarKeyReleased

    private void loanBookJTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loanBookJTableMouseClicked
        DefaultTableModel model = (DefaultTableModel)loanBookJTable.getModel();
        int selectedRowIndex = loanBookJTable.getSelectedRow();
        
        bkLoanIdCata.setText(model.getValueAt(selectedRowIndex, 1).toString());
        bkLoanTitle.setText(model.getValueAt(selectedRowIndex, 2).toString());
        bkLoanAutor.setText(model.getValueAt(selectedRowIndex, 3).toString());
    }//GEN-LAST:event_loanBookJTableMouseClicked

    private void loanBookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loanBookMouseClicked
        if (bkLoanUserID.getText().equals("") && bkLoanIdCata.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please select a book and a user!");
        } else if (bkLoanUserID.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please select a user!");
        } else if (bkLoanIdCata.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please select a book!");
        } else {
            try {
                Obout.writeObject("main LoanBook loanBookInDatabase");
                Obout.writeObject(Integer.parseInt(bkLoanIdCata.getText()));
                Obout.writeObject(Long.parseLong(bkLoanUserID.getText()));
                Obout.writeObject(bkLoanDate.getText());
                Obout.writeObject(bkLoanReDate.getDate());
                Obout.writeObject(CUI.getUserType(loanBookUserJTable));
                Obout.writeObject(CUI.getUserId(loanBookUserJTable));
            } catch (IOException ex) {
                serverDown();
            }
            try {
                Obout.writeObject("main LoanBook setLoanBookJTable");
                Obout.writeObject(loanBookSearchBar.getText());
                Obout.writeObject(loanBookSearchType.getSelectedIndex());
                
                String[] jTableResultloanBook = (String[]) Obin.readObject();
                CUI.setLoanBookDocJTableR(jTableResultloanBook, loanBookJTable);
            } catch (Exception ex) {
                serverDown();
            }
            try {
                Obout.writeObject("main LoanBook setUserJTable");
                Obout.writeObject(loanUserSearchBar.getText());
                Obout.writeObject(loanUserSearchType.getSelectedIndex());
                
                String[] jTableResultloanBookUser = (String[]) Obin.readObject();
                CUI.setUsersJTableR(jTableResultloanBookUser, loanBookUserJTable);
            } catch (Exception ex) {
                serverDown();
            }
            CUI.setLabelLoanBookNull(bkLoanUserID, bkLoanFirstName, bkLoanLastName, bkLoanTitle, bkLoanAutor, bkLoanIdCata, bkLoanDate, bkLoanReDate);
        }
    }//GEN-LAST:event_loanBookMouseClicked

    private void cancelLoanBookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelLoanBookMouseClicked
        CUI.setLabelLoanBookNull(bkLoanUserID, bkLoanFirstName, bkLoanLastName, bkLoanTitle, bkLoanAutor, bkLoanIdCata, bkLoanDate, bkLoanReDate);
    }//GEN-LAST:event_cancelLoanBookMouseClicked

    private void loanUserDocSearchBarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_loanUserDocSearchBarKeyReleased
        try {
            Obout.writeObject("main LoanDoc setUserJTable");
            Obout.writeObject(loanUserDocSearchBar.getText());
            Obout.writeObject(loanUserDocSearchType.getSelectedIndex());
                
            String[] jTableResultloanDocUser = (String[]) Obin.readObject();
            CUI.setUsersJTableR(jTableResultloanDocUser, loanDocumentUserJTable);
        } catch (Exception ex) {
            serverDown();
        }
    }//GEN-LAST:event_loanUserDocSearchBarKeyReleased

    private void loanDocumentUserJTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loanDocumentUserJTableMouseClicked
        DefaultTableModel model = (DefaultTableModel)loanDocumentUserJTable.getModel();
        int selectedRowIndex = loanDocumentUserJTable.getSelectedRow();
        
        dcLoanUserID.setText(model.getValueAt(selectedRowIndex, 1).toString());
        dcLoanFirstName.setText(model.getValueAt(selectedRowIndex, 2).toString());
        dcLoanLastName.setText(model.getValueAt(selectedRowIndex, 3).toString());
        
        SimpleDateFormat format1 = new SimpleDateFormat("yyyy-MM-dd");
        String loanDate = format1.format(new Date());
        dcLoanDate.setText(loanDate);
        
        Calendar c = Calendar.getInstance();
        c.setTime(new Date());
        
        Sread = new String[1];
        nbR = new int[1];
        try {
            Obout.writeObject("main LoanDoc getNumberOfLoanDays");
            Obout.writeObject(model.getValueAt(selectedRowIndex, 4).toString());
            nbR[0] = (int)Obin.readObject();
            
        } catch (Exception ex) {
            serverDown();
        }
        c.add(Calendar.DATE, nbR[0]);        
        Date returnDate  = c.getTime();
        dcLoanReDate.setDate(returnDate);
    }//GEN-LAST:event_loanDocumentUserJTableMouseClicked

    private void loanDocumentSearchBarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_loanDocumentSearchBarKeyReleased
        try {
            Obout.writeObject("main LoanDoc setLoanDocJTable");
            Obout.writeObject(loanDocumentSearchBar.getText());
            Obout.writeObject(loanDocumentSearchType.getSelectedIndex());
                
            String[] jTableResultloanDoc = (String[]) Obin.readObject();
            CUI.setLoanBookDocJTableR(jTableResultloanDoc, loanDocumentJTable);
        } catch (Exception ex) {
            serverDown();
        }
    }//GEN-LAST:event_loanDocumentSearchBarKeyReleased

    private void loanDocumentJTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loanDocumentJTableMouseClicked
        DefaultTableModel model = (DefaultTableModel)loanDocumentJTable.getModel();
        int selectedRowIndex = loanDocumentJTable.getSelectedRow();
        
        dcLoanIdCata.setText(model.getValueAt(selectedRowIndex, 1).toString());
        dcLoanTitle.setText(model.getValueAt(selectedRowIndex, 2).toString());
        dcLoanEditor.setText(model.getValueAt(selectedRowIndex, 3).toString());
    }//GEN-LAST:event_loanDocumentJTableMouseClicked

    private void loanDocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loanDocMouseClicked
        if (dcLoanUserID.getText().equals("") && dcLoanIdCata.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please select a document and a user!");
        } else if (dcLoanUserID.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please select a user!");
        } else if (dcLoanIdCata.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please select a document!");
        } else {
            try {
                Obout.writeObject("main LoanDoc loanDocInDatabase");
                Obout.writeObject(Integer.parseInt(dcLoanIdCata.getText()));
                Obout.writeObject(Long.parseLong(dcLoanUserID.getText()));
                Obout.writeObject(dcLoanDate.getText());
                Obout.writeObject(dcLoanReDate.getDate());
                Obout.writeObject(CUI.getUserType(loanDocumentUserJTable));
                Obout.writeObject(CUI.getUserId(loanDocumentUserJTable));
            } catch (IOException ex) {
                serverDown();
            }
            try {
                Obout.writeObject("main LoanDoc setLoanDocJTable");
                Obout.writeObject(loanDocumentSearchBar.getText());
                Obout.writeObject(loanDocumentSearchType.getSelectedIndex());
                
                String[] jTableResultloanDoc = (String[]) Obin.readObject();
                CUI.setLoanBookDocJTableR(jTableResultloanDoc, loanDocumentJTable);
            } catch (Exception ex) {
                serverDown();
            }
            CUI.setLabelLoanDocNull(dcLoanUserID, dcLoanFirstName, dcLoanLastName, dcLoanTitle, dcLoanEditor, dcLoanIdCata, dcLoanDate, bkLoanReDate);
            try {
                Obout.writeObject("main LoanDoc setUserJTable");
                Obout.writeObject(loanUserDocSearchBar.getText());
                Obout.writeObject(loanUserDocSearchType.getSelectedIndex());
                
                String[] jTableResultloanDocUser = (String[]) Obin.readObject();
                CUI.setUsersJTableR(jTableResultloanDocUser, loanDocumentUserJTable);
            } catch (Exception ex) {
                serverDown();
            }
        }
    }//GEN-LAST:event_loanDocMouseClicked

    private void cancelLoanDocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelLoanDocMouseClicked
        CUI.setLabelLoanDocNull(dcLoanUserID, dcLoanFirstName, dcLoanLastName, dcLoanTitle, dcLoanEditor, dcLoanIdCata, dcLoanDate, bkLoanReDate);
    }//GEN-LAST:event_cancelLoanDocMouseClicked

    private void returnUserSearchBarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_returnUserSearchBarKeyReleased
        try {
            Obout.writeObject("main ReturnBook setUserJTable");
            Obout.writeObject(returnUserSearchBar.getText());
            Obout.writeObject(returnUserSearchType.getSelectedIndex());
                
            String[] jTableResultReturnUser = (String[]) Obin.readObject();
            CUI.setUsersJTableR(jTableResultReturnUser, returnBookUserJTable);
        } catch (Exception ex) {
            serverDown();
        }
    }//GEN-LAST:event_returnUserSearchBarKeyReleased

    private void returnBookUserJTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_returnBookUserJTableMouseClicked
        DefaultTableModel model = (DefaultTableModel)returnBookUserJTable.getModel();
        int selectedRowIndex = returnBookUserJTable.getSelectedRow();

        CUI.setLabelReturnBookNull(bkreturnUserID, bkreturnFirstName, bkreturnLastName, bkreturnTitle, bkreturnAutor, bkreturnIdCata, returnBookState, bkreturnUserType, bkRDate);
        
        bkreturnUserID.setText(model.getValueAt(selectedRowIndex, 1).toString());
        bkreturnFirstName.setText(model.getValueAt(selectedRowIndex, 2).toString());
        bkreturnLastName.setText(model.getValueAt(selectedRowIndex, 3).toString());
        bkreturnUserType.setText(model.getValueAt(selectedRowIndex, 4).toString());
        
        returnBookSearchBar.setEnabled(true);
        
        try {
            Obout.writeObject("main ReturnBook setReturnBookJTable2");
            Obout.writeObject(returnBookSearchBar.getText());
            Obout.writeObject(Long.parseLong(bkreturnUserID.getText()));
            Obout.writeObject(returnBookSearchType.getSelectedIndex());
                
            String[] jTableResultReturnBook = (String[]) Obin.readObject();
            CUI.setReturnBookDocJTableR(jTableResultReturnBook, returnBookJTable);   
        } catch (Exception ex) {
            serverDown();
        }
    }//GEN-LAST:event_returnBookUserJTableMouseClicked

    private void returnBookSearchBarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_returnBookSearchBarKeyReleased
        try {
            Obout.writeObject("main ReturnBook setReturnBookJTable2");
            Obout.writeObject(returnBookSearchBar.getText());
            Obout.writeObject(Long.parseLong(bkreturnUserID.getText()));
            Obout.writeObject(returnBookSearchType.getSelectedIndex());

            String[] jTableResultReturnBook = (String[]) Obin.readObject();
            CUI.setReturnBookDocJTableR(jTableResultReturnBook, returnBookJTable);  
        } catch (Exception ex) {
            serverDown();
        }
    }//GEN-LAST:event_returnBookSearchBarKeyReleased

    private void returnBookJTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_returnBookJTableMouseClicked
        DefaultTableModel model = (DefaultTableModel)returnBookJTable.getModel();
        int selectedRowIndex = returnBookJTable.getSelectedRow();
        
        bkreturnIdCata.setText(model.getValueAt(selectedRowIndex, 1).toString());
        bkreturnTitle.setText(model.getValueAt(selectedRowIndex, 2).toString());
        bkreturnAutor.setText(model.getValueAt(selectedRowIndex, 3).toString());
        bkreturnUserStatus.setText(model.getValueAt(selectedRowIndex, 5).toString());
        returnBookState.setSelectedItem(model.getValueAt(selectedRowIndex, 6).toString());
        try {
            Date date = new SimpleDateFormat("yyyy-MM-dd").parse((String) model.getValueAt(selectedRowIndex, 9));
            bkRDate.setDate(date);
        } catch (ParseException ex) {
            System.out.println("can't set Date...");
        }
    }//GEN-LAST:event_returnBookJTableMouseClicked

    private void returnBookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_returnBookMouseClicked
        if (bkreturnUserID.getText().equals("") && bkreturnIdCata.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please select a book and a user!");
        } else if (bkreturnUserID.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please select a user!");
        } else if (bkreturnIdCata.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please select a book!");
        } 
        else {
            nbR = new int[1];
            try {
                Obout.writeObject("main ReturnBook penalty");
                Obout.writeObject(Integer.parseInt(bkreturnIdCata.getText()));
                
                String BookStateR = (String) Obin.readObject();
                int BookStateIndex = CUI.getStateIndex(BookStateR, returnBookState);
                
                Obout.writeObject(BookStateIndex);
                Obout.writeObject(returnBookState.getSelectedIndex());
                
                nbR[0] = (int)Obin.readObject();

            } catch (Exception ex) {
                serverDown();
            }
            int p= nbR[0];
            if (p != 0 && p != 1) {
                JOptionPane.showMessageDialog(null, "The User: "+bkreturnFirstName.getText()+" "+bkreturnLastName.getText()+". get a penalty cost: "+p+" DA");
                try {
                    Obout.writeObject("main ReturnBook setpenalty");
                    Obout.writeObject(Long.parseLong(bkreturnUserID.getText()));
                    Obout.writeObject(p);

                } catch (IOException ex) {
                    serverDown();
                }
            }
            try {
                Obout.writeObject("main ReturnBook returnBookInDatabase");
                
                Obout.writeObject(Integer.parseInt(bkreturnIdCata.getText()));
                Obout.writeObject(Long.parseLong(bkreturnUserID.getText()));
                Obout.writeObject(returnBookState.getSelectedItem().toString());
                Obout.writeObject(bkreturnUserType.getText());
                
            }catch (IOException ex) {
                serverDown();
            }

            if (bkreturnUserStatus.getText().equals("late")) {
                JOptionPane.showMessageDialog(null, "The User:    "+bkreturnFirstName.getText()+" "+bkreturnLastName.getText()+"    was late to Return:    "+bkreturnTitle.getText()+".\nGo to Punishment to take action");
                bkreturnUserStatus.setText("");
            }
            
            try {
                Obout.writeObject("main ReturnBook setUserJTable");
                Obout.writeObject(returnUserSearchBar.getText());
                Obout.writeObject(returnUserSearchType.getSelectedIndex());
                
                String[] jTableResultReturnUser = (String[]) Obin.readObject();
                CUI.setUsersJTableR(jTableResultReturnUser, returnBookUserJTable);

            } catch (Exception ex) {
                serverDown();
            }
            try {
                Obout.writeObject("main ReturnBook setReturnBookJTable2");
                Obout.writeObject(returnBookSearchBar.getText());
                Obout.writeObject(Long.parseLong(bkreturnUserID.getText()));
                Obout.writeObject(returnBookSearchType.getSelectedIndex());
                
                String[] jTableResultReturnBook = (String[]) Obin.readObject();
                CUI.setReturnBookDocJTableR(jTableResultReturnBook, returnBookJTable);
                
            } catch (Exception ex) {
                serverDown();
            }
            Sread = new String[1];
            try {
                Obout.writeObject("main ReturnBook checkIdJTable");
                Obout.writeObject(CUI.checkIdJTableR(bkreturnUserID, returnBookUserJTable));
                Sread[0] = (String) Obin.readObject();

            } catch (Exception ex) {
                serverDown();
            }
            if (Sread[0].equals("no")) {
                CUI.setLabelReturnBookNull(bkreturnUserID, bkreturnFirstName, bkreturnLastName, bkreturnTitle, bkreturnAutor, bkreturnIdCata, returnBookState, bkreturnUserType, bkRDate);
                returnBookSearchBar.setEnabled(false);
            } else 
            {
                if (Sread[0].equals("yes")) {
                    CUI.setBookNull(bkreturnTitle, bkreturnAutor, bkreturnIdCata, returnBookState, bkRDate);
                }
            }   
        }
    }//GEN-LAST:event_returnBookMouseClicked

    private void editRDateBookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editRDateBookMouseClicked
        if (bkreturnUserID.getText().equals("") && bkreturnIdCata.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please select a book and a user!");
        } else if (bkreturnUserID.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please select a user!");
        } else if (bkreturnIdCata.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please select a book!");
        } else {
            if (l.adminType.equalsIgnoreCase("Principal")) {
                if (bkRDate.getDate() == null ) {
                    JOptionPane.showMessageDialog(null, "Please set a return date!");
                } else {

                    try {
                        Obout.writeObject("main ReturnBook editBookReturnDate");
                        Obout.writeObject(bkRDate.getDate());
                        Obout.writeObject(Integer.parseInt(bkreturnIdCata.getText()));

                    } catch (IOException ex) {
                        serverDown();
                    }
                    
                    try {
                        Obout.writeObject("main setLateBook");
                    } catch (IOException ex) {
                        serverDown();
                    }

                    try {
                    Obout.writeObject("main ReturnBook setReturnBookJTable2");
                    Obout.writeObject(returnBookSearchBar.getText());
                    Obout.writeObject(Long.parseLong(bkreturnUserID.getText()));
                    Obout.writeObject(returnBookSearchType.getSelectedIndex());

                    String[] jTableResultReturnBook = (String[]) Obin.readObject();
                    CUI.setReturnBookDocJTableR(jTableResultReturnBook, returnBookJTable);

                } catch (Exception ex) {
                    serverDown();
                }
                    CUI.setBookNull(bkreturnTitle, bkreturnAutor, bkreturnIdCata, returnBookState, bkRDate);
                }
            } else {
                JOptionPane.showMessageDialog(null, "This option is not unavailable for you");
            }
        }
    }//GEN-LAST:event_editRDateBookMouseClicked

    private void cancelReturnBookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelReturnBookMouseClicked
        CUI.setLabelReturnBookNull(bkreturnUserID, bkreturnFirstName, bkreturnLastName, bkreturnTitle, bkreturnAutor, bkreturnIdCata, returnBookState, bkreturnUserType, bkRDate);
        returnBookSearchBar.setEnabled(false);
    }//GEN-LAST:event_cancelReturnBookMouseClicked

    private void returnDocUserSearchBarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_returnDocUserSearchBarKeyReleased
        try {
            Obout.writeObject("main ReturnDoc setUserJTable");
            Obout.writeObject(returnDocUserSearchBar.getText());
            Obout.writeObject(returnDocUserSearchType.getSelectedIndex());
                
            String[] jTableResultReturnUser = (String[]) Obin.readObject();
            CUI.setUsersJTableR(jTableResultReturnUser, returnDocUserJTable);
        } catch (Exception ex) {
            serverDown();
        }
    }//GEN-LAST:event_returnDocUserSearchBarKeyReleased

    private void returnDocUserJTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_returnDocUserJTableMouseClicked
        DefaultTableModel model = (DefaultTableModel)returnDocUserJTable.getModel();
        int selectedRowIndex = returnDocUserJTable.getSelectedRow();

        CUI.setLabelReturnDocNull(dcreturnUserID, dcreturnFirstName, dcreturnLastName, dcreturnTitle, dcreturnEditor, dcreturnIdCata, returnDocState, dcreturnUserType, dcRDate);
        
        dcreturnUserID.setText(model.getValueAt(selectedRowIndex, 1).toString());
        dcreturnFirstName.setText(model.getValueAt(selectedRowIndex, 2).toString());
        dcreturnLastName.setText(model.getValueAt(selectedRowIndex, 3).toString());
        dcreturnUserType.setText(model.getValueAt(selectedRowIndex, 4).toString());
        
        returnDocSearchBar.setEnabled(true);
        try {
            Obout.writeObject("main ReturnDoc setReturnDocJTable");
            Obout.writeObject(returnDocSearchBar.getText());
            Obout.writeObject(Long.parseLong(dcreturnUserID.getText()));
            Obout.writeObject(returnDockSearchType.getSelectedIndex());
                
            String[] jTableResultReturnDoc = (String[]) Obin.readObject();
            CUI.setReturnBookDocJTableR(jTableResultReturnDoc, returnDocJTable);    
        } catch (Exception ex) {
            serverDown();
        }
    }//GEN-LAST:event_returnDocUserJTableMouseClicked

    private void returnDocSearchBarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_returnDocSearchBarKeyReleased
        try {
            Obout.writeObject("main ReturnDoc setReturnDocJTable");
            Obout.writeObject(returnDocSearchBar.getText());
            Obout.writeObject(Long.parseLong(dcreturnUserID.getText()));
            Obout.writeObject(returnDockSearchType.getSelectedIndex());

            String[] jTableResultReturnDoc = (String[]) Obin.readObject();
            CUI.setReturnBookDocJTableR(jTableResultReturnDoc, returnDocJTable); 
        } catch (Exception ex) {
            serverDown();
        }
    }//GEN-LAST:event_returnDocSearchBarKeyReleased

    private void returnDocJTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_returnDocJTableMouseClicked
        DefaultTableModel model = (DefaultTableModel)returnDocJTable.getModel();
        int selectedRowIndex = returnDocJTable.getSelectedRow();
        
        dcreturnIdCata.setText(model.getValueAt(selectedRowIndex, 1).toString());
        dcreturnTitle.setText(model.getValueAt(selectedRowIndex, 2).toString());
        dcreturnEditor.setText(model.getValueAt(selectedRowIndex, 3).toString());
        dcreturnUserStatus.setText(model.getValueAt(selectedRowIndex, 5).toString());
        returnDocState.setSelectedItem(model.getValueAt(selectedRowIndex, 6).toString());
        try {
            Date date = new SimpleDateFormat("yyyy-MM-dd").parse((String) model.getValueAt(selectedRowIndex, 9));
            dcRDate.setDate(date);
        } catch (ParseException ex) {
            System.out.println("can't set Date...");
        }
    }//GEN-LAST:event_returnDocJTableMouseClicked

    private void returnDocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_returnDocMouseClicked
        if (dcreturnUserID.getText().equals("") && dcreturnIdCata.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please select a document and a user!");
        } else if (dcreturnUserID.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please select a user!");
        } else if (dcreturnIdCata.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please select a document!");
        } else {
            nbR = new int[1];
            try {
                Obout.writeObject("main ReturnDoc penalty");
                Obout.writeObject(Integer.parseInt(dcreturnIdCata.getText()));
                
                String DocStateR = (String) Obin.readObject();
                int DocStateIndex = CUI.getStateIndex(DocStateR, returnDocState);
                
                Obout.writeObject(DocStateIndex);
                Obout.writeObject(returnDocState.getSelectedIndex());
                
                nbR[0] = (int)Obin.readObject();

            } catch (Exception ex) {
                serverDown();
            }
            int p = nbR[0];
            if (p != 0 && p != 1) {
                JOptionPane.showMessageDialog(null, "The User: "+dcreturnFirstName.getText()+" "+dcreturnLastName.getText()+". get a penalty cost: "+p+" DA");
                try {
                    Obout.writeObject("main ReturnDoc setpenalty");
                    Obout.writeObject(Long.parseLong(dcreturnUserID.getText()));
                    Obout.writeObject(p);

                } catch (IOException ex) {
                    serverDown();
                }
            }
            try {
                Obout.writeObject("main ReturnDoc returnDocInDatabase");
                Obout.writeObject(Integer.parseInt(dcreturnIdCata.getText()));
                Obout.writeObject(Long.parseLong(dcreturnUserID.getText()));
                Obout.writeObject(returnDocState.getSelectedItem().toString());
                Obout.writeObject(dcreturnUserType.getText());
            }catch (IOException ex) {
                serverDown();
            }
            
            if (dcreturnUserStatus.getText().equals("late")) {
                JOptionPane.showMessageDialog(null, "The User:    "+bkreturnFirstName.getText()+" "+bkreturnLastName.getText()+"    was late to Return:    "+bkreturnTitle.getText()+".\nGo to Punishment to take action");
                bkreturnUserStatus.setText("");
            }
            
            try {
                Obout.writeObject("main ReturnDoc setUserJTable");
                Obout.writeObject(returnDocUserSearchBar.getText());
                Obout.writeObject(returnDocUserSearchType.getSelectedIndex());
                
                String[] jTableResultReturnUser = (String[]) Obin.readObject();
                CUI.setUsersJTableR(jTableResultReturnUser, returnDocUserJTable);

            } catch (Exception ex) {
                serverDown();
            }
            try {
                Obout.writeObject("main ReturnDoc setReturnDocJTable");
                Obout.writeObject(returnDocSearchBar.getText());
                Obout.writeObject(Long.parseLong(dcreturnUserID.getText()));
                Obout.writeObject(returnDockSearchType.getSelectedIndex());
                
                String[] jTableResultReturnDoc = (String[]) Obin.readObject();
                CUI.setReturnBookDocJTableR(jTableResultReturnDoc, returnDocJTable);
                
            } catch (Exception ex) {
                serverDown();
            }
            Sread = new String[1];
            try {
                Obout.writeObject("main ReturnDoc checkIdJTable");
                Obout.writeObject(CUI.checkIdJTableR(dcreturnUserID, returnDocUserJTable));
                Sread[0] = (String)Obin.readObject();

            } catch (Exception ex) {
                serverDown();
            }
            if (Sread[0].equals("no")) {
                CUI.setLabelReturnDocNull(dcreturnUserID, dcreturnFirstName, dcreturnLastName, dcreturnTitle, dcreturnEditor, dcreturnIdCata, returnDocState, dcreturnUserType, dcRDate);
                returnDocSearchBar.setEnabled(false);
            } else {
                CUI.setDocNull(dcreturnTitle, dcreturnEditor, dcreturnIdCata, returnDocState, dcRDate);
            }
        }
    }//GEN-LAST:event_returnDocMouseClicked

    private void editRDateDocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editRDateDocMouseClicked
        if (dcreturnUserID.getText().equals("") && dcreturnIdCata.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please select a document and a user!");
        } else if (dcreturnUserID.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please select a user!");
        } else if (dcreturnIdCata.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please select a document!");
        } else {
            if (l.adminType.equalsIgnoreCase("Principal")) {
                if (dcRDate.getDate() == null) {
                    JOptionPane.showMessageDialog(null, "Please set a return date!");
                } else {
                    try {
                        Obout.writeObject("main ReturnDoc editDocReturnDate");
                        Obout.writeObject(dcRDate.getDate());
                        Obout.writeObject(Integer.parseInt(dcreturnIdCata.getText()));

                    } catch (IOException ex) {
                        serverDown();
                    }
                    
                    try {
                        Obout.writeObject("main setLateDoc");
                    } catch (IOException ex) {
                        serverDown();
                    }
                    
                    try {
                        Obout.writeObject("main ReturnDoc setReturnDocJTable");
                        Obout.writeObject(returnDocSearchBar.getText());
                        Obout.writeObject(Long.parseLong(dcreturnUserID.getText()));
                        Obout.writeObject(returnDockSearchType.getSelectedIndex());

                        String[] jTableResultReturnDoc = (String[]) Obin.readObject();
                        CUI.setReturnBookDocJTableR(jTableResultReturnDoc, returnDocJTable);

                    } catch (Exception ex) {
                        serverDown();
                    }
                    
                    CUI.setDocNull(dcreturnTitle, dcreturnEditor, dcreturnIdCata, returnDocState, dcRDate);
                }
            } else {
                JOptionPane.showMessageDialog(null, "This option is not unavailable for you");
            }
        }
    }//GEN-LAST:event_editRDateDocMouseClicked

    private void cancelReturnDocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelReturnDocMouseClicked
        CUI.setLabelReturnDocNull(dcreturnUserID, dcreturnFirstName, dcreturnLastName, dcreturnTitle, dcreturnEditor, dcreturnIdCata, returnDocState, dcreturnUserType, dcRDate);
        returnDocSearchBar.setEnabled(false);
    }//GEN-LAST:event_cancelReturnDocMouseClicked

   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BookL;
    private javax.swing.JPanel BookR;
    private javax.swing.JTable BookjTable;
    private javax.swing.JLabel addAdmin;
    private javax.swing.JLabel addBook;
    private javax.swing.JLabel addDocument;
    private javax.swing.JLabel addUser;
    private javax.swing.JTextField adminFirstName;
    private javax.swing.JTextField adminID;
    private javax.swing.JTable adminJTable;
    private javax.swing.JTextField adminLastName;
    private javax.swing.JPasswordField adminPassword;
    private javax.swing.JPasswordField adminPasswordC;
    private javax.swing.JComboBox<String> adminSearchType;
    private javax.swing.JComboBox<String> adminType;
    private javax.swing.JTextField adminUsername;
    private javax.swing.JPanel admins;
    private javax.swing.JLabel banP;
    private javax.swing.JLabel bkLoanAutor;
    private javax.swing.JLabel bkLoanDate;
    private javax.swing.JLabel bkLoanFirstName;
    private javax.swing.JLabel bkLoanIdCata;
    private javax.swing.JLabel bkLoanLastName;
    private com.toedter.calendar.JDateChooser bkLoanReDate;
    private javax.swing.JLabel bkLoanTitle;
    private javax.swing.JLabel bkLoanUserID;
    private com.toedter.calendar.JDateChooser bkRDate;
    private javax.swing.JLabel bkreturnAutor;
    private javax.swing.JLabel bkreturnFirstName;
    private javax.swing.JLabel bkreturnIdCata;
    private javax.swing.JLabel bkreturnLastName;
    private javax.swing.JLabel bkreturnTitle;
    private javax.swing.JLabel bkreturnUserID;
    private javax.swing.JLabel bkreturnUserStatus;
    private javax.swing.JLabel bkreturnUserType;
    private javax.swing.JPanel book;
    private javax.swing.JTextField bookAutor;
    private javax.swing.JComboBox<String> bookCat;
    private javax.swing.JTextField bookCategory;
    private javax.swing.JTextField bookISBN;
    private javax.swing.JTextField bookOrderNumber;
    private com.toedter.calendar.JDateChooser bookPurchase;
    private javax.swing.JComboBox<String> bookSearchStatusType;
    private javax.swing.JComboBox<String> bookSearchType;
    private javax.swing.JComboBox<String> bookState;
    private javax.swing.JComboBox<String> bookStatus;
    private javax.swing.JTextField bookTitle;
    private javax.swing.JTextField bookValue;
    private javax.swing.JLabel cancelAdmin;
    private javax.swing.JLabel cancelDocument;
    private javax.swing.JLabel cancelLoanBook;
    private javax.swing.JLabel cancelLoanDoc;
    private javax.swing.JLabel cancelP;
    private javax.swing.JLabel cancelReturnBook;
    private javax.swing.JLabel cancelReturnDoc;
    private javax.swing.JLabel cancelUser;
    private javax.swing.JPanel catalogue;
    private javax.swing.JLabel closeIcon;
    private javax.swing.JPanel closePanel;
    private javax.swing.JLabel dcLoanDate;
    private javax.swing.JLabel dcLoanEditor;
    private javax.swing.JLabel dcLoanFirstName;
    private javax.swing.JLabel dcLoanIdCata;
    private javax.swing.JLabel dcLoanLastName;
    private com.toedter.calendar.JDateChooser dcLoanReDate;
    private javax.swing.JLabel dcLoanTitle;
    private javax.swing.JLabel dcLoanUserID;
    private com.toedter.calendar.JDateChooser dcRDate;
    private javax.swing.JLabel dcreturnEditor;
    private javax.swing.JLabel dcreturnFirstName;
    private javax.swing.JLabel dcreturnIdCata;
    private javax.swing.JLabel dcreturnLastName;
    private javax.swing.JLabel dcreturnTitle;
    private javax.swing.JLabel dcreturnUserID;
    private javax.swing.JLabel dcreturnUserStatus;
    private javax.swing.JLabel dcreturnUserType;
    private javax.swing.JLabel deleteAdmin;
    private javax.swing.JLabel deleteBook;
    private javax.swing.JLabel deleteDocument;
    private javax.swing.JLabel deleteUser;
    private javax.swing.JTextField docValue;
    private javax.swing.JPanel document;
    private javax.swing.JComboBox<String> documentCat;
    private javax.swing.JTextField documentCategory;
    private javax.swing.JTextField documentEditor;
    private javax.swing.JTextField documentID;
    private javax.swing.JPanel documentL;
    private javax.swing.JTextField documentOrderNumber;
    private com.toedter.calendar.JDateChooser documentPublicationDate;
    private com.toedter.calendar.JDateChooser documentPurchaseDate;
    private javax.swing.JPanel documentR;
    private javax.swing.JComboBox<String> documentSearchStatusType;
    private javax.swing.JComboBox<String> documentSearchType;
    private javax.swing.JComboBox<String> documentState;
    private javax.swing.JComboBox<String> documentStatus;
    private javax.swing.JTextField documentTitle;
    private javax.swing.JTable documentjTable;
    private javax.swing.JLabel editAdmin;
    private javax.swing.JLabel editBook;
    private javax.swing.JLabel editDocument;
    private javax.swing.JLabel editP;
    private javax.swing.JLabel editRDateBook;
    private javax.swing.JLabel editRDateDoc;
    private javax.swing.JLabel editUser;
    private com.toedter.calendar.JDateChooser endBan;
    private javax.swing.JLabel firstNamePuni;
    private javax.swing.JLabel goPu;
    private javax.swing.JPanel home;
    private javax.swing.JTextField idDocumentCatalogue;
    private javax.swing.JTextField idbookCatalogue;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel100;
    private javax.swing.JLabel jLabel101;
    private javax.swing.JLabel jLabel102;
    private javax.swing.JLabel jLabel103;
    private javax.swing.JLabel jLabel104;
    private javax.swing.JLabel jLabel105;
    private javax.swing.JLabel jLabel106;
    private javax.swing.JLabel jLabel107;
    private javax.swing.JLabel jLabel108;
    private javax.swing.JLabel jLabel109;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel110;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JLabel jLabel112;
    private javax.swing.JLabel jLabel113;
    private javax.swing.JLabel jLabel114;
    private javax.swing.JLabel jLabel115;
    private javax.swing.JLabel jLabel116;
    private javax.swing.JLabel jLabel117;
    private javax.swing.JLabel jLabel118;
    private javax.swing.JLabel jLabel119;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel120;
    private javax.swing.JLabel jLabel121;
    private javax.swing.JLabel jLabel122;
    private javax.swing.JLabel jLabel123;
    private javax.swing.JLabel jLabel124;
    private javax.swing.JLabel jLabel125;
    private javax.swing.JLabel jLabel126;
    private javax.swing.JLabel jLabel128;
    private javax.swing.JLabel jLabel129;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel131;
    private javax.swing.JLabel jLabel133;
    private javax.swing.JLabel jLabel134;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JLabel jLabel92;
    private javax.swing.JLabel jLabel93;
    private javax.swing.JLabel jLabel94;
    private javax.swing.JLabel jLabel95;
    private javax.swing.JLabel jLabel96;
    private javax.swing.JLabel jLabel97;
    private javax.swing.JLabel jLabel98;
    private javax.swing.JLabel jLabel99;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel36;
    private javax.swing.JPanel jPanel37;
    private javax.swing.JPanel jPanel38;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel40;
    private javax.swing.JPanel jPanel43;
    private javax.swing.JPanel jPanel44;
    private javax.swing.JPanel jPanel45;
    private javax.swing.JPanel jPanel46;
    private javax.swing.JPanel jPanel47;
    private javax.swing.JPanel jPanel48;
    private javax.swing.JPanel jPanel49;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel50;
    private javax.swing.JPanel jPanel51;
    private javax.swing.JPanel jPanel52;
    private javax.swing.JPanel jPanel53;
    private javax.swing.JPanel jPanel54;
    private javax.swing.JPanel jPanel55;
    private javax.swing.JPanel jPanel56;
    private javax.swing.JPanel jPanel57;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JSeparator jSeparator13;
    private javax.swing.JSeparator jSeparator14;
    private javax.swing.JSeparator jSeparator15;
    private javax.swing.JSeparator jSeparator16;
    private javax.swing.JSeparator jSeparator17;
    private javax.swing.JSeparator jSeparator18;
    private javax.swing.JSeparator jSeparator19;
    private javax.swing.JSeparator jSeparator20;
    private javax.swing.JSeparator jSeparator21;
    private javax.swing.JSeparator jSeparator22;
    private javax.swing.JSeparator jSeparator23;
    private javax.swing.JSeparator jSeparator24;
    private javax.swing.JSeparator jSeparator27;
    private javax.swing.JSeparator jSeparator28;
    private javax.swing.JSeparator jSeparator29;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JLabel jlab;
    private javax.swing.JLabel jlabel;
    private javax.swing.JLabel laDate;
    private javax.swing.JLabel lastNamePuni;
    private javax.swing.JPanel loan;
    private javax.swing.JLabel loanBook;
    private javax.swing.JTable loanBookJTable;
    private javax.swing.JTextField loanBookSearchBar;
    private javax.swing.JComboBox<String> loanBookSearchType;
    private javax.swing.JTable loanBookUserJTable;
    private javax.swing.JLabel loanDoc;
    private javax.swing.JTable loanDocumentJTable;
    private javax.swing.JTextField loanDocumentSearchBar;
    private javax.swing.JComboBox<String> loanDocumentSearchType;
    private javax.swing.JTable loanDocumentUserJTable;
    private javax.swing.JTextField loanUserDocSearchBar;
    private javax.swing.JComboBox<String> loanUserDocSearchType;
    private javax.swing.JLabel loanUserSearch;
    private javax.swing.JTextField loanUserSearchBar;
    private javax.swing.JLabel loanUserSearchBar2;
    private javax.swing.JComboBox<String> loanUserSearchType;
    private javax.swing.JPanel maxPanel;
    private javax.swing.JPanel minPanel;
    private javax.swing.JSpinner nbrBookCopy;
    private javax.swing.JSpinner nbrDocCopy;
    private javax.swing.JLabel notificationAlert;
    private javax.swing.JLabel numberOfAdmins;
    private javax.swing.JLabel numberOfAdminsOnline;
    private javax.swing.JLabel numberOfBooks;
    private javax.swing.JLabel numberOfDocuments;
    private javax.swing.JLabel numberOfLoanedBooks;
    private javax.swing.JLabel numberOfLoanedDocuments;
    private javax.swing.JLabel numberOfUsers;
    private javax.swing.JLabel numberOfUsersActive;
    private javax.swing.JPanel panelAdmins;
    private javax.swing.JPanel panelCatalogue;
    private javax.swing.JPanel panelHome;
    private javax.swing.JPanel panelLoan;
    private javax.swing.JPanel panelPunishment;
    private javax.swing.JPanel panelReturn;
    private javax.swing.JPanel panelUsers;
    private javax.swing.JPanel parentMain;
    private javax.swing.JTextField penaltyValue;
    private javax.swing.JComboBox<String> puniSearchType;
    private javax.swing.JComboBox<String> puniUserState;
    private javax.swing.JPanel punishment;
    private javax.swing.JTable punishmentJTable;
    private javax.swing.JPanel reeturn;
    private javax.swing.JPanel reloadPanel;
    private javax.swing.JLabel returnBook;
    private javax.swing.JTable returnBookJTable;
    private javax.swing.JTextField returnBookSearchBar;
    private javax.swing.JComboBox<String> returnBookSearchType;
    private javax.swing.JComboBox<String> returnBookState;
    private javax.swing.JTable returnBookUserJTable;
    private javax.swing.JLabel returnDoc;
    private javax.swing.JTable returnDocJTable;
    private javax.swing.JTextField returnDocSearchBar;
    private javax.swing.JComboBox<String> returnDocState;
    private javax.swing.JTable returnDocUserJTable;
    private javax.swing.JTextField returnDocUserSearchBar;
    private javax.swing.JComboBox<String> returnDocUserSearchType;
    private javax.swing.JComboBox<String> returnDockSearchType;
    private javax.swing.JTextField returnUserSearchBar;
    private javax.swing.JComboBox<String> returnUserSearchType;
    private javax.swing.JTextField searchBarAdmin;
    private javax.swing.JTextField searchBarBook;
    private javax.swing.JTextField searchBarDocument;
    private javax.swing.JTextField searchBarUser;
    private javax.swing.JTextField searchBarUserPuni;
    private javax.swing.JPanel selectAdmins;
    private javax.swing.JPanel selectCatalogue;
    private javax.swing.JPanel selectHome;
    private javax.swing.JPanel selectLoan;
    private javax.swing.JPanel selectPunishment;
    private javax.swing.JPanel selectReturn;
    private javax.swing.JPanel selectUsers;
    private com.toedter.calendar.JDateChooser startBan;
    private javax.swing.JLabel unbanP;
    private javax.swing.JTextField userFirstName;
    private javax.swing.JTextField userID;
    private javax.swing.JLabel userIdPuni;
    private javax.swing.JTable userJTable;
    private javax.swing.JTextField userLastName;
    private javax.swing.JLabel userName;
    private javax.swing.JComboBox<String> userSearchType;
    private javax.swing.JComboBox<String> userState;
    private javax.swing.JComboBox<String> userTypeF;
    private javax.swing.JPanel users;
    // End of variables declaration//GEN-END:variables
}
